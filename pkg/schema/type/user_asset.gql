# Represents a user.
type UserAsset implements 
  Commentable,
  Deleteable,
  Labelable,
  Node,
  NotificationSubject,
  Referenceable,
  Renameable,
  Searchable,
  StudyNode,
  UniformResourceLocatable,
  Updateable 
{
  # The activity associated with the user asset, if any.
  activity: Activity

  # Identifies the user asset's number within its associated activity, if any.
  activityNumber: Int

  # Returns a list of comments for the current user asset.
  comments(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for comments returned from the connection.
    orderBy: CommentOrder
  ): CommentConnection!

  # Identifies the date and time when the object was created.
  createdAt: Time!

  # The description of the asset.
  description: String!

  # The description of the asset rendered to HTML.
  descriptionHTML: HTML!

  # Source url for use with hyperlinks.
  href: URI!

  id: ID!

  # Returns a list of labels for the current user asset.
  labels(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Filtering options for labels returned from the connection.
    filterBy: LabelFilters

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for labels returned from the connection.
    orderBy: LabelOrder
  ): LabelConnection!

  # The name of this asset.
  name: String!

  # The original name of this asset when uploaded.
  originalName: String!

  # The owner of this asset.
  owner: User!

  # The HTTP path for this asset.
  resourcePath: URI!

  # The byte size of the asset.
  size: Int!

  # The study associated with this asset.
  study: Study!

  # The subtype of this asset.
  subtype: String!

  # Returns a list of events associated with the user asset.
  timeline(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for events returned from the connection.
    orderBy: EventOrder
  ): UserAssetTimelineConnection!

  # The type of this asset.
  type: String!

  # Identifies the date and time when the object was last updated.
  updatedAt: Time!

  # The HTTP URL for this asset.
  url: URI!

  # Can the viewer delete this object?
  viewerCanDelete: Boolean!

  # Can the viewer update this object?
  viewerCanUpdate: Boolean!

  # The viewer's current working draft comment.
  viewerNewComment: Comment!
}

# An edge type for UserAsset.
type UserAssetEdge implements Edge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: UserAsset
}

# A connection type for UserAsset.
type UserAssetConnection implements Connection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [UserAssetEdge]

  # A list of nodes.
  nodes: [UserAsset]

  # The total count of items in the connection.
  totalCount: Int!
}
