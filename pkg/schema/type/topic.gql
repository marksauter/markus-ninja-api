# Represents a topic.
type Topic implements 
  Node,
  Searchable,
  UniformResourceLocatable 
{
  # Identifies the date and time when the object was created.
  createdAt: Time!

  # The number of courses with this topic.
  courseCount: Int!

  # The description of the topic.
  description: String!

  id: ID!

  # The name of the topic.
  name: String!

  # The HTTP path for this topic.
  resourcePath: URI!

  # The number of studies with this topic.
  studyCount: Int!

  # Returns a list of topicables associated with the topic.
  topicables(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for topicables returned from the connection.
    orderBy: TopicableOrder

    # Query to search topicables by.
    search: String

    # The types of topicable topicables to retrieve.
    type: TopicableType!
  ): TopicableConnection!

  # Identifies when the topic was last updated.
  updatedAt: Time!

  # The HTTP URL for this topic.
  url: URI!

  # Can the viewer update this object?
  viewerCanUpdate: Boolean!
}

# An edge type for Topic.
type TopicEdge implements Edge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: Topic
}

# A connection type for Topic.
type TopicConnection implements Connection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [TopicEdge]

  # A list of nodes.
  nodes: [Topic]

  # The total count of items in the connection.
  totalCount: Int!
}
