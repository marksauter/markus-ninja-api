# Represents a event between two nodes.
type Event implements Node {
  # The action of the event.
  action: String!

  # Identifies the date and time when the object was created.
  createdAt: Time!

  id: ID!

  # The source of the event.
  source: EventSourceable!

  # The target of the event.
  target: EventTargetable!

  # The user who performed the event.
  user: User!
}

# An edge type for Event.
type EventEdge implements Edge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: Event
}

# A connection type for Event.
type EventConnection implements Connection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [EventEdge]

  # A list of nodes.
  nodes: [Event]

  # The total count of items in the connection.
  totalCount: Int!
}
