# Represents a user.
type User implements Node, UniformResourceLocatable {
  # A list of studies the user has appled.
  appled(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for studies returned from the connection.
    orderBy: AppleOrder
  ): AppledStudyConnection!

  # Returns a list of assets that the user owns.
  assets(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for assets returned from the connection.
    orderBy: UserAssetOrder
  ): UserAssetConnection!

  # The user's public profile bio.
  bio: String!

  # The user's public profile bio as HTML.
  bioHTML: HTML!

  # Identifies the date and time when the object was created.
  createdAt: Time!

  # The user's public profile email.
  email: String!

  # Returns a list of the user's emails.
  emails(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int
  ): EmailConnection!

  # A list of studies the user is enrolled in.
  enrolled(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for studies returned from the connection.
    orderBy: StudyOrder
  ): EnrolledStudyConnection!

  id: ID!

  # Whether or not this user is a site administrator.
  isSiteAdmin: Boolean!

  # Whether or not this user is the viewing user.
  isViewer: Boolean!

  # Returns a list of lessons that the user owns.
  lessons(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for lessons returned from the connection.
    orderBy: LessonOrder
  ): LessonConnection!

  # The username used to login.
  login: String!

  # The user's public profile name.
  name: String!

  # A list of users the user is tutored by.
  pupils(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for users returned from the connection.
    orderBy: PupilOrder
  ): PupilConnection!

  # The HTTP path for this user.
  resourcePath: URI!

  # Find study by its name.
  study(
    # Name of study to find.
    name: String!
  ): Study

  # A list of studies that the user owns.
  studies(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for studies returned from the connection.
    orderBy: StudyOrder
  ): StudyConnection!

  # A list of users the user is tutored by.
  tutors(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first n elements form the list.
    first: Int

    # Returns the last n elements form the list.
    last: Int

    # Ordering options for users returned from the connection.
    orderBy: TutorOrder
  ): TutorConnection!

  # Identifies the date and time when the object was last updated.
  updatedAt: Time!

  # The HTTP URL for this user.
  url: URI!
}

# An edge type for User.
type UserEdge implements Edge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: User!
}

# A connection type for User.
type UserConnection implements Connection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [UserEdge]

  # A list of nodes.
  nodes: [User]

  # The total count of items in the connection.
  totalCount: Int!
}
