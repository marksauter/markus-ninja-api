schema {
  query: Query
  mutation: Mutation
}
type Query {
  # Lookup node by ID.
  node(
    # The ID of the node.
    id: ID!
  ): Node

  # Lookup nodes by a list of IDs.
  nodes(
    # The list of IDs.
    ids: [ID!]!
  ): [Node]!

  # Lookup a given study by the owner and study name.
  study(
    # The name of the study.
    name: String!
    # The login field of a user.
    owner: String!
  ): Study

  # Lookup a user by login. 
  user(
    # The login of the user.
    login: String!
  ): User

  # The currently authenticated user.
  viewer: User!
}
type Mutation {
  addUserEmail(input: AddUserEmailInput!): AddUserEmailOutput!
  deleteUserEmail(input: DeleteUserEmailInput!): ID
  updateUserEmail(input: UpdateUserEmailInput!): UserEmail!

  createLesson(input: CreateLessonInput!): Lesson
  deleteLesson(input: DeleteLessonInput!): ID
  updateLesson(input: UpdateLessonInput!): Lesson!

  createStudy(input: CreateStudyInput!): Study
  deleteStudy(input: DeleteStudyInput!): ID
  updateStudy(input: UpdateStudyInput!): Study!

  createUser(input: CreateUserInput!): User
  deleteUser(input: DeleteUserInput!): ID
  updateUser(input: UpdateUserInput!): User!

  requestEmailVerification(input: RequestEmailVerificationInput!): EVT!
  requestPasswordReset(input: RequestPasswordResetInput!): PRT!
  resetPassword(input: ResetPasswordInput!): Boolean!
}
