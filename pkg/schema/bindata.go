// Code generated by go-bindata.
// sources:
// enums/email_type.gql
// enums/lesson_comment_order_field.gql
// enums/lesson_order_field.gql
// enums/order_direction.gql
// enums/study_order_field.gql
// input/add_email.gql
// input/add_lesson_comment.gql
// input/create_lesson.gql
// input/create_study.gql
// input/create_user.gql
// input/delete_email.gql
// input/delete_lesson.gql
// input/delete_lesson_comment.gql
// input/delete_study.gql
// input/delete_user.gql
// input/lesson_comment_order.gql
// input/lesson_order.gql
// input/move_lesson.gql
// input/request_email_verification.gql
// input/request_password_reset.gql
// input/reset_password.gql
// input/study_order.gql
// input/update_email.gql
// input/update_lesson.gql
// input/update_lesson_comment.gql
// input/update_study.gql
// input/update_user.gql
// interfaces/connection.gql
// interfaces/deletable.gql
// interfaces/edge.gql
// interfaces/node.gql
// interfaces/study_node.gql
// interfaces/token.gql
// interfaces/uniform_resource_locatable.gql
// interfaces/updateable.gql
// scalars/html.gql
// scalars/time.gql
// scalars/uri.gql
// schema.gql
// type/add_email_payload.gql
// type/add_lesson_comment_payload.gql
// type/delete_email_payload.gql
// type/delete_lesson_commentpayload.gql
// type/delete_lesson_payload.gql
// type/delete_study_payload.gql
// type/email.gql
// type/email_verification_token.gql
// type/lesson.gql
// type/lesson_comment.gql
// type/page_info.gql
// type/password_reset_token.gql
// type/study.gql
// type/user.gql
// type/user_asset.gql
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _enumsEmail_typeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x41\x0a\xc2\x30\x14\x05\xf7\x39\xc5\x83\x6e\xa5\x77\xa8\xd2\x85\x88\x50\x4a\x05\x5d\xa6\xc9\x2f\x06\xdb\x24\x24\xff\x23\x41\xbc\xbb\x14\x11\x5c\x74\x39\x30\xc3\x54\xe8\x42\xce\x6e\x9c\x09\x5c\x22\x65\x84\x09\xb4\x68\x37\xe7\x5a\x91\x97\x05\xed\x0a\x43\x89\x84\x97\x02\xaa\x2f\x43\x32\x59\x4c\x21\x61\xd4\xe6\x21\x11\xda\x98\x20\x9e\x91\xc9\x48\x72\x5c\x6a\x05\xec\x9b\xc3\xe9\xd2\xa9\xbf\x4a\x5b\x4b\x16\x1c\x7e\xfa\x0e\xa3\x30\x9e\x8e\xef\x41\x18\x93\x78\xc3\x2e\xf8\xb5\x6d\xaf\x43\xdf\xa8\xad\x61\x4c\x6e\xd1\xa9\x6c\x1e\xbb\xfe\x78\x6e\xfa\x9b\x7a\xab\x4f\x00\x00\x00\xff\xff\xf0\xd4\xd4\xbb\xd7\x00\x00\x00")

func enumsEmail_typeGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumsEmail_typeGql,
		"enums/email_type.gql",
	)
}

func enumsEmail_typeGql() (*asset, error) {
	bytes, err := enumsEmail_typeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/email_type.gql", size: 215, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsLesson_comment_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xc1\x0a\x82\x40\x14\x45\xf7\xf3\x15\x17\xdc\xfb\x0f\xa2\xb6\x0a\x92\xb0\x75\xe8\xcc\x05\x07\x9c\xf7\x64\x66\x24\x22\xfa\xf7\xd0\xa8\x45\x8b\xb6\xef\x9d\x73\x6e\x81\x2e\xea\xc2\x98\x3d\x13\xc6\x3b\x6e\x93\xb7\x13\x66\xa6\xa4\x02\xab\x21\x50\x32\xac\x8a\xd0\x66\xaf\x92\x60\x07\xc1\x48\x68\x74\x8c\x74\xa5\xa1\xac\x01\xc7\x9d\xaf\xdf\xf8\x69\x7b\x1d\x3c\x67\x87\x87\x01\x0a\xec\x87\x9f\xe6\x3e\x66\x23\x87\xad\x8a\xec\x03\x4b\x03\xd4\xe7\xb6\xea\xdb\xe6\x5a\xf5\xe6\xbf\xb9\x2e\x6e\xc8\xfc\x7a\x97\xae\xf9\x78\x4f\xf3\x0a\x00\x00\xff\xff\x03\x05\xcf\xa7\xd3\x00\x00\x00")

func enumsLesson_comment_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumsLesson_comment_order_fieldGql,
		"enums/lesson_comment_order_field.gql",
	)
}

func enumsLesson_comment_order_fieldGql() (*asset, error) {
	bytes, err := enumsLesson_comment_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/lesson_comment_order_field.gql", size: 211, mode: os.FileMode(420), modTime: time.Unix(1527328628, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsLesson_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcc\x4d\x0a\x83\x30\x18\x84\xe1\x7d\x4e\x31\xe0\xde\x3b\xd8\x6a\x57\xfd\x11\xd1\x75\xd1\x64\xc0\x80\x7e\x91\x24\x52\x4a\xe9\xdd\x8b\xa1\xed\xaa\xdd\x0e\xef\x3c\x19\x6a\xef\x16\xfa\x68\x19\x30\xdc\x71\x1b\xad\x1e\x31\x31\x04\x27\xd0\x4e\x84\x3a\x5a\x27\x01\xba\x17\x0c\x84\xf3\x86\x9e\x26\x57\x94\x75\xc6\x31\x75\x97\x6d\x3b\x58\x4e\x06\x0f\x05\x64\x48\xc3\x1b\x49\xaa\xf6\xec\x37\x06\xd1\xce\xcc\x15\xb0\x6f\xaa\xa2\xad\xca\x6b\xd1\xaa\xdf\x0f\x59\xe7\x81\x7e\x4b\xcf\xdd\x69\x57\x35\x7f\xb2\x75\x31\x7d\xe4\x97\xed\xea\xf2\xc3\x3e\xd5\x2b\x00\x00\xff\xff\xab\x71\x4b\xbf\xdb\x00\x00\x00")

func enumsLesson_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumsLesson_order_fieldGql,
		"enums/lesson_order_field.gql",
	)
}

func enumsLesson_order_fieldGql() (*asset, error) {
	bytes, err := enumsLesson_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/lesson_order_field.gql", size: 219, mode: os.FileMode(420), modTime: time.Unix(1527374779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsOrder_directionGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\x31\x8e\x83\x40\x0c\x85\xe1\xde\xa7\x78\x12\xfd\xde\x61\x17\xb6\x4e\x24\x4e\x30\x99\x31\x60\x09\x6c\x34\x1e\x40\x51\x94\xbb\x47\x28\x09\x45\xba\xb4\x96\xdf\xf7\x57\x38\x9b\xbb\x5c\x46\x46\x92\xcc\xb1\x88\xa9\x43\x14\xdb\x20\x71\x40\x31\x58\x4e\x9c\x11\x30\x8a\x17\x58\x07\x29\x3c\x39\xb6\x81\x15\x73\xb6\x55\x12\x27\x04\x7d\xbe\xfd\x5d\xa9\x42\xc8\xfd\x32\xb1\x16\x62\x5d\x26\x9c\xf6\x7b\xf3\xa6\x71\x23\xa0\x42\x3b\x73\x94\x4e\xd8\xf7\x65\xf0\xc8\x9a\x44\xfb\x57\xaa\xb3\x3d\xd7\xcb\xca\x87\x7a\x98\x3f\x04\xfc\xb6\x35\x7d\x2a\x48\xfc\xa5\xd2\xfc\xb7\x35\xdd\xe9\x11\x00\x00\xff\xff\xad\x7c\xcb\xda\x00\x01\x00\x00")

func enumsOrder_directionGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumsOrder_directionGql,
		"enums/order_direction.gql",
	)
}

func enumsOrder_directionGql() (*asset, error) {
	bytes, err := enumsOrder_directionGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/order_direction.gql", size: 256, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsStudy_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x4d\x0e\x82\x30\x10\x46\xf7\x3d\xc5\x97\xb0\xe7\x0e\x0d\xe0\x4e\x24\x8a\x6e\x4d\xe9\x4c\x42\x13\x99\x92\x52\x34\xc4\x78\x77\x03\xfe\x6d\xd4\xed\x97\xf7\xde\x4c\x82\x2a\xf8\x9e\x43\x74\x3c\xa0\x99\x70\x69\x9d\x6d\x31\xc4\x91\x26\x58\x2f\xc2\x36\x3a\x2f\x03\xac\x11\x34\x0c\x1f\x88\x03\x53\xaa\x58\xc6\x0e\xbb\x19\xdb\xcc\xd3\xca\xf1\x89\x70\x55\x40\x82\x65\x58\x12\xcf\xa6\xa1\xb3\x11\xcb\x88\xae\xe3\x54\x01\x3a\x3f\xe8\x32\x2b\xf2\xa3\xae\xd5\x77\xc3\x06\x36\xf3\xdd\xb7\x92\x6d\x0b\x5d\xff\x33\xc4\x3c\xc0\x52\xaf\x8b\x1f\xc8\xd8\x93\x89\x9f\x2f\xf6\x55\xfe\x4a\xde\xd4\x3d\x00\x00\xff\xff\xf4\xfc\xdd\x91\x07\x01\x00\x00")

func enumsStudy_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumsStudy_order_fieldGql,
		"enums/study_order_field.gql",
	)
}

func enumsStudy_order_fieldGql() (*asset, error) {
	bytes, err := enumsStudy_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/study_order_field.gql", size: 263, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputAdd_emailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x4c\x49\x71\xcd\x4d\xcc\xcc\xd1\xe3\xca\x04\x4b\xc0\xf8\x10\x65\xd5\x5c\x0a\x0a\xca\x0a\x61\x89\x39\xa5\xa9\x0a\xf9\x69\x0a\x25\x19\xa9\x0a\xa9\x20\x59\x85\xc4\x94\x94\xa2\xd4\xe2\x62\x85\x92\x7c\x10\x53\x8f\x4b\x01\x22\x6e\xa5\x10\x5c\x52\x94\x99\x97\xae\xc8\x55\xcb\x05\x08\x00\x00\xff\xff\x67\x92\xc9\xb4\x6b\x00\x00\x00")

func inputAdd_emailGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputAdd_emailGql,
		"input/add_email.gql",
	)
}

func inputAdd_emailGql() (*asset, error) {
	bytes, err := inputAdd_emailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/add_email.gql", size: 107, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputAdd_lesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcc\x41\x0a\x82\x50\x14\x85\xe1\xf9\x5b\xc5\x2f\xce\x5b\x80\xb3\xc8\xc9\x83\x68\x52\x2b\xa8\x77\x4d\x21\xef\x15\xbd\x41\x12\xed\x3d\x52\x5e\x03\xa7\x87\xff\x3b\x25\x51\x87\xa7\xe3\xf3\x20\x34\x36\xb2\x4f\xe9\x28\xd3\x64\x7a\xb0\xbe\x17\xf5\x5d\xe8\x96\x60\xbb\xaf\xec\x1d\xa0\xe4\xd2\x0a\x2e\x2f\xc7\x1a\xbc\x15\x6e\x99\xc2\xd5\xd2\x5c\x71\xf6\xb1\xd3\x7b\x11\xfe\xf5\xc9\x92\x10\xeb\x0c\x1e\xcb\x33\x6e\x99\x62\xfa\xd3\xeb\x1e\x53\x45\xac\x8b\xf0\x09\xdf\x00\x00\x00\xff\xff\x78\x6f\x65\x2c\xae\x00\x00\x00")

func inputAdd_lesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputAdd_lesson_commentGql,
		"input/add_lesson_comment.gql",
	)
}

func inputAdd_lesson_commentGql() (*asset, error) {
	bytes, err := inputAdd_lesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/add_lesson_comment.gql", size: 174, mode: os.FileMode(420), modTime: time.Unix(1527434064, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputCreate_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x2e\x4a\x4d\x2c\x49\xf5\x49\x2d\x2e\xce\xcf\xd3\xe3\xca\x04\x4b\x22\x8b\x41\x94\x57\x73\x29\x28\x24\xe5\xa7\x54\x5a\x29\x80\x40\x70\x49\x51\x66\x5e\x3a\x97\x82\x42\x71\x49\x69\x4a\xa5\x67\x8a\x95\x82\x82\xa7\x8b\x22\x97\x82\x42\x49\x66\x49\x4e\xaa\x15\x42\x89\x22\x57\x2d\x17\x20\x00\x00\xff\xff\xae\x5e\x3b\xfc\x72\x00\x00\x00")

func inputCreate_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputCreate_lessonGql,
		"input/create_lesson.gql",
	)
}

func inputCreate_lessonGql() (*asset, error) {
	bytes, err := inputCreate_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/create_lesson.gql", size: 114, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputCreate_studyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x2e\x4a\x4d\x2c\x49\x0d\x2e\x29\x4d\xa9\xd4\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\xa4\xa4\x16\x27\x17\x65\x16\x94\x64\xe6\xe7\x59\x29\x28\x04\x97\x14\x65\xe6\xa5\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\xc0\x00\x44\x58\x91\xab\x96\x0b\x10\x00\x00\xff\xff\x74\x2b\x3e\x91\x68\x00\x00\x00")

func inputCreate_studyGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputCreate_studyGql,
		"input/create_study.gql",
	)
}

func inputCreate_studyGql() (*asset, error) {
	bytes, err := inputCreate_studyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/create_study.gql", size: 104, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputCreate_userGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x2e\x4a\x4d\x2c\x49\x0d\x2d\x4e\x2d\xd2\xe3\xca\x04\x4b\x21\x44\x20\x4a\xab\xb9\x14\x14\x52\x73\x13\x33\x73\xac\x14\x40\x20\xb8\xa4\x28\x33\x2f\x5d\x91\x4b\x41\x21\x27\x3f\x3d\x33\x0f\x5d\xb0\x20\xb1\xb8\xb8\x3c\xbf\x28\xc5\x0a\x21\x58\xcb\x05\x08\x00\x00\xff\xff\x39\x13\x48\x49\x76\x00\x00\x00")

func inputCreate_userGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputCreate_userGql,
		"input/create_user.gql",
	)
}

func inputCreate_userGql() (*asset, error) {
	bytes, err := inputCreate_userGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/create_user.gql", size: 118, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_emailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\x75\xcd\x4d\xcc\xcc\xd1\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\x28\x2b\x78\xa6\x28\xe4\xa7\x29\x94\x64\xa4\x2a\xa4\x42\x54\x2b\x40\x18\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\x01\xcc\x46\xb6\x5d\x00\x00\x00")

func inputDelete_emailGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_emailGql,
		"input/delete_email.gql",
	)
}

func inputDelete_emailGql() (*asset, error) {
	bytes, err := inputDelete_emailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_email.gql", size: 93, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\xf5\x49\x2d\x2e\xce\xcf\xd3\xe3\xca\x04\x4b\x22\x8b\x41\x94\x57\x73\x29\x28\x28\x2b\x78\xba\x28\xe4\xa7\x29\x94\x64\xa4\x2a\xe4\x40\xd5\x2b\x40\x59\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xaf\x74\x88\x1e\x61\x00\x00\x00")

func inputDelete_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_lessonGql,
		"input/delete_lesson.gql",
	)
}

func inputDelete_lessonGql() (*asset, error) {
	bytes, err := inputDelete_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_lesson.gql", size: 97, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_lesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\xf5\x49\x2d\x2e\xce\xcf\x73\xce\xcf\xcd\x4d\xcd\x2b\xd1\xe3\xca\x04\xab\xc1\x22\x05\xd1\x5c\xcd\xa5\xa0\xa0\xac\xe0\xe9\xa2\x90\x9f\xa6\x50\x92\x91\xaa\x90\x03\x56\xa2\x90\x0c\xd3\xae\x00\x15\x81\x69\x4a\xb1\x52\xf0\x74\x51\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x57\x6b\x20\x56\x7e\x00\x00\x00")

func inputDelete_lesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_lesson_commentGql,
		"input/delete_lesson_comment.gql",
	)
}

func inputDelete_lesson_commentGql() (*asset, error) {
	bytes, err := inputDelete_lesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_lesson_comment.gql", size: 126, mode: os.FileMode(420), modTime: time.Unix(1527610238, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_studyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\x0d\x2e\x29\x4d\xa9\xd4\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\x28\x2b\x78\xba\x28\xe4\xa7\x29\x94\x64\xa4\x2a\x14\x43\x54\x2b\x40\x18\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\x55\x52\x35\x43\x5d\x00\x00\x00")

func inputDelete_studyGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_studyGql,
		"input/delete_study.gql",
	)
}

func inputDelete_studyGql() (*asset, error) {
	bytes, err := inputDelete_studyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_study.gql", size: 93, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_userGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\x0d\x2d\x4e\x2d\xd2\xe3\xca\x04\x4b\x21\x44\x20\x4a\xab\xb9\x14\x14\x94\x15\x3c\x5d\x14\xf2\xd3\x14\x4a\x32\x52\x15\x4a\xc1\x6a\x15\xc0\xb4\x67\x8a\x95\x82\xa7\x8b\x22\x57\x2d\x17\x20\x00\x00\xff\xff\x40\xdb\x11\xa9\x59\x00\x00\x00")

func inputDelete_userGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_userGql,
		"input/delete_user.gql",
	)
}

func inputDelete_userGql() (*asset, error) {
	bytes, err := inputDelete_userGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_user.gql", size: 89, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputLesson_comment_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x0a\xc2\x30\x10\x86\xf7\x3c\xc5\x5f\xba\xf7\x01\xba\x2a\x4e\x82\x8b\xe0\xdc\x26\x57\x72\xd0\x5e\x4a\x72\x45\x8a\xf8\xee\x92\x14\xed\xa0\x83\x63\xc8\xf7\x7f\xdf\xd5\xb8\x75\x6b\x02\x0b\xee\x9e\xad\xc7\x48\x29\x05\x81\x0d\xd3\x44\xa2\x09\xb6\x13\xf4\x84\x10\x1d\x45\x72\x58\xe6\x20\x88\xa4\x4b\x94\xc6\xb0\xcc\x8b\xe2\x5c\x16\x87\x6d\x70\xc9\x1c\x1e\x06\xa8\x71\xf5\x04\xc7\x91\xac\x72\x90\xbd\xa0\x61\xb3\x7d\xa5\xfa\x15\xea\x09\x69\x26\xcb\x03\x93\xc3\xc0\x34\xba\xc6\x60\xb7\xb4\x28\x81\xe3\xfb\x5d\x99\x4f\xa9\xc0\x7f\x55\xb2\xb1\xd0\xed\x8f\xdb\x4f\xf9\xa3\x32\x4f\xf3\x0a\x00\x00\xff\xff\xac\xdd\x87\x22\x19\x01\x00\x00")

func inputLesson_comment_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputLesson_comment_orderGql,
		"input/lesson_comment_order.gql",
	)
}

func inputLesson_comment_orderGql() (*asset, error) {
	bytes, err := inputLesson_comment_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/lesson_comment_order.gql", size: 281, mode: os.FileMode(420), modTime: time.Unix(1527328531, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputLesson_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xbf\x0a\xc2\x30\x10\xc7\xf1\xfd\x9e\xe2\x57\xba\xf7\x01\x3a\x8b\x93\xe0\x22\x38\xb7\xc9\x95\x1c\x94\x4b\xc8\x1f\xa4\x88\xef\x2e\x89\xd8\x3a\x39\x26\x7c\xef\x73\xd7\xe3\x3e\x6d\x09\xa2\x78\x38\x31\x0e\x2b\xa7\xe4\x35\xc1\x4c\x8a\x99\xe1\xa3\xe5\xc8\x16\x25\x78\x45\xe4\x5c\xa2\x0e\x24\x1a\x4a\xc6\xa5\x95\xd7\x1a\xe0\x49\x40\x8f\x9b\x63\x58\x89\x6c\xb2\x78\x3d\xc8\xec\x3f\xcc\x6e\xcf\x1b\xb2\x63\xa4\xc0\x46\x16\x61\x8b\x45\x78\xb5\x03\xe1\x98\x1e\xd1\xe0\xd3\xf7\xdd\xd1\xbe\xa1\xc5\x7f\xf5\x2a\xb5\x6a\xfc\x3d\xf2\x5c\x7f\x3a\x7a\xd1\x3b\x00\x00\xff\xff\xa8\xf8\x45\x7f\xf3\x00\x00\x00")

func inputLesson_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputLesson_orderGql,
		"input/lesson_order.gql",
	)
}

func inputLesson_orderGql() (*asset, error) {
	bytes, err := inputLesson_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/lesson_order.gql", size: 243, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputMove_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\xbf\x0a\xc2\x30\x10\x87\xf7\x3c\xc5\x4f\xba\xe8\x52\x9c\x3b\x77\x09\x28\x74\xf0\x05\x52\x7b\x35\x81\xf4\x2e\x24\x57\x41\xc4\x77\x97\xfe\x01\xdd\x8e\xbb\xef\xfb\xae\x82\xe5\x34\x2b\xf4\x95\x08\xa3\x64\x5c\xe5\x49\x17\x2a\x45\xb8\x36\x61\x3d\xfd\x36\x1b\xfa\x36\x40\x85\x9b\x27\xd8\x16\x32\x42\x3d\x21\xee\x06\xf6\xc9\x0e\x0d\x6c\x7b\x30\x2b\xda\x45\x77\xa7\x3f\x0c\x4e\xa1\x3e\x14\xf0\x3c\xf5\x94\x69\x40\x92\x12\x34\x08\xe3\x38\xcd\x45\xd1\x13\x1e\x99\x9c\x52\x86\x7a\xc7\x38\x9f\x6a\x74\xae\x2c\x42\x8c\x50\x41\x5a\x8b\x41\xb7\x12\x61\xcc\xc2\xba\x7c\xdf\x8a\x0d\x2c\xab\xf9\x98\x6f\x00\x00\x00\xff\xff\x2d\xc2\x02\xee\xdd\x00\x00\x00")

func inputMove_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputMove_lessonGql,
		"input/move_lesson.gql",
	)
}

func inputMove_lessonGql() (*asset, error) {
	bytes, err := inputMove_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/move_lesson.gql", size: 221, mode: os.FileMode(420), modTime: time.Unix(1527695434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputRequest_email_verificationGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x4a\x2d\x2c\x4d\x2d\x2e\x71\xcd\x4d\xcc\xcc\x09\x4b\x2d\xca\x4c\xcb\x4c\x4e\x2c\xc9\xcc\xcf\xe3\xca\x04\xab\xc3\x25\x0d\x31\xa5\x9a\x4b\x41\x41\x59\x01\x2c\xa9\x50\x92\xaf\x50\x06\x52\x50\xa9\xa7\xc0\xa5\xa0\x90\x0a\x12\xb3\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x73\xfb\xae\xee\x79\x00\x00\x00")

func inputRequest_email_verificationGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputRequest_email_verificationGql,
		"input/request_email_verification.gql",
	)
}

func inputRequest_email_verificationGql() (*asset, error) {
	bytes, err := inputRequest_email_verificationGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/request_email_verification.gql", size: 121, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputRequest_password_resetGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x4a\x2d\x2c\x4d\x2d\x2e\x09\x48\x2c\x2e\x2e\xcf\x2f\x4a\x09\x4a\x2d\x4e\x2d\xe1\xca\x04\xab\xc1\x26\x05\xd1\x5d\xcd\xa5\xa0\xa0\xac\xe0\x9a\x9b\x98\x99\xa3\x90\x9f\xa6\x50\x92\x91\xaa\x50\x5a\x9c\x5a\xa4\xc7\xa5\xa0\x90\x0a\x12\xb4\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x89\xda\xb0\x17\x72\x00\x00\x00")

func inputRequest_password_resetGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputRequest_password_resetGql,
		"input/request_password_reset.gql",
	)
}

func inputRequest_password_resetGql() (*asset, error) {
	bytes, err := inputRequest_password_resetGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/request_password_reset.gql", size: 114, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputReset_passwordGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcc\xb1\x0a\x02\x31\x10\x04\xd0\x3e\x5f\x31\x72\xbd\x1f\x60\x6f\x61\x23\xa2\xfe\xc0\xa1\x1b\x6f\x51\x93\xb0\x99\x78\x04\xf1\xdf\x25\xa7\x22\xda\x2d\x33\x6f\xb6\xc3\x2a\xa4\x42\xb0\x26\x81\x8f\x86\xad\x64\xe1\xa6\xcf\x79\x8c\x76\x74\x3a\x95\x3f\xd9\xcb\xdf\x1d\xd0\x61\x79\xed\xf5\x82\xe8\xc1\x41\x50\xb2\xd8\xdc\x01\xd2\xc2\x05\x76\x34\x0d\xa7\x99\x9b\xe0\x5a\x46\xa4\xf7\x83\x66\x3e\xf7\x1f\xdb\xc7\xb3\x04\x30\xe2\x26\xa6\xbe\xa2\x2f\x1c\x24\x50\x0f\xca\xda\x66\x6c\xfd\x77\xf3\x70\xcf\x00\x00\x00\xff\xff\x8c\x58\xaf\xe2\xbf\x00\x00\x00")

func inputReset_passwordGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputReset_passwordGql,
		"input/reset_password.gql",
	)
}

func inputReset_passwordGql() (*asset, error) {
	bytes, err := inputReset_passwordGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/reset_password.gql", size: 191, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputStudy_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\x31\xaa\xc3\x30\x0c\x06\xe0\x5d\xa7\xf8\x43\xf6\x1c\x20\xf3\xe3\xad\x1d\x5a\xe8\x9c\x58\x0a\x16\x14\x39\xd8\x32\x25\x94\xde\xbd\x24\xa5\x49\xa7\x8e\x92\x7e\x7d\x52\x8b\xeb\xb0\x14\xa8\xe1\x1e\x35\x44\x14\xaf\xac\x52\x10\x06\xc3\x28\x48\x99\x25\x0b\xa3\xce\xc9\x90\xc5\x6b\xb6\x8e\xd4\xe6\xea\x38\x7b\xe5\xe5\xb4\xce\xf1\x20\xa0\xc5\x25\x0a\x58\xb3\x04\xd7\x64\x87\xe8\xe9\xad\xec\xf4\xb8\xc0\xa3\xa0\xcc\x12\x74\x52\x61\x4c\x2a\x37\xee\x08\xc7\x76\x8f\x0d\xfe\xfb\xd4\x0d\xed\x17\xb6\xf0\x4f\x7d\x95\xb6\x54\xff\xf5\xe3\xff\xda\x68\xe8\x49\xaf\x00\x00\x00\xff\xff\x23\x7e\x0d\x28\xf1\x00\x00\x00")

func inputStudy_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputStudy_orderGql,
		"input/study_order.gql",
	)
}

func inputStudy_orderGql() (*asset, error) {
	bytes, err := inputStudy_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/study_order.gql", size: 241, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_emailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x41\xca\x02\x31\x0c\x85\xf7\x3d\xc5\xfb\x99\xfd\x7f\x80\x59\x8a\x2e\xba\x1f\x0f\x50\x6d\x4a\x03\xb5\x29\x9d\x0c\x32\x88\x77\x97\x99\x08\x8a\xbb\xf0\xe5\xcb\xcb\x1b\xe0\x6b\x5b\x14\xba\x36\x42\x92\x8e\x73\x8b\x41\xe9\x74\x0b\x5c\xfe\x1d\xef\xbb\x2f\x64\xf2\xc3\x01\x03\x7c\x84\x24\x68\x26\x90\xd9\xb0\xc1\xc7\x11\xfe\xf8\xe7\xde\x12\x55\xe5\xc4\x34\xe3\x9e\x49\x33\xf5\xcf\x05\x78\x46\x5b\x2e\x85\xaf\x90\x8e\x2a\xba\x45\x18\x18\x71\x10\x29\x14\xaa\xa5\x4c\x99\xac\xe1\xef\xc3\x0d\x8e\xd8\xab\x4d\x6b\x23\xf7\x74\xaf\x00\x00\x00\xff\xff\x30\x14\x8b\x2d\xd1\x00\x00\x00")

func inputUpdate_emailGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_emailGql,
		"input/update_email.gql",
	)
}

func inputUpdate_emailGql() (*asset, error) {
	bytes, err := inputUpdate_emailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_email.gql", size: 209, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x2d\x48\x49\x2c\x49\xf5\x49\x2d\x2e\xce\xcf\xd3\xe3\xca\x04\x4b\x22\x8b\x41\x94\x57\x73\x29\x28\x28\x2b\x84\x64\xa4\x2a\x24\xe5\xa7\x54\x2a\xe4\xa7\x29\x94\x64\xa4\x2a\xe4\x40\x75\x29\x80\x45\xad\x14\x82\x4b\x8a\x32\xf3\xd2\xb9\xc0\x6a\x3d\x5d\x30\x55\x41\x58\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\x70\x23\x4b\x32\x4b\x72\x52\x31\x55\x83\x85\xe1\x86\xd6\x72\x01\x02\x00\x00\xff\xff\x83\xcd\xcb\x6e\xbb\x00\x00\x00")

func inputUpdate_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_lessonGql,
		"input/update_lesson.gql",
	)
}

func inputUpdate_lessonGql() (*asset, error) {
	bytes, err := inputUpdate_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_lesson.gql", size: 187, mode: os.FileMode(420), modTime: time.Unix(1527695107, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_lesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x2d\x48\x49\x2c\x49\xf5\x49\x2d\x2e\xce\xcf\x73\xce\xcf\xcd\x4d\xcd\x2b\xd1\xe3\xca\x04\xab\xc1\x22\x05\xd1\x5c\xcd\xa5\xa0\xa0\xac\x10\x92\x91\xaa\x90\x94\x9f\x52\xa9\x90\x9f\xa6\x50\x92\x91\xaa\x90\x03\x56\xa8\x90\x0c\x33\x44\x01\x2c\x6b\xa5\x10\x5c\x52\x94\x99\x97\xce\x05\xd6\xe3\xe9\x82\x5b\x75\x0e\x8a\x45\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\x9d\x66\x17\x04\xb2\x00\x00\x00")

func inputUpdate_lesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_lesson_commentGql,
		"input/update_lesson_comment.gql",
	)
}

func inputUpdate_lesson_commentGql() (*asset, error) {
	bytes, err := inputUpdate_lesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_lesson_comment.gql", size: 178, mode: os.FileMode(420), modTime: time.Unix(1527613361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_studyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8b\x31\x0e\xc2\x30\x0c\x45\x77\x9f\xe2\xa3\xee\x1c\xa0\x73\x17\xcf\x85\x03\x20\xec\x52\x2f\x89\x95\xba\x43\x84\xb8\x3b\x52\xb2\x44\xea\xf6\xf5\xdf\x7b\x13\x38\xf9\x19\x88\xea\x8a\x2d\x17\x3c\x5d\x5e\xa1\x6b\x9c\x52\xef\x64\x8d\x0d\x57\x97\xbf\x04\x4c\x78\xec\x0a\xd1\xe3\x5d\xcc\xc3\x72\x42\xde\x10\xbb\xe2\xe8\x29\x46\x36\x63\x8d\x62\xe9\x43\x2d\xe4\xe5\xe2\xb6\xc1\x32\x83\x97\x1b\xfd\xe8\x1f\x00\x00\xff\xff\x69\x21\x86\x19\x96\x00\x00\x00")

func inputUpdate_studyGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_studyGql,
		"input/update_study.gql",
	)
}

func inputUpdate_studyGql() (*asset, error) {
	bytes, err := inputUpdate_studyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_study.gql", size: 150, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_userGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x31\xae\xc2\x40\x0c\x44\x7b\x9f\x62\xbe\x52\xfc\x2e\x07\xa0\xa6\x49\x0d\x39\x40\x42\x9c\x60\x29\xac\x57\xbb\xde\x02\x21\xee\x8e\xbc\x80\x50\x04\xd5\x8c\xec\xf7\xec\x06\x5d\x88\xc5\x60\xd7\xc8\x98\x35\xa1\x8f\xd3\x60\xdc\x67\x4e\x2d\x49\x5d\x7d\x26\x4f\xf4\x46\x40\x83\xe3\x99\x51\x32\xa7\xff\x8c\x58\xc6\x55\x4e\x88\x49\x67\x59\x19\xa3\x68\x4b\xf0\xd8\xe1\x60\x49\xc2\x42\x1b\x23\x0c\x97\x5a\x26\x98\x62\xd5\x45\x82\xe3\xb5\xfc\x16\xbe\x5f\xf8\x09\x97\x3c\xb7\x4e\xb7\x87\xce\xb0\x97\xe9\x8c\x67\x37\xbd\xa9\x3f\xba\xd3\x23\x00\x00\xff\xff\x86\xaa\xa1\xcc\xf4\x00\x00\x00")

func inputUpdate_userGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_userGql,
		"input/update_user.gql",
	)
}

func inputUpdate_userGql() (*asset, error) {
	bytes, err := inputUpdate_userGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_user.gql", size: 244, mode: os.FileMode(420), modTime: time.Unix(1527619947, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesConnectionGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcf\xb1\x8e\x83\x30\x0c\x06\xe0\x3d\x4f\xf1\x23\x76\x1e\x20\x1b\x42\x37\xb0\x9c\x6e\xb8\x0d\xdd\x10\x25\x06\x2c\x81\x7d\x02\x77\xaa\xfa\xee\x55\xd2\x16\xaa\x6e\x7f\xa2\xcf\xc9\xef\x1a\x2d\xa2\x8a\x50\x34\x56\x81\x29\x02\x16\xde\x0d\x3a\x82\x8d\xd6\xbd\x71\x2c\x46\xdb\x18\x22\xa1\x3b\xe1\xd5\x01\x35\x7a\x19\x75\x5b\xc3\x31\xca\x09\x2c\xf8\x0f\x13\x4b\xb9\x6c\x1c\xf2\x89\xb2\xf3\xf8\x79\xa6\xca\x95\xe1\xf6\xf8\x88\xd2\x44\x7b\xb6\x25\x78\x0c\x5f\x69\xa2\xbf\x4f\x25\x9a\x1e\xaa\x04\x8f\xe1\x5b\xd3\x4b\xfd\xce\x04\x53\x0b\x0b\xa2\x5e\xe4\x6c\x9f\xeb\xd8\x4c\x6f\x2b\xe6\x07\x8a\xec\x32\xf4\xe8\xc5\x2a\x77\x73\xf7\x00\x00\x00\xff\xff\x35\x58\xb8\x38\x08\x01\x00\x00")

func interfacesConnectionGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesConnectionGql,
		"interfaces/connection.gql",
	)
}

func interfacesConnectionGql() (*asset, error) {
	bytes, err := interfacesConnectionGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/connection.gql", size: 264, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesDeletableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x41\x0a\xc2\x40\x10\x44\xd1\x7d\x9f\xa2\x24\xfb\x1c\xc0\xa5\xd1\x83\xf4\x4c\x4a\xa6\x65\xe8\x81\xa4\xd0\x85\x78\x77\x51\xb2\xfd\x9f\x37\xe1\x96\x0a\x05\x77\xa8\xb9\x50\x3d\x51\x88\x95\x9d\xe2\x3a\x5b\xa4\xb8\xdd\xbd\x12\xd7\x5f\xf2\xd2\x89\xb7\x01\x13\x16\x4f\xa8\x11\xcf\xe0\x8b\xdb\x21\xa0\x16\x3b\x46\x79\xb0\x6a\x36\x1c\x73\xf1\xfc\x6b\x9e\x71\x19\xa3\xd3\xf3\x64\x1f\xfb\x06\x00\x00\xff\xff\x0a\xa9\x35\xe6\x7b\x00\x00\x00")

func interfacesDeletableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesDeletableGql,
		"interfaces/deletable.gql",
	)
}

func interfacesDeletableGql() (*asset, error) {
	bytes, err := interfacesDeletableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/deletable.gql", size: 123, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesEdgeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x10\x44\xd1\xde\xa7\x18\x94\x9e\x03\xa4\x4b\x41\x4b\x03\x17\xb0\xec\x89\xb3\x05\xb3\xc8\xd9\x54\x88\xbb\xa3\x24\x74\x5f\xfa\x7a\x03\x26\x81\xb5\x11\x26\x64\x14\x97\x58\xc2\x5c\xd7\x64\x0a\xf6\x39\x17\xe2\xb6\xff\x4f\x02\x06\x4c\x28\x5b\x5f\xbd\x63\xf6\x8e\x6d\x3d\xd8\x3b\x37\x53\x3e\x11\xfe\x7f\xc4\x23\xba\xa9\x5d\xd2\xc1\x9e\x0b\x61\xc1\x17\x72\x20\x16\x82\xaa\xf0\xf9\xcc\xda\xb8\x3b\x79\xe5\x88\xbb\x57\xa6\x6f\xfa\x05\x00\x00\xff\xff\xe8\x50\x6e\xbb\x97\x00\x00\x00")

func interfacesEdgeGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesEdgeGql,
		"interfaces/edge.gql",
	)
}

func interfacesEdgeGql() (*asset, error) {
	bytes, err := interfacesEdgeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/edge.gql", size: 151, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesNodeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x49\x2d\x4a\x4b\x4c\x4e\x55\xf0\xcb\x4f\x49\x55\xa8\xe6\x52\x50\xc8\x4c\xb1\x52\xf0\x74\x51\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x6f\x40\x52\x35\x1d\x00\x00\x00")

func interfacesNodeGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesNodeGql,
		"interfaces/node.gql",
	)
}

func interfacesNodeGql() (*asset, error) {
	bytes, err := interfacesNodeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/node.gql", size: 29, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesStudy_nodeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x49\x2d\x4a\x4b\x4c\x4e\x55\x08\x2e\x29\x4d\xa9\xf4\xcb\x4f\x49\x55\xa8\xe6\x52\x50\x50\x56\x08\xc9\x48\x55\x28\x06\x89\x29\x24\x16\x17\xe7\x27\x67\x26\x96\xa4\xa6\x28\x94\x67\x96\x64\x28\x94\x64\x64\x16\x2b\xe4\xe5\xa7\xa4\xea\x71\x29\x40\x94\x58\x41\x74\x2b\x72\xd5\x72\x01\x02\x00\x00\xff\xff\xdd\x43\xe1\x5f\x51\x00\x00\x00")

func interfacesStudy_nodeGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesStudy_nodeGql,
		"interfaces/study_node.gql",
	)
}

func interfacesStudy_nodeGql() (*asset, error) {
	bytes, err := interfacesStudy_nodeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/study_node.gql", size: 81, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesTokenGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x49\x2d\x4a\x4b\x4c\x4e\x55\x08\xc9\xcf\x4e\xcd\x53\xa8\xe6\x52\x50\x48\xad\x28\xc8\x2c\x4a\x2d\x76\x2c\xb1\x52\x08\xc9\xcc\x4d\x55\xe4\x52\x50\xc8\x2c\x2e\x2e\x4d\x4d\x41\x88\xd4\x72\x01\x02\x00\x00\xff\xff\x78\xbd\xdb\x75\x39\x00\x00\x00")

func interfacesTokenGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesTokenGql,
		"interfaces/token.gql",
	)
}

func interfacesTokenGql() (*asset, error) {
	bytes, err := interfacesTokenGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/token.gql", size: 57, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesUniform_resource_locatableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\x41\xaa\x83\x30\x14\x85\xe1\x79\x56\x71\x1e\xce\x5d\xc0\x5b\x41\x0b\x0e\x24\x98\x05\x5c\xd3\x23\x09\xd8\x44\x6e\xae\x05\x29\xdd\x7b\x27\x52\x28\x74\xf6\x0f\xfe\xaf\x83\xe7\xa6\x6c\x2c\xd6\x20\xb0\x63\x23\x2c\x89\x21\x4a\xc1\x4c\x28\x4d\x33\x1f\xbc\x61\x3e\x20\x08\x7e\xe8\x5d\x2e\x46\x5d\x24\x12\xa1\xe4\xa5\xea\xdd\xb3\xd5\x5d\x23\x87\x1a\xc5\x64\x5e\x89\xa7\x03\x3a\x4c\x89\xb8\x4c\xd3\x88\x4d\x2c\xc1\x2a\x2c\xe5\x06\x3d\xef\xde\xe1\xd3\xa3\x58\xfa\x47\xf0\xd7\x3f\xf7\x2d\x83\x1f\x7e\xc2\x5d\xd7\xf3\x7f\xb9\x77\x00\x00\x00\xff\xff\xe9\x60\xa2\xe7\xc4\x00\x00\x00")

func interfacesUniform_resource_locatableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesUniform_resource_locatableGql,
		"interfaces/uniform_resource_locatable.gql",
	)
}

func interfacesUniform_resource_locatableGql() (*asset, error) {
	bytes, err := interfacesUniform_resource_locatableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/uniform_resource_locatable.gql", size: 196, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfacesUpdateableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x41\x0a\xc2\x40\x10\x44\xd1\x7d\x9f\xa2\x24\xfb\x1c\xc0\xa5\xc1\x23\x78\x80\x9e\x49\xc9\xb4\x84\x1e\x49\x4a\x5d\x88\x77\x17\x34\xdb\xff\x79\x03\xce\xa9\x50\x70\x83\x9a\x0b\xd5\x13\x85\x78\xdc\x67\x17\xe7\xd1\x22\xc5\xf5\xea\x95\xb8\xfc\x92\x97\x85\x78\x1b\x30\x60\xf2\x84\x1a\xf1\x0c\xbe\xb8\xee\x04\x6a\xb1\xa1\x97\x1b\xab\x46\xc3\x3e\x27\xcf\x3f\x3f\xe2\xd4\xfb\x42\xcf\x83\x7d\xec\x1b\x00\x00\xff\xff\x9b\x38\x05\xaa\x7c\x00\x00\x00")

func interfacesUpdateableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfacesUpdateableGql,
		"interfaces/updateable.gql",
	)
}

func interfacesUpdateableGql() (*asset, error) {
	bytes, err := interfacesUpdateableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interfaces/updateable.gql", size: 124, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalarsHtmlGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x54\x28\x2e\x29\xca\xcc\x4b\x57\x48\xce\xcf\x2b\x49\xcc\xcc\x03\x31\x3d\x42\x7c\x7d\x14\x92\xf3\x53\x52\xf5\xb8\x8a\x93\x13\x73\x12\x8b\xc0\x22\x5c\x80\x00\x00\x00\xff\xff\x69\x83\x95\x22\x2d\x00\x00\x00")

func scalarsHtmlGqlBytes() ([]byte, error) {
	return bindataRead(
		_scalarsHtmlGql,
		"scalars/html.gql",
	)
}

func scalarsHtmlGql() (*asset, error) {
	bytes, err := scalarsHtmlGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalars/html.gql", size: 45, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalarsTimeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xc9\xcc\x4d\x55\xc8\x2c\x56\x48\xcc\x53\x08\x72\x73\x36\x36\x36\xb6\x54\x28\xc9\xcc\x4d\x2d\x2e\x49\xcc\x2d\xd0\xe3\x2a\x4e\x4e\xcc\x49\x2c\x02\x2b\xe2\x02\x04\x00\x00\xff\xff\x3c\x59\x30\xf9\x2c\x00\x00\x00")

func scalarsTimeGqlBytes() ([]byte, error) {
	return bindataRead(
		_scalarsTimeGql,
		"scalars/time.gql",
	)
}

func scalarsTimeGql() (*asset, error) {
	bytes, err := scalarsTimeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalars/time.gql", size: 44, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalarsUriGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xcc\x53\x08\x72\x73\x56\x30\xb6\xb4\x30\xd3\x81\xb1\xcc\x75\x14\x12\xf3\x52\xc0\x3c\x33\x53\x73\x03\x05\x8d\x9c\xd4\xb2\xd4\x1c\x05\x13\x4d\x85\xe4\xfc\xdc\x82\x9c\xcc\xc4\xbc\x12\x85\xd0\x20\x4f\x85\xe2\x92\xa2\xcc\xbc\x74\x3d\xae\xe2\xe4\xc4\x9c\xc4\x22\x90\x10\x17\x20\x00\x00\xff\xff\x12\xa3\x29\x58\x51\x00\x00\x00")

func scalarsUriGqlBytes() ([]byte, error) {
	return bindataRead(
		_scalarsUriGql,
		"scalars/uri.gql",
	)
}

func scalarsUriGql() (*asset, error) {
	bytes, err := scalarsUriGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalars/uri.gql", size: 81, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x95\xc1\x6e\x1b\x21\x10\x86\xef\xfb\x14\xb3\xea\x21\x89\x14\xa5\x77\xdf\xda\x6c\x0e\x96\x92\x2a\x75\xe3\x5c\xa2\x1c\xf0\x32\xb6\x51\x77\xc1\x01\xd6\xd6\xaa\xea\xbb\x57\x03\x0b\x0b\xd8\xe9\x29\xe1\x1f\xe6\xff\x30\x33\xc3\x9a\x76\x8f\x3d\x83\x3f\x15\xc0\xc7\x80\x7a\x5c\xc0\x4f\xfa\x53\x01\xf4\x83\x65\x56\x28\xb9\x80\xa7\xe9\xbf\xea\x6f\x65\xc7\x03\xfa\x1d\x2e\xe5\x0b\x3c\x2a\xf5\x7b\x38\x80\x54\x1c\x61\x33\xc2\xb2\xb9\xab\xc0\xad\xae\x2b\x00\xda\xf0\xb2\x47\x58\x36\xa0\xb6\x60\xf7\xe8\x22\x77\x2e\x22\xf8\x02\x96\x4d\x5d\x01\xdc\x2c\xe0\x87\xe2\x58\x95\x7e\x86\x0c\x19\x74\xc2\x58\x4a\x5f\x36\x26\x78\x9b\xd4\xbc\x88\x93\xb3\x59\xc0\xdb\xb2\xa9\xdf\x27\xf7\x37\xb2\x7f\xaf\x33\x00\x83\x9d\x38\xa2\x04\x63\x07\x3e\x12\x88\x4e\xa7\x4e\x12\x35\x30\xc9\x27\x59\xb2\xde\x9d\xd6\xad\x52\x26\x05\xc2\x4f\x72\x41\x4f\x26\x79\x01\xbf\xac\x16\x72\x57\xa7\x47\x54\x3b\x21\x61\x2b\xb0\xe3\x94\xc5\x60\x30\xa8\x7d\x8a\x43\xa6\x39\x37\xb4\x18\xf8\x58\x9c\x96\x32\xe8\x98\xce\xea\x0e\x2a\x70\xca\xf5\x19\x64\x3a\xd4\x0c\x70\x72\x01\x58\x1b\xd4\xde\x9f\x12\xdb\x41\x6b\x94\xb6\x1b\x81\x0d\x76\x8f\xd2\x8a\x96\x59\xe4\xd1\xe3\x28\xf0\x44\x67\xa4\xac\x3a\xf4\x40\xe8\x89\xa9\x0d\xbe\x71\x6e\x80\x49\xc0\x9e\x89\x0e\xac\x72\x87\xf0\x89\x57\x06\x58\xdb\xaa\x41\x5a\x32\x63\x9c\x3f\xd0\x9e\x6b\x21\x0f\x83\x5d\x50\xa2\x5b\x2f\x69\x59\xdf\xcc\xc2\x33\x1b\x3b\xc5\x78\xe2\x0e\xad\xea\x7b\x94\x96\xec\x19\x74\x68\x8c\x92\x93\xe5\xa3\x5b\xdc\xfb\x78\x62\x9d\xe9\x29\x22\x0b\x04\x94\x63\xdd\x6b\x64\x16\x09\x27\xf1\x94\x50\x5a\xa7\xfb\xbc\x40\xb8\x4f\xb4\xe8\xee\x97\x17\xbc\x62\xa3\x78\x2b\x57\xe5\xdc\xc9\x49\xd1\xc8\xb7\xc1\xb9\x4f\xa8\x8b\xb7\xa1\xaa\xe4\x2e\xa4\x44\x93\xb9\xd4\x0d\x76\xe8\x4c\x42\x95\xb6\x5a\xf5\x9f\xd6\x89\xbb\xdd\x59\xa9\x9a\x59\x8a\xf6\x89\x96\x16\x2c\xb2\xa6\x0b\xf4\x2c\x36\x5f\x81\xb7\xcf\x6f\xb3\x49\xb4\x02\xe0\xc5\xcb\x84\xd0\x15\x13\x62\xae\x58\xca\x28\x5a\xa3\x39\x0f\x5d\x24\x16\x0d\x92\x83\x8b\x1f\x93\xd5\xb3\x99\xa5\xc2\xd8\x69\x97\x0d\x43\x61\xbd\x5f\x5a\xd8\x26\x2a\xd1\x6d\xd9\xf8\xb2\x3e\xa9\x63\x7a\xd1\x6e\x36\xa8\x4b\xe4\xd0\x6f\x50\x23\x87\x83\x32\xc2\x4d\xea\x49\xd8\xbd\x90\xe9\xc1\x7b\x75\x2c\x6a\xf0\x14\x95\xa2\x9f\x1f\xf8\x0e\xa7\x17\x74\x85\x1f\x03\x1a\x9b\x74\xd2\x11\xb5\xd8\xd2\xab\x41\x98\xf0\x02\x6c\x10\x0c\xfa\x66\xd2\x3e\xc3\xb5\xc9\x6b\xb2\x37\x50\x57\x9f\xc4\xe3\x19\x1e\x5e\x5f\xea\x82\x0d\x07\x66\xcc\x49\x69\x0e\x1a\x0d\xda\xff\x60\x9f\xa7\x8d\x2b\xda\x57\x20\xb3\x58\xc4\x3d\xaf\x22\xce\xa0\x0d\xa5\xb9\x32\x91\xe9\xdd\x0d\xc6\xfc\xd9\x36\x11\xa3\xdf\x77\xa5\x3a\x64\x72\xba\xbf\xf5\x81\xb3\x74\x10\xaf\x0c\xb8\x27\x95\x49\xfe\x55\x69\x38\xed\xd1\xee\x51\x83\xb0\x04\x1c\x36\x9d\x68\x41\x69\x90\xca\xfd\xa6\xc1\x25\x67\x73\xb9\x9e\xa5\xf9\xc2\x68\x55\x67\x38\x9a\xf4\x8d\xe2\x63\xe0\x58\x61\x3b\xf4\x9f\xa3\x79\x66\xbc\x7d\xde\x13\xeb\x44\x2b\xba\xe2\x13\x42\x62\x1a\xc6\xb3\x34\x2f\x06\x72\x7d\x1e\x2a\x50\x93\x7a\x4e\xe4\x68\x5a\x2d\x0e\xae\xf7\x1c\x38\xb6\xb7\xe7\x65\x73\xb9\x9e\xa5\xfc\x9d\xbd\xf0\x4b\x84\xba\xf5\x5f\xcf\xdb\x70\x65\xe1\xb3\x3f\x8f\xaa\x47\xa4\xa3\xba\x8e\x4a\xf6\x06\xd3\x87\xf3\x5f\x00\x00\x00\xff\xff\xa4\xe9\x49\xea\x6c\x09\x00\x00")

func schemaGqlBytes() ([]byte, error) {
	return bindataRead(
		_schemaGql,
		"schema.gql",
	)
}

func schemaGql() (*asset, error) {
	bytes, err := schemaGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.gql", size: 2412, mode: os.FileMode(420), modTime: time.Unix(1527695277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeAdd_email_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8e\x31\x6e\x85\x30\x10\x44\x7b\x9f\x62\x10\x45\x3a\x0e\x40\x97\xc2\x7d\x14\x91\xf4\x96\x77\xc0\x56\xc0\x8e\x6c\x13\x84\xa2\x7f\xf7\x2f\xfb\x0b\xd1\xed\x8e\xde\x9b\xdd\x1e\x9f\x2c\x7b\x0a\x28\xe7\x2f\x31\xc7\x84\x77\x11\xbd\x19\xbf\x0e\xaa\x45\xd7\xfa\x61\xce\x35\x1a\xc1\xbf\x02\x7a\x4c\x8e\xa0\x2c\xc4\x9c\xe2\x86\xe2\x88\x3d\x33\xbd\x65\xb0\xb2\xb0\x31\x04\xda\xe2\x63\x18\x14\x5e\x99\x96\x85\x23\xf4\x35\x76\xea\xee\x69\xca\x1f\x93\x9f\xbd\x35\x55\x42\x89\x3f\x0c\xed\x9b\x72\x01\xb5\xa8\xc5\x23\xf4\xf7\x74\xdb\xf5\x6e\x23\x0f\xe7\xad\xbb\x79\x1c\x26\xc3\x88\x50\xaa\x59\xa9\x11\x5f\x99\xa9\x53\x0f\xf5\x0c\x00\x00\xff\xff\x1d\x0b\xc5\x94\xf5\x00\x00\x00")

func typeAdd_email_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeAdd_email_payloadGql,
		"type/add_email_payload.gql",
	)
}

func typeAdd_email_payloadGql() (*asset, error) {
	bytes, err := typeAdd_email_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/add_email_payload.gql", size: 245, mode: os.FileMode(420), modTime: time.Unix(1527603422, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeAdd_lesson_comment_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x31\xaa\xc2\x40\x14\x45\xfb\xb7\x8a\x1b\x52\xfc\x2e\x0b\xf8\x9d\x88\x9d\x85\x88\x1b\x08\x79\x37\x89\x90\x79\x4f\x66\xc6\x22\x88\x7b\x17\x33\x8c\xa0\xed\xb9\xe7\x9e\x16\x67\xe6\x7b\x34\xe4\xf5\x46\x8c\x1e\xb1\x53\x3d\x32\x25\xb7\xbd\x87\x40\xcb\x9d\x6c\xd3\x2f\x3e\xf5\xeb\xe2\xbd\xe2\x21\x40\x8b\xcb\x4c\x50\x27\x62\x8c\x1e\x90\x67\x62\xd9\xe4\xbf\x84\xa1\xf8\x18\xdc\x8c\x43\xbe\xba\x75\x82\x4a\x0f\x3a\xf1\x1f\x5f\xe1\x37\x6a\xe4\x53\x2d\x9d\xea\x53\x51\xfe\x05\xd7\x6b\x23\x4f\x79\x05\x00\x00\xff\xff\x29\x1d\xb3\xf5\xca\x00\x00\x00")

func typeAdd_lesson_comment_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeAdd_lesson_comment_payloadGql,
		"type/add_lesson_comment_payload.gql",
	)
}

func typeAdd_lesson_comment_payloadGql() (*asset, error) {
	bytes, err := typeAdd_lesson_comment_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/add_lesson_comment_payload.gql", size: 202, mode: os.FileMode(420), modTime: time.Unix(1527603409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_email_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x41\x0a\xc2\x30\x10\x45\xf7\x73\x8a\x5f\xba\xef\x01\xba\x8e\x8b\xec\x44\xf4\x00\x81\xf9\x6a\x21\x5a\x99\x4c\x91\x22\xde\x5d\x12\x50\x84\x6e\xdf\x9b\x37\xfc\x1e\x07\xfa\x62\x77\xf8\xfa\x20\xce\xb3\x21\x30\xd3\xb9\xbb\xa5\x29\x0f\xd2\xe8\x1f\xd9\xa7\x35\xcf\x49\xf1\x12\xa0\xc7\xf1\x4a\x68\x93\x0a\x56\x8d\x18\x06\xc1\x97\xb5\x22\xea\x88\x18\x3a\xf9\x05\x4b\xa1\xc1\x37\xe5\x33\x15\x18\x2f\x53\x71\x1a\xb5\x2e\xa9\x9f\xea\xf1\x88\x53\xa1\x75\xf2\x96\x4f\x00\x00\x00\xff\xff\x4a\xdc\x34\x33\xad\x00\x00\x00")

func typeDelete_email_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_email_payloadGql,
		"type/delete_email_payload.gql",
	)
}

func typeDelete_email_payloadGql() (*asset, error) {
	bytes, err := typeDelete_email_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_email_payload.gql", size: 173, mode: os.FileMode(420), modTime: time.Unix(1527603719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_lesson_commentpayloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\x4a\x2d\x29\x2d\xca\x53\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\xf5\x49\x2d\x2e\xce\xcf\x73\xce\xcf\xcd\x4d\xcd\x2b\xd1\xe3\x02\xcb\x62\x91\x09\x48\xac\xcc\xc9\x4f\x4c\x51\xa8\xe6\x52\x50\x50\x56\x08\xc9\x48\x55\x48\x01\x2b\x4a\x51\xc8\x01\x2b\x53\xc8\x4c\xd1\xe3\x52\x80\x09\xa2\x68\xf5\x4c\xb1\x52\xf0\x74\x51\xe4\x82\xeb\x84\xea\x28\xc1\x34\x24\x19\xa2\x43\xa1\x3c\xb1\x18\xe4\x44\x90\x89\x10\x19\x2b\x05\x88\x91\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xf3\x21\x03\x41\xca\x00\x00\x00")

func typeDelete_lesson_commentpayloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_lesson_commentpayloadGql,
		"type/delete_lesson_commentpayload.gql",
	)
}

func typeDelete_lesson_commentpayloadGql() (*asset, error) {
	bytes, err := typeDelete_lesson_commentpayloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_lesson_commentpayload.gql", size: 202, mode: os.FileMode(420), modTime: time.Unix(1527610172, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_lesson_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\xc2\x30\x10\x45\xf7\x73\x8a\x5f\xba\xef\x01\xba\xee\xa6\xe0\x42\xd4\x0b\x04\x66\xc4\x42\x48\x24\x33\x41\x82\x78\x77\xc9\x88\x22\x74\x35\xf0\xde\xbc\x3f\xe2\x24\x56\x4b\x82\xb5\xbb\xe0\x9a\x0b\x16\x89\x62\x72\x10\xd5\x9c\x26\x72\xfc\x8f\x8e\xa1\xc5\x1c\x18\x4f\x02\x46\x5c\x6e\x02\x76\xcb\x88\xee\xb1\xf1\x44\xf8\xc2\x4f\xb3\xf2\x8c\x75\x19\xe8\x97\xa8\x55\x6e\xb0\x7d\xfc\x08\x8a\x2d\xf5\x01\x7f\x99\x71\xee\x67\xa0\x17\xbd\x03\x00\x00\xff\xff\x10\xa8\xa3\xf1\xa9\x00\x00\x00")

func typeDelete_lesson_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_lesson_payloadGql,
		"type/delete_lesson_payload.gql",
	)
}

func typeDelete_lesson_payloadGql() (*asset, error) {
	bytes, err := typeDelete_lesson_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_lesson_payload.gql", size: 169, mode: os.FileMode(420), modTime: time.Unix(1527604012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_study_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcb\x3d\x0a\xc2\x40\x10\x40\xe1\x7e\x4e\xf1\x42\xfa\x1c\x20\x75\x9a\x74\xe2\xcf\x01\x02\x33\x41\x21\x64\x65\x33\x41\x16\xf1\xee\xb2\x03\x8a\xd8\xbe\xc7\xd7\x72\x34\xdf\xf3\x8a\x97\xbb\x31\xa7\xcc\x60\x8b\xb9\x9d\x7c\xd7\xd2\x49\xd4\x9f\x72\x98\xca\x92\x26\xe5\x29\xd0\x72\xbe\x1a\x1a\x53\xd9\xea\xe6\xa6\x9d\xf0\x69\x21\x46\xed\x19\x87\x46\xbe\x20\x3d\x56\xcb\xa4\x19\xff\xd7\x95\xc6\xed\xb9\x6c\x96\x1b\x79\xc9\x3b\x00\x00\xff\xff\x2f\x22\x95\x71\x9f\x00\x00\x00")

func typeDelete_study_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_study_payloadGql,
		"type/delete_study_payload.gql",
	)
}

func typeDelete_study_payloadGql() (*asset, error) {
	bytes, err := typeDelete_study_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_study_payload.gql", size: 159, mode: os.FileMode(420), modTime: time.Unix(1527604189, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeEmailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x41\x6e\xdc\x30\x0c\xbc\xeb\x15\x13\xec\x3d\x0f\xd0\xa5\xd8\xa6\x39\xec\xa5\x28\xda\xb4\x97\x22\x07\xc5\xe2\xda\x2c\x6c\xca\x90\xe8\x2c\x82\x22\x7f\x2f\x28\xdb\x6b\x37\x2d\x72\xa3\xa8\x19\x6a\x66\xa8\x03\xbe\xd2\x98\xa9\x90\x68\x41\x00\x0d\x81\xfb\x5b\xa7\x2f\x23\xe1\xde\x6a\xf0\x30\xf6\x34\xd4\xeb\xcf\x29\x12\x7e\x3b\xe0\x80\x53\x24\x51\x3e\x33\x15\x68\x47\x88\x41\x09\x41\x22\x94\x07\xc2\xa5\x23\xa9\xed\xf4\xf4\x8b\x1a\xc5\x25\x14\x34\x99\x82\x52\xbc\x75\x58\xcb\xa3\x7a\x3c\xf0\x40\x37\xce\x01\x1c\x3d\x4e\x9f\x6a\x79\xc0\x69\x1e\x5a\xb5\xe0\x99\xb2\xbd\x13\x3f\x18\xaa\xfc\x58\x4e\x1e\x1f\x53\xea\x29\xc8\x4a\xd9\xf4\x5c\x3a\xd2\x8e\xf2\x6e\x04\x17\x8c\xd3\x53\xcf\x0d\x52\x86\x24\x35\x11\x73\xe3\x9d\x31\x46\xaf\x31\xa4\xf3\x9a\x0a\x6a\xc3\xcf\xc1\x3c\xbc\x8c\xb4\xb0\x1e\x3a\xc2\x54\x28\x23\x94\x92\x1a\x36\x73\xb8\xb0\x76\x9b\x04\xe3\x1a\xc2\xe3\x7b\xa1\xbc\xa3\x3d\x87\x7e\xaa\x4f\xfc\x05\xad\x5d\x8f\x6f\x9a\x59\xda\xff\x3a\x94\x9d\x3d\x8b\x77\x4d\xa9\xb2\x97\x7a\x0d\xd8\xbd\x3a\x77\xc0\x51\x40\xb1\x5d\x3c\x9d\x53\x9e\x5d\xec\x57\x7d\x6f\xd7\xbb\x75\xd7\xf3\xbc\xee\x23\x9a\x29\x97\x94\x2b\x71\x2a\x04\x16\x8c\xa1\x65\x09\xca\x49\xea\x52\xeb\xfd\x1b\xcd\xe6\x90\x95\x06\x04\x9d\xf5\x4a\xbc\x7a\x8d\x2d\x19\x4f\x52\x5c\x13\x5d\x74\xa2\x49\x22\xd4\xd8\xe0\x77\xc4\xde\x6d\xa0\x9d\xe4\x5d\x77\xf9\xa7\x72\x4e\x79\x08\xf3\xb0\x84\xc0\xf1\x5f\xe9\x63\x68\xc9\x70\x1e\x5f\x96\x6a\x91\x7f\x44\xcf\x45\xeb\x07\x88\x2d\x15\xc3\xd6\xc2\xe3\xe7\x35\xb0\xc7\xb7\x50\x33\x54\x56\x67\x57\xe8\xe3\x16\x88\x26\x0d\x3d\x9a\x34\x49\xc5\x5b\x3e\xc5\x44\x59\x2a\x9b\xf5\xfa\xdb\x0c\x79\x67\x40\x8f\x93\xe8\x8d\x7b\x75\x7f\x02\x00\x00\xff\xff\xe0\xe3\x38\x85\xaf\x03\x00\x00")

func typeEmailGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeEmailGql,
		"type/email.gql",
	)
}

func typeEmailGql() (*asset, error) {
	bytes, err := typeEmailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/email.gql", size: 943, mode: os.FileMode(420), modTime: time.Unix(1527607641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeEmail_verification_tokenGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcf\x3d\x8e\xc2\x40\x0c\x05\xe0\x7e\x4e\xf1\x56\xe9\x73\x80\xed\xb6\xd8\x82\x16\x45\xf4\x23\xe6\x45\xb1\xc8\x38\xa3\xd8\x10\x10\xe2\xee\x28\x7f\x07\x40\x74\x4f\xb6\xfc\xe9\xb9\xc2\x91\x65\xa4\x51\xdd\x10\x15\xcc\x51\x7a\xdc\x38\x4a\x2b\xe7\xe8\x32\x28\x7c\xb8\x50\xeb\xe0\x8f\x42\xfc\x9f\x1a\x48\x2e\x3d\xf3\x72\xd0\xcc\x2b\x3c\x03\x50\xe1\x90\xa8\x2e\xad\xd0\xe0\x1d\x91\xa2\x13\x51\x13\x5c\x32\x31\x75\xd4\x65\xbc\x60\x98\xa2\x41\xcc\xae\x4c\x75\xc0\x96\xfe\xfc\x17\x8d\x64\xfe\x84\x8f\x39\xde\x8b\x8c\xb4\xd9\xda\xe2\x17\xd8\xdc\x6d\xfd\x7f\x6d\xb7\xe7\x9d\x0c\xaf\xf0\x0e\x00\x00\xff\xff\xd5\xee\xd7\x0e\x35\x01\x00\x00")

func typeEmail_verification_tokenGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeEmail_verification_tokenGql,
		"type/email_verification_token.gql",
	)
}

func typeEmail_verification_tokenGql() (*asset, error) {
	bytes, err := typeEmail_verification_tokenGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/email_verification_token.gql", size: 309, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeLessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x70\xe8\x65\x03\x86\xfe\x00\xdf\xd2\x64\x40\x03\x64\x5b\x91\x25\xa7\xa1\x07\xd9\xa2\x63\x0d\xb6\x64\x48\xf4\xd2\x60\xe8\x7f\x1f\x48\xc9\x8e\x9b\x18\xd9\xc7\x4d\x96\x1f\x1f\x1f\x45\xf2\xdd\xc1\x16\x3b\x8f\x01\x2d\x05\x50\xd0\x60\x08\xce\xde\x67\x74\xea\x10\x36\xf2\x01\xa6\xed\x1a\x6c\x05\xf0\xc5\x69\xfc\x08\x7b\x6b\x2a\xe7\xdb\x2d\x06\xd7\xfb\x12\x37\xae\x54\xa4\x8a\x86\xff\x74\x5a\x11\xf2\x19\x7e\x65\x00\x77\xb0\xab\x11\x54\x4f\xb5\xf3\xe0\x2a\xa0\x1a\xc7\x0c\x90\xee\x73\xd8\x07\xf4\xd9\x88\x2e\x9c\x3e\x5d\x63\xf9\x36\x87\x6f\xe4\x8d\x3d\xbc\xbb\x05\x06\x8f\x56\xa3\x47\x0d\xe4\xe0\x71\xf7\x79\x33\x44\xf3\x39\x97\x9b\xbf\x8f\x27\x7c\xa1\x21\x7e\x87\x2f\x74\xa1\x60\xad\xd1\x92\xa9\x0c\x06\x21\xe0\xd2\x41\x59\x0d\x64\x5a\x84\x63\x8d\x56\xae\x5d\xf1\x03\x4b\x82\xa3\x0a\x50\x7a\x54\x84\x9a\x29\xd3\x71\x41\x39\xec\x4c\x8b\x89\x71\x8b\xd4\x7b\x2b\x8d\x30\x81\x58\x59\xe9\xda\xf8\xf4\x95\xf3\x42\x57\xf6\xde\xa3\xa5\xc9\xdb\x0c\x90\xf7\x19\xc0\x94\x84\xd1\x38\x74\xce\x44\x31\x42\x4b\xb5\x22\x8e\x42\x50\x15\x61\xa4\x0d\x1d\x96\x5c\x8a\x86\x43\xe3\x0a\xd5\xc0\x7a\x75\x2f\x7c\x02\x19\x0a\xcf\xfe\x3d\x45\x81\x95\xf3\x78\x3b\x47\xc4\xdc\x4a\x52\x19\x1f\x08\xec\x39\x19\x0f\xe0\x98\x2e\xb2\x08\x26\x87\xb5\xa5\x39\x86\x46\xfd\x91\x80\x21\x6f\xe2\xbf\x7a\x8d\xac\x08\x5c\x47\xc6\xd9\xd8\x84\xb1\x23\x5e\xd8\x51\x43\xe5\x5d\xa4\x2a\x9d\xb5\x58\x32\x34\x12\x3a\x8e\x7f\x38\xe5\x69\x93\x96\x31\x52\x58\x33\x80\x0f\x17\xf7\xcb\x31\x5a\xa6\xc1\xe8\x1c\xd6\xab\xf9\x51\x4b\xb3\x6a\xfb\xb6\x40\xcf\xb9\xe2\x49\xc4\x5f\x47\x8c\xa3\x98\xc2\x78\x14\xbb\xbe\x68\x4c\xa8\x51\x83\x92\xea\xc7\xef\x8b\x89\xe4\x2d\x09\xd4\xeb\x13\xa8\x10\x5c\x69\x78\x68\xe1\x68\xa8\x06\xaa\x4d\x98\x4c\xa1\x80\xb8\x85\xbd\x3e\x4d\x62\xc9\x50\x83\xd7\xfb\x2c\xd7\x33\x0b\xfd\xb8\xdb\x3d\x41\xa7\xa8\x4e\xf3\xfe\x26\x85\x4f\x86\xf3\xa4\xa8\xce\x61\xbf\x5d\xff\xef\x1e\xca\x2c\xf4\xe2\x55\xb2\x8c\xe9\x38\x53\xba\xe8\xd9\x6f\x37\x73\x72\x7a\xdf\x4c\x55\x2c\x55\xcc\xf3\xd3\xe0\x11\x7d\xe2\xbc\x8c\x89\x3f\x97\xca\x46\xa7\xcc\xe1\xc1\xb9\x06\x95\x4d\x1c\x2b\xa3\xa7\x1c\xc9\x39\x67\x39\x56\x46\x2f\x92\x81\x8e\x1c\xaf\x59\x76\x07\x0b\x0b\xa8\x0f\x08\x62\xe1\x2c\x7b\x73\xed\xe9\x9f\x18\x30\xf1\x75\xf9\x8e\x8e\xbd\x60\x87\x09\xce\x4b\x68\x1f\x90\xd7\xba\x53\x07\x63\xd5\x30\xd7\xf1\xff\x4c\xf3\x0c\x61\x0b\x8a\xa2\x2b\x58\x3d\x74\x9d\xd5\xc8\x8c\x3a\x8d\xc3\xc8\x27\xa9\x93\x8d\xb9\xa9\xf7\xbc\x1a\x53\xd5\x93\xdb\xa8\x7d\x6d\x79\xab\x55\xa4\x73\xa0\x8c\xbe\x56\xdf\xa9\x03\x32\x2e\x87\xa7\x74\x4a\x15\x2c\x46\xcf\x65\xc1\x81\xb1\x72\xc8\xe1\xfb\xf9\xd1\x9e\x2f\xb1\x5c\x54\x18\xaa\x3b\x63\x9f\x27\x1b\xe0\x48\x35\x50\xba\xde\x4a\x00\x3f\xd2\xe8\x95\x6f\x0d\x43\x90\x4b\x06\xa6\x45\x7e\xcd\x7e\x07\x00\x00\xff\xff\x84\x7c\xc3\xff\x9f\x07\x00\x00")

func typeLessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeLessonGql,
		"type/lesson.gql",
	)
}

func typeLessonGql() (*asset, error) {
	bytes, err := typeLessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/lesson.gql", size: 1951, mode: os.FileMode(420), modTime: time.Unix(1527328456, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeLesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xc1\x8e\xda\x30\x10\xbd\xf3\x15\xaf\xda\xeb\xaa\x1f\x90\x1b\x85\x4a\x8b\xc4\x56\x2b\x0a\xa7\x6a\x0f\x43\x3c\x10\xb7\x89\x1d\xd9\x93\xb2\xa8\xea\xbf\x57\x63\x07\x08\x81\xae\xd4\xde\xc6\xe3\x37\xcf\xef\x8d\x3d\x7e\xc0\x8a\xdb\xc0\x91\x9d\x44\x10\x6a\x8e\xd1\x3b\x94\xbe\x69\xd8\xc9\xc7\x89\x1c\x5b\xc6\x32\x25\x67\x39\x07\xdb\xb4\x35\x37\x09\x3f\xe7\x9a\x85\xb6\x35\x3f\xe2\x8b\x37\xfc\x88\x8d\xb3\x3b\x1f\x9a\x15\x47\xdf\x85\x92\x97\xbe\xa4\x7e\x7f\xd3\x1a\x12\xd6\x18\xbf\x26\xc0\x03\xd6\x15\x83\x3a\xa9\x7c\x80\xdf\x41\x2a\xbe\x1c\x8a\x7e\xa3\xc0\x26\x72\x98\x9c\xe1\x5b\x6f\x8e\xa0\x88\x67\x0a\x3f\x8c\x3f\x38\x45\x6a\xae\xc0\x57\x09\xd6\xed\x3f\x8c\xa0\x81\x9d\xe1\xc0\x06\xe2\xf1\xb4\x7e\x5e\x9e\xf0\x1a\x17\x29\xf3\x5e\x85\xf0\x9b\x9c\x2a\xd6\xfc\x26\xa3\x53\x16\x86\x9d\xd8\x9d\xe5\x98\xc4\xab\x3b\x90\x33\x10\xdb\x30\x0e\x15\xbb\x94\xf6\xdb\xef\x5c\x0a\x0e\x14\x51\x06\x26\x61\xa3\x94\x7d\x38\x95\x02\x6b\xdb\x70\x62\xb4\xa6\xc0\x62\x3e\x10\xd4\x5f\x05\xc5\xe8\x4b\xab\x70\x1c\xac\x54\x90\xca\xc6\x61\xab\x32\xac\xe8\x2f\xe9\x56\xdc\x59\xca\xf5\xd5\x26\x49\x6d\xb7\xad\x6d\xac\xd8\x80\x12\xd7\x79\x7d\x52\x76\x51\xf3\xb4\x5e\xbf\xa0\x25\xa9\xb0\xf3\x21\x8b\x18\xbf\x15\x20\xf4\xf7\xfe\x42\x52\x15\xd8\xac\x16\x03\x3b\x51\xba\x74\x7b\x77\xdc\xdc\x12\x25\xb0\x36\xbc\x33\xc7\xff\xed\x77\x4d\x51\xd0\xa5\x67\x97\x9a\xde\x87\x57\x4d\x1f\x78\xdb\xac\x96\xef\x59\xeb\x42\x3d\x74\x34\xa3\x7c\xde\x4f\xcb\x07\x0e\x30\x3a\x08\x9c\x6b\xb3\x04\xad\xc9\x9b\x33\x72\x69\x4e\xb8\xc0\x27\xef\x6b\x26\x77\x9f\x23\xeb\xfb\x2b\x47\x1e\xa0\x31\xc7\xdc\x9a\x21\x47\x3f\x50\xe3\x37\x92\x77\xe7\xd6\x4c\xfb\xb9\x3a\x93\xfc\x9e\x4c\x1e\x30\x75\x60\xb3\x67\xa4\x61\xd7\x1e\x5c\x0d\xfc\xbd\x4f\xe0\xb3\xc2\x07\x1f\x41\x5a\xe7\xb9\x9e\xa2\xec\x42\xf4\x21\x11\x75\x91\x61\x1d\x5a\xda\x5b\x47\x62\x7d\x1a\xd9\xbc\x7f\x67\x68\xad\x70\x03\x92\x64\x88\x9d\x39\xfd\x0b\xaa\x4d\xeb\x9c\x37\x5c\x5c\xeb\xe8\xf5\xa3\xf4\xce\x71\xa9\x07\xfc\x83\x89\xd9\xa5\x68\x60\x65\x90\xcd\x86\x16\x4e\xbf\x34\xca\xe4\x1e\x64\xcd\xad\xa5\x96\xf6\xac\xb8\x02\x2f\x7d\xd4\xdb\x9a\xa2\xb6\x51\xd4\x89\xba\x88\x8a\x4d\x41\x81\x6f\x37\x0d\x7d\x1d\x97\xa8\xe1\x78\x72\x7e\x53\xf2\x7a\x69\x9c\x78\xa1\x1a\xa5\xef\x5c\xaa\xd3\x3e\x46\x15\x99\x7f\xd5\x93\x1f\x65\x4a\xc8\x99\x02\x0b\x2c\x9c\xe8\x03\xf8\x13\x00\x00\xff\xff\x48\xe5\x51\x84\x02\x06\x00\x00")

func typeLesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeLesson_commentGql,
		"type/lesson_comment.gql",
	)
}

func typeLesson_commentGql() (*asset, error) {
	bytes, err := typeLesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/lesson_comment.gql", size: 1538, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typePage_infoGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xcd\x4a\xc5\x40\x0c\x05\xe0\xfd\x3c\xc5\x91\x6e\xa5\x0f\xd0\x8d\xa0\x2b\x37\x52\x70\xe1\x3a\x9d\xa6\xd3\x41\x9b\x94\x4c\xc6\x1f\xc4\x77\x97\x51\x70\x21\xf7\x52\xee\x32\x09\xe7\x23\xa7\xc3\xbd\x2c\x6a\x1b\x79\x56\x01\x4d\x5a\x1d\x3b\xa5\x2c\xbf\x8b\x2c\x20\x44\x15\xe1\xd8\xe6\x3e\xf8\xc7\xce\x18\x29\x71\x8b\xe1\x33\x00\x1d\x9e\x56\x96\xbf\x90\x24\x2c\x6a\x6f\x64\x73\xb9\x86\xaf\x8c\x58\xad\xa8\xc1\xb5\x39\x9e\xa5\x72\x1f\x00\x96\xf9\xee\xe7\x30\xe0\xd1\x2d\x4b\x0a\x07\x14\x19\x37\xce\x18\x9b\x1a\x23\x3b\x6f\xe5\x26\x00\x2b\x95\x07\x7e\xf7\xf6\xd2\x80\x5b\xd5\x17\x26\xb9\x3a\x8d\x4d\x14\x9f\x8f\xb5\xd1\xf8\x35\x6b\x2d\x17\x8a\xe7\xab\x16\x27\xf3\x7f\x65\xbf\xc2\x77\x00\x00\x00\xff\xff\xc0\xbd\xde\x84\x79\x01\x00\x00")

func typePage_infoGqlBytes() ([]byte, error) {
	return bindataRead(
		_typePage_infoGql,
		"type/page_info.gql",
	)
}

func typePage_infoGql() (*asset, error) {
	bytes, err := typePage_infoGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/page_info.gql", size: 377, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typePassword_reset_tokenGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xce\x41\x0a\xc2\x30\x10\x85\xe1\x7d\x4e\xf1\xa4\xfb\x1e\xc0\x9d\x4b\x77\x52\x7a\x81\x40\x9e\x74\xd0\x4c\x43\x67\xa4\x8a\x78\x77\x49\xac\x07\x10\x77\x3f\x2f\xe1\x63\x3a\x0c\x2c\x0b\x8d\xea\x86\x88\x12\xcd\xd6\x79\x49\xa8\x93\xc3\xe7\x0b\xb5\x0f\xfe\x28\xc4\x69\x18\x21\xb9\x5c\x99\xdb\xdf\xb1\x3e\xe1\x19\x80\x0e\xc7\x44\x75\x39\x0b\x0d\x3e\x11\x29\x3a\x11\x35\xc1\x25\x13\xeb\x44\x6d\x73\xc3\xb0\x46\x83\x98\xdd\x98\xfa\x80\xad\x0e\xbe\xc7\x28\x99\xbb\xf0\x33\xc7\x7b\x91\x85\x56\xad\x2d\xff\xc1\x34\x7d\xce\x6a\xf1\x85\xc2\x2b\xbc\x03\x00\x00\xff\xff\x49\xcc\x3e\xd4\x26\x01\x00\x00")

func typePassword_reset_tokenGqlBytes() ([]byte, error) {
	return bindataRead(
		_typePassword_reset_tokenGql,
		"type/password_reset_token.gql",
	)
}

func typePassword_reset_tokenGql() (*asset, error) {
	bytes, err := typePassword_reset_tokenGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/password_reset_token.gql", size: 294, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeStudyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\xc1\x8e\xe3\x36\x0c\xbd\xfb\x2b\x5e\x30\x87\xb6\x40\xb1\x1f\xe0\x5b\xba\x5b\x60\x02\x4c\xbb\x83\x4c\x06\x3d\x14\x7b\x50\x2c\x3a\x56\x61\x4b\x86\x44\x37\x08\x8a\xfd\xf7\x82\x94\xed\x78\x92\x6c\x06\x05\x7a\xdc\x9b\x23\x3d\x3e\x3e\x3d\x4a\x64\x1e\xb0\xa5\x3e\x52\x22\xcf\x09\x06\x89\x07\x7b\xfa\x50\xf0\xa9\x27\xbc\xc8\x37\x5c\xd7\xb7\xd4\xe9\xf6\xef\xc1\xd2\xcf\x78\xf5\xae\x0e\xb1\xdb\x52\x0a\x43\xac\xe8\x29\x54\x86\xcd\xbe\x25\xfc\x53\x00\x0f\xd8\x58\xf2\xec\x6a\x47\x09\xc7\x86\x3c\xb8\xa1\xcc\x8a\xa3\x49\x30\xf6\x6f\xe3\x2b\xb2\x30\xfc\xa1\xc0\xfc\x73\xcd\x25\x76\xae\xa3\x42\x29\xb6\xc4\x43\xf4\x2a\xc7\xf9\x43\x4b\x30\x29\x11\xa3\x8e\xa1\x53\xba\x6a\x88\x91\x3c\x8f\xb4\xfb\x13\xbc\xe9\x48\xe9\x04\xf7\x63\x01\x40\x97\x4a\xbc\x70\x74\xfe\xb0\x2a\x80\x9f\x4a\xbc\x26\x8a\x6b\x41\x14\x97\x42\x85\xd4\x1a\x26\x18\x6f\xc1\xae\xa3\xb3\xf4\xb0\xff\x8b\x2a\x56\xed\x55\x24\xc3\x64\x25\xd1\xf8\x39\xc9\x5e\x65\xc6\x9d\xd0\x50\xaa\xa2\xeb\xd9\x05\x8f\x50\x9f\x4f\x2f\x51\x8b\xbd\xb3\xb4\x77\x23\x11\xc9\x5b\x8a\x64\xc1\x01\x8f\xbb\xdf\x9e\x2e\xa8\x64\xa9\xd4\x0d\x25\x73\xb6\xc4\xe6\xd3\xea\x1b\x4e\xb6\x94\x52\xf0\xf7\xac\x1c\xba\x3d\x45\x49\x91\xa1\xd9\xcd\xac\x30\xef\xa1\x0e\x51\x63\x47\x2e\x0e\xd8\x13\xa2\x66\xca\xee\x60\x44\x96\xd8\x78\x5e\x01\xd9\xfe\x27\x85\x5f\xea\x6a\x5d\x62\x39\x6e\x26\x4b\xdf\x50\x76\xd6\x93\x26\x41\x13\x85\x60\x69\xba\xa1\x2e\x17\x4d\x49\xb9\x31\x8c\x2a\x74\x04\x53\x33\x65\xc9\xa9\xa7\x4a\x4a\x6e\x71\x68\xc3\xde\xb4\xd8\x7c\xca\x82\x15\x32\x15\xa5\xf8\xef\x29\xf6\x54\x87\x48\xf7\x73\x64\xcc\xbd\x24\xb5\x8b\x89\xe1\xcf\xc9\xe4\xa1\xcd\xe9\x32\x8b\x62\xd4\xd9\x5b\x0c\xad\x79\x97\x40\x20\x6f\xe2\x3f\x47\x4b\xa2\x08\x41\xef\x93\x06\xcd\xf5\x98\xea\xba\x28\x4c\xf0\x9e\x2a\x41\x66\xbe\x20\xe1\xbf\x9c\xa6\x02\x2b\xdb\xb2\xe2\x1f\x67\xbc\x5e\xca\x76\x5c\xec\x54\xe0\xf7\x6a\xfe\x6f\xd5\x7c\x63\xb9\xba\x7b\xe1\xfc\x03\x1e\xc3\x11\x9d\xf1\xa7\xb9\xba\xdc\x50\x24\x98\x48\xd9\x08\x97\x2e\x9f\xdb\xc7\x30\xf8\xcc\xbf\xe8\x54\xd2\x5b\xaf\x9a\xdb\xdb\x86\x3b\x63\x75\xff\x87\x94\x63\x8e\x8e\x1b\x84\xa3\xcf\x0d\x46\x96\xfe\x70\xdc\x7c\x96\x85\x1b\xa1\x0a\xbc\xca\x13\x32\x5a\x9a\xf9\x02\xfb\xb8\xdb\x3d\xa3\x37\xdc\x8c\xdd\x69\x79\x92\x38\x4e\xaa\x67\xc3\x4d\x89\xd7\xed\x66\x75\x35\x00\x6e\x4c\x2a\xf5\x7e\xe8\xed\xd4\xf2\xc7\xcf\x1b\x2d\x5f\x73\xbf\x6e\x9f\x6e\xa4\x1e\x62\x3b\x66\xfc\x5a\x14\x0f\x58\x7b\x90\x3d\x10\x74\xbc\x0a\xfa\xe5\x72\xdc\xfe\x2a\xdb\x8b\x91\xab\xbf\xf3\x60\x5d\x4b\x4b\x4c\x21\xf7\xdf\x21\x69\xc9\x7a\x73\x70\xde\x4c\x6f\x31\xef\xdf\x70\xd2\x31\x75\x30\x9c\xaf\xbe\xb7\x93\xa7\xa2\x45\x0b\x11\xac\x96\x6e\xb0\xa7\x51\xe7\xe2\x91\xdf\x11\x7b\xbe\x5f\x4b\xc9\x8b\xd5\xf1\x1f\x81\x97\x7b\x6b\x32\x59\x80\x71\xf6\x5a\x7a\x6f\x0e\x24\xb8\x12\xcf\xe3\xd7\x28\x7f\x3d\x4f\x08\x51\x9b\x04\xab\x1f\x25\xfe\x9c\x0d\xfb\x72\x09\x95\x03\xa5\xe9\x64\x33\xf4\xcb\xd9\x10\x0e\x6c\x5a\x54\x72\xb9\x05\x2f\xfe\xcc\xbd\xe0\x6d\x7f\x53\xe4\xf2\x15\x7c\x2d\xfe\x0d\x00\x00\xff\xff\x12\x2f\xca\xbc\x33\x09\x00\x00")

func typeStudyGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeStudyGql,
		"type/study.gql",
	)
}

func typeStudyGql() (*asset, error) {
	bytes, err := typeStudyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/study.gql", size: 2355, mode: os.FileMode(420), modTime: time.Unix(1527872120, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeUserGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\x4d\x6f\xdb\x3c\x0c\xc7\xef\xfe\x14\x7c\xd0\xc3\xb3\x01\x43\x3f\x80\x6f\xed\xba\xa1\x01\xb2\xae\x48\x93\xed\x2c\x5b\x74\xcc\xc1\x16\x0d\x89\x5e\x10\x0c\xfb\xee\x03\x69\xc5\x7d\x0b\xfa\x02\x0c\x3b\xf5\x64\x45\xe2\xff\x4f\x4a\xfc\x45\x3a\x81\x15\x0e\x11\x13\x06\x49\xe0\x60\x4c\x18\x4f\x0b\xd9\x0f\x08\x9b\x84\x11\xa8\x1f\x3a\xec\x6d\xf1\x8a\x3d\x7e\x80\x4d\xa0\x86\x63\xbf\xc2\xc4\x63\xac\x71\xc9\xb5\x13\x57\x75\x08\xbf\x0a\x80\x13\x58\xb7\x68\x1e\xff\x27\x18\xc6\xaa\xa3\x1a\x86\xc8\x0d\x75\x08\x15\xf1\x69\x01\xfa\x29\xe1\x46\x22\x85\xed\x7f\xc5\xf3\x12\x70\x09\x2e\xd7\x5f\x96\x59\xaa\xc3\xd2\x26\xb2\x78\xe1\x31\x08\x35\x84\x09\xa4\x45\xf0\x4e\x10\x5c\xf0\x20\xd4\x23\xec\x5a\x0c\x36\xcd\xd5\x0f\xac\x05\x76\x2e\x41\x1d\xd1\x09\x7a\xf5\xcb\xc3\x33\x29\x61\x4d\x3d\x3e\x5b\x0e\xf6\x8e\x3a\x15\xda\xe0\xc1\x2e\x56\x28\x63\x0c\x7a\x84\x1d\x25\x01\x6e\x2c\x71\x36\x32\x41\x9a\xa5\xe9\x5d\x01\x70\x57\xa4\xa1\x78\x38\x67\x9a\x6a\x36\x1b\x69\x9d\x40\xcd\x3d\x82\x6b\x04\xa3\x2d\xa4\x01\x6b\xdd\xb1\x87\x6d\xc7\x95\xeb\x60\x71\x71\x6a\x7e\x16\x72\x28\xab\x78\x7d\x8a\x0a\x1b\x8e\xf8\x74\x8e\x29\xe6\xa9\x24\x0d\xc5\x24\x10\x6e\x93\x29\x2e\x73\xba\xc9\xc5\x62\x4a\x58\x04\x39\xe6\xd0\xb9\x67\x0d\x34\x64\xd2\x03\xbc\x2f\xe1\x93\x9e\xea\x47\x0e\x01\x6b\x21\x0e\xd6\x12\xf2\x25\x2c\x2e\x72\x77\xbe\xb7\x28\x2d\x46\xe0\x08\x81\x75\xcf\x94\xac\x37\x40\xda\xb1\x44\x4a\x8d\xef\x29\x50\x92\xe8\x84\xa3\x66\xa1\x74\x43\x82\x67\x3a\x5d\xc2\x39\x73\x87\x2e\xbc\xc0\x4e\x0b\xfd\x49\xb8\xa3\xb0\xcd\xff\x26\xb5\xfa\x46\xb8\xd3\xe6\xdc\xf7\x79\x0c\x4d\x87\x29\xb1\x9d\x83\x93\x99\x20\xe0\x5d\x30\x7a\xf2\xea\x1b\x3e\x7f\x0d\x9f\xac\xff\x1a\x3d\x6a\x45\xc0\x83\x02\x64\xa2\xb9\x17\xd1\xcc\xd1\x43\x13\x79\x72\xaa\x67\xd4\x26\x3f\x56\xf9\xf9\xbe\x84\xa5\x49\xcc\x6d\x22\x73\x9a\x78\x80\xe6\xed\x25\x13\x5c\x6f\x03\x0f\xc2\xd0\xf1\x96\xcc\xd0\x06\x2f\xbe\x25\xd5\x43\x55\xfa\x3d\x22\xba\x5c\xaf\xaf\x61\x70\xd2\xda\x9e\x66\x54\x55\x11\xf3\x25\x7e\xed\xa4\x2d\x61\xb3\x5a\x64\xd9\x67\x0a\x1e\x92\x8c\x7e\x0f\xd5\x1e\x48\xd2\x9c\xc3\x26\x0f\xf8\x5d\x69\xf1\xdc\xe4\x48\x61\x68\x28\xf8\xe9\x40\xee\xd7\x62\x27\x71\xa3\x51\x93\xff\xd9\x8c\xbb\x4a\xa7\xbb\xfb\x18\xee\x79\xf5\x0d\xf7\x7f\x82\xfb\xa1\x17\xaf\xc0\xdd\x7a\x7a\x87\x76\xfb\xfd\x08\xf6\x57\xbf\xd1\xb6\xa5\x71\xf0\x87\x87\x3a\x0f\x8f\x3c\xd4\x06\xf7\x66\xb5\x7c\xcc\xf6\x18\xbb\x8c\xf4\xef\xe2\x4f\x00\x00\x00\xff\xff\xa4\x10\xce\x16\xe4\x08\x00\x00")

func typeUserGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeUserGql,
		"type/user.gql",
	)
}

func typeUserGql() (*asset, error) {
	bytes, err := typeUserGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/user.gql", size: 2276, mode: os.FileMode(420), modTime: time.Unix(1527280916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeUser_assetGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x41\x6e\xdc\x30\x10\xbb\xfb\x15\x2c\x72\x2d\xf2\x00\xdf\x02\xf4\xd0\x05\x82\x20\xd8\xd8\x0f\x90\xad\x71\x34\xad\x2c\x09\xd2\x08\x86\x5b\xf4\xef\x85\x64\x3b\xdb\xa4\x9b\xcb\xde\xe4\x31\x49\x91\xd4\xdc\xe1\x4c\x21\x52\x22\x27\x09\x0a\x39\x51\xbc\x6f\x64\x0d\x84\x3e\x51\x7c\x48\x89\x04\x3c\x07\x4b\x73\x45\x3c\x79\x4d\x5f\xd1\x3b\x9e\x7c\x9c\xcf\x94\x7c\x8e\x23\x3d\xfa\x51\x89\x1a\x2c\xe1\x77\x03\xdc\xa1\x33\x84\xd1\x3b\x21\x27\xa8\x52\x7e\x82\x18\x4e\x50\x45\xee\xbe\xc1\xf1\xb7\x5b\x03\xb5\x78\x91\xc8\xee\xf5\x4b\x53\xb9\x27\x4d\x4e\x78\x62\x4a\x10\x43\xd0\x4a\x08\xca\x69\x08\xcf\x84\xc5\x90\xab\x63\x3f\xfc\xa0\x51\xb0\xa8\x84\x31\x92\x12\xd2\x55\x75\x3b\x3e\x48\x8b\x8e\x67\xda\x15\x5f\xaa\x47\xe4\x68\x31\xf9\x58\x12\x62\x61\x31\x30\x6b\xa0\x68\xd9\xfd\x4c\x85\x6b\x22\x4d\x2d\xfa\xf3\xa9\xb2\x58\xb7\x38\x7d\xdb\x05\x4a\x1c\xa7\xe6\x2b\x31\xca\xf4\x83\xff\x02\xf6\x91\x5f\xd9\x29\x7b\x85\xb5\x45\xc8\xc1\x7a\xa5\x37\xd3\x07\xf8\xe9\x13\xad\xc5\x51\xfc\xff\xe6\x3a\x6e\xeb\x1b\xdd\x5a\x5c\xc8\x83\xe5\x64\x36\x17\x6f\x1f\x47\x79\x17\x07\xdf\xbb\xee\x19\x41\x89\xa9\xf5\xbd\xb7\x11\xf7\x0d\x78\x56\x62\x2e\xed\x6d\xbc\x61\x15\x42\xe2\x5f\x7b\x03\x74\x61\x95\x61\x8b\x93\x93\x7f\xd0\x49\xb2\x5e\x0b\xc4\x8f\x5c\x1e\x71\x7b\xa3\xf7\xb7\x55\x4c\xe9\x28\xeb\xf5\xd6\xd4\x56\x25\x41\x0e\xfa\xd8\x99\xfd\xf8\x61\x67\xde\x72\xf7\xe7\xc7\x2b\xb1\x73\xb4\x7b\xda\x3f\xcd\xdf\x00\x00\x00\xff\xff\x70\xed\xcf\xf4\x41\x03\x00\x00")

func typeUser_assetGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeUser_assetGql,
		"type/user_asset.gql",
	)
}

func typeUser_assetGql() (*asset, error) {
	bytes, err := typeUser_assetGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/user_asset.gql", size: 833, mode: os.FileMode(420), modTime: time.Unix(1527871940, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"enums/email_type.gql": enumsEmail_typeGql,
	"enums/lesson_comment_order_field.gql": enumsLesson_comment_order_fieldGql,
	"enums/lesson_order_field.gql": enumsLesson_order_fieldGql,
	"enums/order_direction.gql": enumsOrder_directionGql,
	"enums/study_order_field.gql": enumsStudy_order_fieldGql,
	"input/add_email.gql": inputAdd_emailGql,
	"input/add_lesson_comment.gql": inputAdd_lesson_commentGql,
	"input/create_lesson.gql": inputCreate_lessonGql,
	"input/create_study.gql": inputCreate_studyGql,
	"input/create_user.gql": inputCreate_userGql,
	"input/delete_email.gql": inputDelete_emailGql,
	"input/delete_lesson.gql": inputDelete_lessonGql,
	"input/delete_lesson_comment.gql": inputDelete_lesson_commentGql,
	"input/delete_study.gql": inputDelete_studyGql,
	"input/delete_user.gql": inputDelete_userGql,
	"input/lesson_comment_order.gql": inputLesson_comment_orderGql,
	"input/lesson_order.gql": inputLesson_orderGql,
	"input/move_lesson.gql": inputMove_lessonGql,
	"input/request_email_verification.gql": inputRequest_email_verificationGql,
	"input/request_password_reset.gql": inputRequest_password_resetGql,
	"input/reset_password.gql": inputReset_passwordGql,
	"input/study_order.gql": inputStudy_orderGql,
	"input/update_email.gql": inputUpdate_emailGql,
	"input/update_lesson.gql": inputUpdate_lessonGql,
	"input/update_lesson_comment.gql": inputUpdate_lesson_commentGql,
	"input/update_study.gql": inputUpdate_studyGql,
	"input/update_user.gql": inputUpdate_userGql,
	"interfaces/connection.gql": interfacesConnectionGql,
	"interfaces/deletable.gql": interfacesDeletableGql,
	"interfaces/edge.gql": interfacesEdgeGql,
	"interfaces/node.gql": interfacesNodeGql,
	"interfaces/study_node.gql": interfacesStudy_nodeGql,
	"interfaces/token.gql": interfacesTokenGql,
	"interfaces/uniform_resource_locatable.gql": interfacesUniform_resource_locatableGql,
	"interfaces/updateable.gql": interfacesUpdateableGql,
	"scalars/html.gql": scalarsHtmlGql,
	"scalars/time.gql": scalarsTimeGql,
	"scalars/uri.gql": scalarsUriGql,
	"schema.gql": schemaGql,
	"type/add_email_payload.gql": typeAdd_email_payloadGql,
	"type/add_lesson_comment_payload.gql": typeAdd_lesson_comment_payloadGql,
	"type/delete_email_payload.gql": typeDelete_email_payloadGql,
	"type/delete_lesson_commentpayload.gql": typeDelete_lesson_commentpayloadGql,
	"type/delete_lesson_payload.gql": typeDelete_lesson_payloadGql,
	"type/delete_study_payload.gql": typeDelete_study_payloadGql,
	"type/email.gql": typeEmailGql,
	"type/email_verification_token.gql": typeEmail_verification_tokenGql,
	"type/lesson.gql": typeLessonGql,
	"type/lesson_comment.gql": typeLesson_commentGql,
	"type/page_info.gql": typePage_infoGql,
	"type/password_reset_token.gql": typePassword_reset_tokenGql,
	"type/study.gql": typeStudyGql,
	"type/user.gql": typeUserGql,
	"type/user_asset.gql": typeUser_assetGql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"enums": &bintree{nil, map[string]*bintree{
		"email_type.gql": &bintree{enumsEmail_typeGql, map[string]*bintree{}},
		"lesson_comment_order_field.gql": &bintree{enumsLesson_comment_order_fieldGql, map[string]*bintree{}},
		"lesson_order_field.gql": &bintree{enumsLesson_order_fieldGql, map[string]*bintree{}},
		"order_direction.gql": &bintree{enumsOrder_directionGql, map[string]*bintree{}},
		"study_order_field.gql": &bintree{enumsStudy_order_fieldGql, map[string]*bintree{}},
	}},
	"input": &bintree{nil, map[string]*bintree{
		"add_email.gql": &bintree{inputAdd_emailGql, map[string]*bintree{}},
		"add_lesson_comment.gql": &bintree{inputAdd_lesson_commentGql, map[string]*bintree{}},
		"create_lesson.gql": &bintree{inputCreate_lessonGql, map[string]*bintree{}},
		"create_study.gql": &bintree{inputCreate_studyGql, map[string]*bintree{}},
		"create_user.gql": &bintree{inputCreate_userGql, map[string]*bintree{}},
		"delete_email.gql": &bintree{inputDelete_emailGql, map[string]*bintree{}},
		"delete_lesson.gql": &bintree{inputDelete_lessonGql, map[string]*bintree{}},
		"delete_lesson_comment.gql": &bintree{inputDelete_lesson_commentGql, map[string]*bintree{}},
		"delete_study.gql": &bintree{inputDelete_studyGql, map[string]*bintree{}},
		"delete_user.gql": &bintree{inputDelete_userGql, map[string]*bintree{}},
		"lesson_comment_order.gql": &bintree{inputLesson_comment_orderGql, map[string]*bintree{}},
		"lesson_order.gql": &bintree{inputLesson_orderGql, map[string]*bintree{}},
		"move_lesson.gql": &bintree{inputMove_lessonGql, map[string]*bintree{}},
		"request_email_verification.gql": &bintree{inputRequest_email_verificationGql, map[string]*bintree{}},
		"request_password_reset.gql": &bintree{inputRequest_password_resetGql, map[string]*bintree{}},
		"reset_password.gql": &bintree{inputReset_passwordGql, map[string]*bintree{}},
		"study_order.gql": &bintree{inputStudy_orderGql, map[string]*bintree{}},
		"update_email.gql": &bintree{inputUpdate_emailGql, map[string]*bintree{}},
		"update_lesson.gql": &bintree{inputUpdate_lessonGql, map[string]*bintree{}},
		"update_lesson_comment.gql": &bintree{inputUpdate_lesson_commentGql, map[string]*bintree{}},
		"update_study.gql": &bintree{inputUpdate_studyGql, map[string]*bintree{}},
		"update_user.gql": &bintree{inputUpdate_userGql, map[string]*bintree{}},
	}},
	"interfaces": &bintree{nil, map[string]*bintree{
		"connection.gql": &bintree{interfacesConnectionGql, map[string]*bintree{}},
		"deletable.gql": &bintree{interfacesDeletableGql, map[string]*bintree{}},
		"edge.gql": &bintree{interfacesEdgeGql, map[string]*bintree{}},
		"node.gql": &bintree{interfacesNodeGql, map[string]*bintree{}},
		"study_node.gql": &bintree{interfacesStudy_nodeGql, map[string]*bintree{}},
		"token.gql": &bintree{interfacesTokenGql, map[string]*bintree{}},
		"uniform_resource_locatable.gql": &bintree{interfacesUniform_resource_locatableGql, map[string]*bintree{}},
		"updateable.gql": &bintree{interfacesUpdateableGql, map[string]*bintree{}},
	}},
	"scalars": &bintree{nil, map[string]*bintree{
		"html.gql": &bintree{scalarsHtmlGql, map[string]*bintree{}},
		"time.gql": &bintree{scalarsTimeGql, map[string]*bintree{}},
		"uri.gql": &bintree{scalarsUriGql, map[string]*bintree{}},
	}},
	"schema.gql": &bintree{schemaGql, map[string]*bintree{}},
	"type": &bintree{nil, map[string]*bintree{
		"add_email_payload.gql": &bintree{typeAdd_email_payloadGql, map[string]*bintree{}},
		"add_lesson_comment_payload.gql": &bintree{typeAdd_lesson_comment_payloadGql, map[string]*bintree{}},
		"delete_email_payload.gql": &bintree{typeDelete_email_payloadGql, map[string]*bintree{}},
		"delete_lesson_commentpayload.gql": &bintree{typeDelete_lesson_commentpayloadGql, map[string]*bintree{}},
		"delete_lesson_payload.gql": &bintree{typeDelete_lesson_payloadGql, map[string]*bintree{}},
		"delete_study_payload.gql": &bintree{typeDelete_study_payloadGql, map[string]*bintree{}},
		"email.gql": &bintree{typeEmailGql, map[string]*bintree{}},
		"email_verification_token.gql": &bintree{typeEmail_verification_tokenGql, map[string]*bintree{}},
		"lesson.gql": &bintree{typeLessonGql, map[string]*bintree{}},
		"lesson_comment.gql": &bintree{typeLesson_commentGql, map[string]*bintree{}},
		"page_info.gql": &bintree{typePage_infoGql, map[string]*bintree{}},
		"password_reset_token.gql": &bintree{typePassword_reset_tokenGql, map[string]*bintree{}},
		"study.gql": &bintree{typeStudyGql, map[string]*bintree{}},
		"user.gql": &bintree{typeUserGql, map[string]*bintree{}},
		"user_asset.gql": &bintree{typeUser_assetGql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

