// Code generated by go-bindata.
// sources:
// enum/apple_order_field.gql
// enum/email_type.gql
// enum/lesson_comment_order_field.gql
// enum/lesson_order_field.gql
// enum/order_direction.gql
// enum/search_order_field.gql
// enum/search_type.gql
// enum/study_order_field.gql
// enum/user_asset_order_field.gql
// input/add_apple.gql
// input/add_email.gql
// input/add_lesson_comment.gql
// input/apple_order.gql
// input/create_lesson.gql
// input/create_study.gql
// input/create_user.gql
// input/delete_email.gql
// input/delete_lesson.gql
// input/delete_lesson_comment.gql
// input/delete_study.gql
// input/delete_user.gql
// input/lesson_comment_order.gql
// input/lesson_order.gql
// input/move_lesson.gql
// input/remove_apple.gql
// input/request_email_verification.gql
// input/request_password_reset.gql
// input/reset_password.gql
// input/search_order.gql
// input/study_order.gql
// input/update_email.gql
// input/update_lesson.gql
// input/update_lesson_comment.gql
// input/update_study.gql
// input/update_topics.gql
// input/update_user.gql
// input/user_asset_order.gql
// interface/appleable.gql
// interface/authorable.gql
// interface/connection.gql
// interface/deletable.gql
// interface/edge.gql
// interface/node.gql
// interface/study_node.gql
// interface/token.gql
// interface/uniform_resource_locatable.gql
// interface/updateable.gql
// scalar/html.gql
// scalar/time.gql
// scalar/uri.gql
// schema.gql
// type/add_email_payload.gql
// type/add_lesson_comment_payload.gql
// type/delete_email_payload.gql
// type/delete_lesson_commentpayload.gql
// type/delete_lesson_payload.gql
// type/delete_study_payload.gql
// type/email.gql
// type/email_verification_token.gql
// type/lesson.gql
// type/lesson_comment.gql
// type/page_info.gql
// type/password_reset_token.gql
// type/search_result_item.gql
// type/study.gql
// type/text_match.gql
// type/text_match_highlight.gql
// type/topic.gql
// type/update_topics_payload.gql
// type/user.gql
// type/user_asset.gql
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _enumApple_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcc\x41\x0a\xc2\x30\x10\x85\xe1\x7d\x4e\xf1\xa0\xfb\xde\xa1\xa0\xae\x04\xb3\x70\x2f\xe9\xe4\x41\x07\xda\x49\x98\x46\x44\xc4\xbb\x4b\xea\xf6\xe7\xe7\x1b\x10\xbd\x54\x7a\x53\xee\x98\xdf\x78\x2d\x2a\x0b\x52\xad\x2b\x21\xc5\x8c\xd2\xb4\xd8\x0e\x49\x86\x99\x28\x9e\xe9\xcc\x63\xa0\x3d\x37\x4c\x7d\xbb\xf5\x74\x51\xae\x19\x9f\x00\x0c\x38\xc2\x9f\x38\x48\x71\xa6\x8e\xa0\xe9\xc6\x31\x00\x53\x8c\xd7\xf3\xe9\x31\xdd\xc3\x37\xfc\x02\x00\x00\xff\xff\x38\x52\x0d\x90\x80\x00\x00\x00")

func enumApple_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumApple_order_fieldGql,
		"enum/apple_order_field.gql",
	)
}

func enumApple_order_fieldGql() (*asset, error) {
	bytes, err := enumApple_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/apple_order_field.gql", size: 128, mode: os.FileMode(420), modTime: time.Unix(1529355200, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumEmail_typeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x41\x0a\xc2\x30\x14\x05\xf7\x39\xc5\x83\x6e\xa5\x77\xa8\xd2\x85\x88\x50\x4a\x05\x5d\xa6\xc9\x2f\x06\xdb\x24\x24\xff\x23\x41\xbc\xbb\x14\x11\x5c\x74\x39\x30\xc3\x54\xe8\x42\xce\x6e\x9c\x09\x5c\x22\x65\x84\x09\xb4\x68\x37\xe7\x5a\x91\x97\x05\xed\x0a\x43\x89\x84\x97\x02\xaa\x2f\x43\x32\x59\x4c\x21\x61\xd4\xe6\x21\x11\xda\x98\x20\x9e\x91\xc9\x48\x72\x5c\x6a\x05\xec\x9b\xc3\xe9\xd2\xa9\xbf\x4a\x5b\x4b\x16\x1c\x7e\xfa\x0e\xa3\x30\x9e\x8e\xef\x41\x18\x93\x78\xc3\x2e\xf8\xb5\x6d\xaf\x43\xdf\xa8\xad\x61\x4c\x6e\xd1\xa9\x6c\x1e\xbb\xfe\x78\x6e\xfa\x9b\x7a\xab\x4f\x00\x00\x00\xff\xff\xf0\xd4\xd4\xbb\xd7\x00\x00\x00")

func enumEmail_typeGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumEmail_typeGql,
		"enum/email_type.gql",
	)
}

func enumEmail_typeGql() (*asset, error) {
	bytes, err := enumEmail_typeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/email_type.gql", size: 215, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumLesson_comment_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xc1\x0a\x82\x40\x14\x45\xf7\xf3\x15\x17\xdc\xfb\x0f\xa2\xb6\x0a\x92\xb0\x75\xe8\xcc\x05\x07\x9c\xf7\x64\x66\x24\x22\xfa\xf7\xd0\xa8\x45\x8b\xb6\xef\x9d\x73\x6e\x81\x2e\xea\xc2\x98\x3d\x13\xc6\x3b\x6e\x93\xb7\x13\x66\xa6\xa4\x02\xab\x21\x50\x32\xac\x8a\xd0\x66\xaf\x92\x60\x07\xc1\x48\x68\x74\x8c\x74\xa5\xa1\xac\x01\xc7\x9d\xaf\xdf\xf8\x69\x7b\x1d\x3c\x67\x87\x87\x01\x0a\xec\x87\x9f\xe6\x3e\x66\x23\x87\xad\x8a\xec\x03\x4b\x03\xd4\xe7\xb6\xea\xdb\xe6\x5a\xf5\xe6\xbf\xb9\x2e\x6e\xc8\xfc\x7a\x97\xae\xf9\x78\x4f\xf3\x0a\x00\x00\xff\xff\x03\x05\xcf\xa7\xd3\x00\x00\x00")

func enumLesson_comment_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumLesson_comment_order_fieldGql,
		"enum/lesson_comment_order_field.gql",
	)
}

func enumLesson_comment_order_fieldGql() (*asset, error) {
	bytes, err := enumLesson_comment_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/lesson_comment_order_field.gql", size: 211, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumLesson_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcc\x4d\x0a\x83\x30\x18\x84\xe1\x7d\x4e\x31\xe0\xde\x3b\xd8\x6a\x57\xfd\x11\xd1\x75\xd1\x64\xc0\x80\x7e\x91\x24\x52\x4a\xe9\xdd\x8b\xa1\xed\xaa\xdd\x0e\xef\x3c\x19\x6a\xef\x16\xfa\x68\x19\x30\xdc\x71\x1b\xad\x1e\x31\x31\x04\x27\xd0\x4e\x84\x3a\x5a\x27\x01\xba\x17\x0c\x84\xf3\x86\x9e\x26\x57\x94\x75\xc6\x31\x75\x97\x6d\x3b\x58\x4e\x06\x0f\x05\x64\x48\xc3\x1b\x49\xaa\xf6\xec\x37\x06\xd1\xce\xcc\x15\xb0\x6f\xaa\xa2\xad\xca\x6b\xd1\xaa\xdf\x0f\x59\xe7\x81\x7e\x4b\xcf\xdd\x69\x57\x35\x7f\xb2\x75\x31\x7d\xe4\x97\xed\xea\xf2\xc3\x3e\xd5\x2b\x00\x00\xff\xff\xab\x71\x4b\xbf\xdb\x00\x00\x00")

func enumLesson_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumLesson_order_fieldGql,
		"enum/lesson_order_field.gql",
	)
}

func enumLesson_order_fieldGql() (*asset, error) {
	bytes, err := enumLesson_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/lesson_order_field.gql", size: 219, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumOrder_directionGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\x31\x8e\x83\x40\x0c\x85\xe1\xde\xa7\x78\x12\xfd\xde\x61\x17\xb6\x4e\x24\x4e\x30\x99\x31\x60\x09\x6c\x34\x1e\x40\x51\x94\xbb\x47\x28\x09\x45\xba\xb4\x96\xdf\xf7\x57\x38\x9b\xbb\x5c\x46\x46\x92\xcc\xb1\x88\xa9\x43\x14\xdb\x20\x71\x40\x31\x58\x4e\x9c\x11\x30\x8a\x17\x58\x07\x29\x3c\x39\xb6\x81\x15\x73\xb6\x55\x12\x27\x04\x7d\xbe\xfd\x5d\xa9\x42\xc8\xfd\x32\xb1\x16\x62\x5d\x26\x9c\xf6\x7b\xf3\xa6\x71\x23\xa0\x42\x3b\x73\x94\x4e\xd8\xf7\x65\xf0\xc8\x9a\x44\xfb\x57\xaa\xb3\x3d\xd7\xcb\xca\x87\x7a\x98\x3f\x04\xfc\xb6\x35\x7d\x2a\x48\xfc\xa5\xd2\xfc\xb7\x35\xdd\xe9\x11\x00\x00\xff\xff\xad\x7c\xcb\xda\x00\x01\x00\x00")

func enumOrder_directionGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumOrder_directionGql,
		"enum/order_direction.gql",
	)
}

func enumOrder_directionGql() (*asset, error) {
	bytes, err := enumOrder_directionGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/order_direction.gql", size: 256, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumSearch_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x6a\xc3\x30\x10\x44\xef\xfa\x8a\x81\xdc\xf3\x0f\x8a\xad\xd2\x8b\xdd\x90\x38\xbd\x06\x59\x5a\xb0\x20\x92\xd2\xd5\xaa\xc5\x94\xfe\x7b\xb1\x4b\xdb\x8b\x73\x1d\xde\xcc\xdb\xdd\xe1\xc8\xf9\x4e\x2c\x81\x0a\xc6\x19\x1f\x53\x70\x13\x0a\x59\x76\x13\x98\x4a\xbd\x09\x82\x50\x84\xcb\x29\x91\x93\x90\x53\x81\xb3\x09\x23\x21\xb3\x27\x26\xbf\x57\x94\x6a\xc4\x79\xed\xbc\x2c\xd9\x53\xa0\x9b\xc7\xa7\x02\x76\x58\x83\x75\x62\xdd\xb7\xfe\xdd\x26\x47\x90\x10\x69\xaf\x00\xdd\xbe\xea\xbe\x31\xed\x55\x0f\x6a\x8b\x1f\xa9\x08\xa2\x15\x37\x41\x32\xde\x2a\xf1\xbc\xd4\x0e\xe6\x3c\x5c\x3b\x3d\x34\xcf\x9b\x2d\xc7\x64\x97\x53\xff\x34\xcd\xc9\xe8\xe1\xb1\x25\xd5\x38\x12\x2f\x60\x7f\xe9\x0e\xe6\xb4\x0d\xd9\x9f\xad\x5e\x77\x66\x13\xa8\x77\x6f\xe5\xff\xb5\xcb\xb1\xfd\x75\x7e\xa9\xef\x00\x00\x00\xff\xff\xed\xb7\xb6\x8a\x68\x01\x00\x00")

func enumSearch_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumSearch_order_fieldGql,
		"enum/search_order_field.gql",
	)
}

func enumSearch_order_fieldGql() (*asset, error) {
	bytes, err := enumSearch_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/search_order_field.gql", size: 360, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumSearch_typeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcc\xbd\x8a\xc2\x40\x14\xc5\xf1\x7e\x9e\xe2\xc0\xf6\x79\x87\x85\x4d\xb7\x28\x64\x92\xc2\x4a\x86\xe4\x6a\x46\x93\x9b\x30\x67\xae\x20\xe2\xbb\x4b\x2c\xc4\xc6\x8f\xf2\xc0\xff\x77\x7e\x50\xc9\x9c\x84\xa2\x99\xc8\xbd\x20\x6a\x17\x4f\xb1\xb3\x30\x20\x09\x6d\xc8\xc4\xb4\x43\x00\x25\xa4\xb6\x2f\x9c\xa8\x8d\xf0\xf7\x51\x9f\x67\xc1\xc5\x01\xcb\x49\xb6\xa4\x7c\x90\x31\xe4\xb6\x8f\xba\xc7\x20\xe4\xa4\x44\x54\x30\x5b\x17\x85\x85\x03\xfe\x4b\xef\xd7\x2b\xf7\x9e\x3e\xf5\xbe\x6e\xfe\x36\x1f\x72\xa3\x24\x62\x52\xa4\xa3\xb1\xd0\xa8\x87\xb0\xd0\xc6\x97\xd5\x17\x12\x81\x94\xfc\xc2\x6f\x7f\xbd\x2f\x6b\x77\x75\xb7\x00\x00\x00\xff\xff\x1a\x35\x05\x08\x2e\x01\x00\x00")

func enumSearch_typeGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumSearch_typeGql,
		"enum/search_type.gql",
	)
}

func enumSearch_typeGql() (*asset, error) {
	bytes, err := enumSearch_typeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/search_type.gql", size: 302, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumStudy_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x4d\x0e\x82\x30\x10\x46\xf7\x3d\xc5\x97\xb0\xe7\x0e\x0d\xe0\x4e\x24\x8a\x6e\x4d\xe9\x4c\x42\x13\x99\x92\x52\x34\xc4\x78\x77\x03\xfe\x6d\xd4\xed\x97\xf7\xde\x4c\x82\x2a\xf8\x9e\x43\x74\x3c\xa0\x99\x70\x69\x9d\x6d\x31\xc4\x91\x26\x58\x2f\xc2\x36\x3a\x2f\x03\xac\x11\x34\x0c\x1f\x88\x03\x53\xaa\x58\xc6\x0e\xbb\x19\xdb\xcc\xd3\xca\xf1\x89\x70\x55\x40\x82\x65\x58\x12\xcf\xa6\xa1\xb3\x11\xcb\x88\xae\xe3\x54\x01\x3a\x3f\xe8\x32\x2b\xf2\xa3\xae\xd5\x77\xc3\x06\x36\xf3\xdd\xb7\x92\x6d\x0b\x5d\xff\x33\xc4\x3c\xc0\x52\xaf\x8b\x1f\xc8\xd8\x93\x89\x9f\x2f\xf6\x55\xfe\x4a\xde\xd4\x3d\x00\x00\xff\xff\xf4\xfc\xdd\x91\x07\x01\x00\x00")

func enumStudy_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumStudy_order_fieldGql,
		"enum/study_order_field.gql",
	)
}

func enumStudy_order_fieldGql() (*asset, error) {
	bytes, err := enumStudy_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/study_order_field.gql", size: 263, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumUser_asset_order_fieldGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\x41\xaa\x83\x30\x18\xc4\xf1\x7d\x4e\x31\xe0\xde\x3b\x84\xa7\x6f\xd7\x56\x8a\xae\x4b\x4c\x06\x0c\xd4\x44\xbe\x44\x4a\x29\xbd\x7b\x89\xd2\xae\xdc\x0e\xff\xf9\x55\xe8\x24\x2e\x94\xec\x99\x30\x3e\xf1\x98\xbc\x9d\x60\x52\x62\x86\x8d\x21\xd0\x66\x1f\x43\x82\x35\x01\x23\x11\xc5\x51\xe8\x6a\xc5\xb0\xce\x18\x12\x45\x97\xf4\x52\xe6\x7f\xcf\xbb\xc3\x4b\x01\x15\xb6\x61\x67\x36\xd6\x0a\x4d\x81\x90\xfd\xcc\x5a\x01\x7f\xd7\x56\xf7\x6d\x73\xd3\xbd\x3a\x3c\x04\xb3\x77\x67\x7d\x6a\x8f\x8b\x75\x71\x26\xf3\x07\x0e\x5d\xf3\x05\xdf\xea\x13\x00\x00\xff\xff\xa7\xb9\xd9\x0f\xd6\x00\x00\x00")

func enumUser_asset_order_fieldGqlBytes() ([]byte, error) {
	return bindataRead(
		_enumUser_asset_order_fieldGql,
		"enum/user_asset_order_field.gql",
	)
}

func enumUser_asset_order_fieldGql() (*asset, error) {
	bytes, err := enumUser_asset_order_fieldGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enum/user_asset_order_field.gql", size: 214, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputAdd_appleGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x4c\x49\x71\x2c\x28\xc8\x49\xd5\xe3\xca\x04\x4b\xc0\xf8\x10\x65\xd5\x5c\x0a\x0a\xca\x0a\x21\x19\xa9\x0a\x60\xc1\xc4\xa4\x9c\x54\x05\x4f\x17\x85\x92\x7c\x85\x44\x88\x26\x05\x08\x03\x24\xe1\x99\x62\xa5\xe0\xe9\xa2\xc8\x55\xcb\x05\x08\x00\x00\xff\xff\xb0\xad\xaf\x2c\x65\x00\x00\x00")

func inputAdd_appleGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputAdd_appleGql,
		"input/add_apple.gql",
	)
}

func inputAdd_appleGql() (*asset, error) {
	bytes, err := inputAdd_appleGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/add_apple.gql", size: 101, mode: os.FileMode(420), modTime: time.Unix(1529252013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputAdd_emailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x4c\x49\x71\xcd\x4d\xcc\xcc\xd1\xe3\xca\x04\x4b\xc0\xf8\x10\x65\xd5\x5c\x0a\x0a\xca\x0a\x61\x89\x39\xa5\xa9\x0a\xf9\x69\x0a\x25\x19\xa9\x0a\xa9\x20\x59\x85\xc4\x94\x94\xa2\xd4\xe2\x62\x85\x92\x7c\x10\x53\x8f\x4b\x01\x22\x6e\xa5\x10\x5c\x52\x94\x99\x97\xae\xc8\x55\xcb\x05\x08\x00\x00\xff\xff\x67\x92\xc9\xb4\x6b\x00\x00\x00")

func inputAdd_emailGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputAdd_emailGql,
		"input/add_email.gql",
	)
}

func inputAdd_emailGql() (*asset, error) {
	bytes, err := inputAdd_emailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/add_email.gql", size: 107, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputAdd_lesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcc\x41\x0a\x82\x50\x14\x85\xe1\xf9\x5b\xc5\x2f\xce\x5b\x80\xb3\xc8\xc9\x83\x68\x52\x2b\xa8\x77\x4d\x21\xef\x15\xbd\x41\x12\xed\x3d\x52\x5e\x03\xa7\x87\xff\x3b\x25\x51\x87\xa7\xe3\xf3\x20\x34\x36\xb2\x4f\xe9\x28\xd3\x64\x7a\xb0\xbe\x17\xf5\x5d\xe8\x96\x60\xbb\xaf\xec\x1d\xa0\xe4\xd2\x0a\x2e\x2f\xc7\x1a\xbc\x15\x6e\x99\xc2\xd5\xd2\x5c\x71\xf6\xb1\xd3\x7b\x11\xfe\xf5\xc9\x92\x10\xeb\x0c\x1e\xcb\x33\x6e\x99\x62\xfa\xd3\xeb\x1e\x53\x45\xac\x8b\xf0\x09\xdf\x00\x00\x00\xff\xff\x78\x6f\x65\x2c\xae\x00\x00\x00")

func inputAdd_lesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputAdd_lesson_commentGql,
		"input/add_lesson_comment.gql",
	)
}

func inputAdd_lesson_commentGql() (*asset, error) {
	bytes, err := inputAdd_lesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/add_lesson_comment.gql", size: 174, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputApple_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xb1\x0a\xc2\x30\x10\x86\xf7\x7b\x8a\xbf\x74\xef\x03\x74\x13\xc4\xd5\x45\x70\x4e\x93\x93\x1c\x94\xbb\x90\x44\xa4\x88\xef\x2e\x69\xd1\xba\x38\xde\xcf\xf7\x7d\x5c\x8f\xab\x5b\x0a\x44\xf1\x88\xe2\x23\x5c\x4a\x33\xc3\x9b\x2a\xfb\x2a\xa6\x05\xde\x29\x26\x86\xe5\xc0\x99\xc3\x40\xa2\xe9\x5e\x71\x68\xdc\xb9\x6d\x78\x12\xd0\xe3\x12\x19\x41\xf2\x66\xed\xbd\x6a\x9b\x09\xb5\xc0\x65\x20\xec\xd0\x88\xd5\x3f\x7e\xee\x8e\xbe\xa1\x9b\xf0\x1c\xfe\x45\x30\x2d\xad\xb3\x32\xe3\xcf\x23\xa7\x36\x74\xf4\xa2\x77\x00\x00\x00\xff\xff\x13\x77\xb8\x48\xd4\x00\x00\x00")

func inputApple_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputApple_orderGql,
		"input/apple_order.gql",
	)
}

func inputApple_orderGql() (*asset, error) {
	bytes, err := inputApple_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/apple_order.gql", size: 212, mode: os.FileMode(420), modTime: time.Unix(1529355021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputCreate_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x2e\x4a\x4d\x2c\x49\xf5\x49\x2d\x2e\xce\xcf\xd3\xe3\xca\x04\x4b\x22\x8b\x41\x94\x57\x73\x29\x28\x24\xe5\xa7\x54\x5a\x29\x80\x40\x70\x49\x51\x66\x5e\x3a\x97\x82\x42\x71\x49\x69\x4a\xa5\x67\x8a\x95\x82\x82\xa7\x8b\x22\x97\x82\x42\x49\x66\x49\x4e\xaa\x15\x42\x89\x22\x57\x2d\x17\x20\x00\x00\xff\xff\xae\x5e\x3b\xfc\x72\x00\x00\x00")

func inputCreate_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputCreate_lessonGql,
		"input/create_lesson.gql",
	)
}

func inputCreate_lessonGql() (*asset, error) {
	bytes, err := inputCreate_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/create_lesson.gql", size: 114, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputCreate_studyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x2e\x4a\x4d\x2c\x49\x0d\x2e\x29\x4d\xa9\xd4\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\xa4\xa4\x16\x27\x17\x65\x16\x94\x64\xe6\xe7\x59\x29\x28\x04\x97\x14\x65\xe6\xa5\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\xc0\x00\x44\x58\x91\xab\x96\x0b\x10\x00\x00\xff\xff\x74\x2b\x3e\x91\x68\x00\x00\x00")

func inputCreate_studyGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputCreate_studyGql,
		"input/create_study.gql",
	)
}

func inputCreate_studyGql() (*asset, error) {
	bytes, err := inputCreate_studyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/create_study.gql", size: 104, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputCreate_userGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x2e\x4a\x4d\x2c\x49\x0d\x2d\x4e\x2d\xd2\xe3\xca\x04\x4b\x21\x44\x20\x4a\xab\xb9\x14\x14\x52\x73\x13\x33\x73\xac\x14\x40\x20\xb8\xa4\x28\x33\x2f\x5d\x91\x4b\x41\x21\x27\x3f\x3d\x33\x0f\x5d\xb0\x20\xb1\xb8\xb8\x3c\xbf\x28\xc5\x0a\x21\x58\xcb\x05\x08\x00\x00\xff\xff\x39\x13\x48\x49\x76\x00\x00\x00")

func inputCreate_userGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputCreate_userGql,
		"input/create_user.gql",
	)
}

func inputCreate_userGql() (*asset, error) {
	bytes, err := inputCreate_userGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/create_user.gql", size: 118, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_emailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\x75\xcd\x4d\xcc\xcc\xd1\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\x28\x2b\x78\xa6\x28\xe4\xa7\x29\x94\x64\xa4\x2a\xa4\x42\x54\x2b\x40\x18\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\x01\xcc\x46\xb6\x5d\x00\x00\x00")

func inputDelete_emailGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_emailGql,
		"input/delete_email.gql",
	)
}

func inputDelete_emailGql() (*asset, error) {
	bytes, err := inputDelete_emailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_email.gql", size: 93, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\xf5\x49\x2d\x2e\xce\xcf\xd3\xe3\xca\x04\x4b\x22\x8b\x41\x94\x57\x73\x29\x28\x28\x2b\x78\xba\x28\xe4\xa7\x29\x94\x64\xa4\x2a\xe4\x40\xd5\x2b\x40\x59\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xaf\x74\x88\x1e\x61\x00\x00\x00")

func inputDelete_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_lessonGql,
		"input/delete_lesson.gql",
	)
}

func inputDelete_lessonGql() (*asset, error) {
	bytes, err := inputDelete_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_lesson.gql", size: 97, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_lesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\xf5\x49\x2d\x2e\xce\xcf\x73\xce\xcf\xcd\x4d\xcd\x2b\xd1\xe3\xca\x04\xab\xc1\x22\x05\xd1\x5c\xcd\xa5\xa0\xa0\xac\xe0\xe9\xa2\x90\x9f\xa6\x50\x92\x91\xaa\x90\x03\x56\xa2\x90\x0c\xd3\xae\x00\x15\x81\x69\x4a\xb1\x52\xf0\x74\x51\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x57\x6b\x20\x56\x7e\x00\x00\x00")

func inputDelete_lesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_lesson_commentGql,
		"input/delete_lesson_comment.gql",
	)
}

func inputDelete_lesson_commentGql() (*asset, error) {
	bytes, err := inputDelete_lesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_lesson_comment.gql", size: 126, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_studyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\x0d\x2e\x29\x4d\xa9\xd4\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\x28\x2b\x78\xba\x28\xe4\xa7\x29\x94\x64\xa4\x2a\x14\x43\x54\x2b\x40\x18\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\x55\x52\x35\x43\x5d\x00\x00\x00")

func inputDelete_studyGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_studyGql,
		"input/delete_study.gql",
	)
}

func inputDelete_studyGql() (*asset, error) {
	bytes, err := inputDelete_studyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_study.gql", size: 93, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputDelete_userGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\x0d\x2d\x4e\x2d\xd2\xe3\xca\x04\x4b\x21\x44\x20\x4a\xab\xb9\x14\x14\x94\x15\x3c\x5d\x14\xf2\xd3\x14\x4a\x32\x52\x15\x4a\xc1\x6a\x15\xc0\xb4\x67\x8a\x95\x82\xa7\x8b\x22\x57\x2d\x17\x20\x00\x00\xff\xff\x40\xdb\x11\xa9\x59\x00\x00\x00")

func inputDelete_userGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputDelete_userGql,
		"input/delete_user.gql",
	)
}

func inputDelete_userGql() (*asset, error) {
	bytes, err := inputDelete_userGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/delete_user.gql", size: 89, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputLesson_comment_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x0a\xc2\x30\x10\x86\xf7\x3c\xc5\x5f\xba\xf7\x01\xba\x2a\x4e\x82\x8b\xe0\xdc\x26\x57\x72\xd0\x5e\x4a\x72\x45\x8a\xf8\xee\x92\x14\xed\xa0\x83\x63\xc8\xf7\x7f\xdf\xd5\xb8\x75\x6b\x02\x0b\xee\x9e\xad\xc7\x48\x29\x05\x81\x0d\xd3\x44\xa2\x09\xb6\x13\xf4\x84\x10\x1d\x45\x72\x58\xe6\x20\x88\xa4\x4b\x94\xc6\xb0\xcc\x8b\xe2\x5c\x16\x87\x6d\x70\xc9\x1c\x1e\x06\xa8\x71\xf5\x04\xc7\x91\xac\x72\x90\xbd\xa0\x61\xb3\x7d\xa5\xfa\x15\xea\x09\x69\x26\xcb\x03\x93\xc3\xc0\x34\xba\xc6\x60\xb7\xb4\x28\x81\xe3\xfb\x5d\x99\x4f\xa9\xc0\x7f\x55\xb2\xb1\xd0\xed\x8f\xdb\x4f\xf9\xa3\x32\x4f\xf3\x0a\x00\x00\xff\xff\xac\xdd\x87\x22\x19\x01\x00\x00")

func inputLesson_comment_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputLesson_comment_orderGql,
		"input/lesson_comment_order.gql",
	)
}

func inputLesson_comment_orderGql() (*asset, error) {
	bytes, err := inputLesson_comment_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/lesson_comment_order.gql", size: 281, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputLesson_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xbf\x0a\xc2\x30\x10\xc7\xf1\xfd\x9e\xe2\x57\xba\xf7\x01\x3a\x8b\x93\xe0\x22\x38\xb7\xc9\x95\x1c\x94\x4b\xc8\x1f\xa4\x88\xef\x2e\x89\xd8\x3a\x39\x26\x7c\xef\x73\xd7\xe3\x3e\x6d\x09\xa2\x78\x38\x31\x0e\x2b\xa7\xe4\x35\xc1\x4c\x8a\x99\xe1\xa3\xe5\xc8\x16\x25\x78\x45\xe4\x5c\xa2\x0e\x24\x1a\x4a\xc6\xa5\x95\xd7\x1a\xe0\x49\x40\x8f\x9b\x63\x58\x89\x6c\xb2\x78\x3d\xc8\xec\x3f\xcc\x6e\xcf\x1b\xb2\x63\xa4\xc0\x46\x16\x61\x8b\x45\x78\xb5\x03\xe1\x98\x1e\xd1\xe0\xd3\xf7\xdd\xd1\xbe\xa1\xc5\x7f\xf5\x2a\xb5\x6a\xfc\x3d\xf2\x5c\x7f\x3a\x7a\xd1\x3b\x00\x00\xff\xff\xa8\xf8\x45\x7f\xf3\x00\x00\x00")

func inputLesson_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputLesson_orderGql,
		"input/lesson_order.gql",
	)
}

func inputLesson_orderGql() (*asset, error) {
	bytes, err := inputLesson_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/lesson_order.gql", size: 243, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputMove_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\xbf\x0a\xc2\x30\x10\x87\xf7\x3c\xc5\x4f\xba\xe8\x52\x9c\x3b\x77\x09\x28\x74\xf0\x05\x52\x7b\x35\x81\xf4\x2e\x24\x57\x41\xc4\x77\x97\xfe\x01\xdd\x8e\xbb\xef\xfb\xae\x82\xe5\x34\x2b\xf4\x95\x08\xa3\x64\x5c\xe5\x49\x17\x2a\x45\xb8\x36\x61\x3d\xfd\x36\x1b\xfa\x36\x40\x85\x9b\x27\xd8\x16\x32\x42\x3d\x21\xee\x06\xf6\xc9\x0e\x0d\x6c\x7b\x30\x2b\xda\x45\x77\xa7\x3f\x0c\x4e\xa1\x3e\x14\xf0\x3c\xf5\x94\x69\x40\x92\x12\x34\x08\xe3\x38\xcd\x45\xd1\x13\x1e\x99\x9c\x52\x86\x7a\xc7\x38\x9f\x6a\x74\xae\x2c\x42\x8c\x50\x41\x5a\x8b\x41\xb7\x12\x61\xcc\xc2\xba\x7c\xdf\x8a\x0d\x2c\xab\xf9\x98\x6f\x00\x00\x00\xff\xff\x2d\xc2\x02\xee\xdd\x00\x00\x00")

func inputMove_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputMove_lessonGql,
		"input/move_lesson.gql",
	)
}

func inputMove_lessonGql() (*asset, error) {
	bytes, err := inputMove_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/move_lesson.gql", size: 221, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputRemove_appleGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x4a\xcd\xcd\x2f\x4b\x75\x2c\x28\xc8\x49\xd5\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\x28\x2b\x84\x64\xa4\x2a\x80\x05\x13\x93\x72\x52\x15\x3c\x5d\x14\x4a\xf2\x15\x12\x21\xfa\x14\x20\x0c\x90\x84\x67\x8a\x95\x82\xa7\x8b\x22\x57\x2d\x17\x20\x00\x00\xff\xff\xc6\x7a\xed\x0b\x6b\x00\x00\x00")

func inputRemove_appleGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputRemove_appleGql,
		"input/remove_apple.gql",
	)
}

func inputRemove_appleGql() (*asset, error) {
	bytes, err := inputRemove_appleGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/remove_apple.gql", size: 107, mode: os.FileMode(420), modTime: time.Unix(1529252044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputRequest_email_verificationGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x4a\x2d\x2c\x4d\x2d\x2e\x71\xcd\x4d\xcc\xcc\x09\x4b\x2d\xca\x4c\xcb\x4c\x4e\x2c\xc9\xcc\xcf\xe3\xca\x04\xab\xc3\x25\x0d\x31\xa5\x9a\x4b\x41\x41\x59\x01\x2c\xa9\x50\x92\xaf\x50\x06\x52\x50\xa9\xa7\xc0\xa5\xa0\x90\x0a\x12\xb3\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x73\xfb\xae\xee\x79\x00\x00\x00")

func inputRequest_email_verificationGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputRequest_email_verificationGql,
		"input/request_email_verification.gql",
	)
}

func inputRequest_email_verificationGql() (*asset, error) {
	bytes, err := inputRequest_email_verificationGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/request_email_verification.gql", size: 121, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputRequest_password_resetGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x4a\x2d\x2c\x4d\x2d\x2e\x09\x48\x2c\x2e\x2e\xcf\x2f\x4a\x09\x4a\x2d\x4e\x2d\xe1\xca\x04\xab\xc1\x26\x05\xd1\x5d\xcd\xa5\xa0\xa0\xac\xe0\x9a\x9b\x98\x99\xa3\x90\x9f\xa6\x50\x92\x91\xaa\x50\x5a\x9c\x5a\xa4\xc7\xa5\xa0\x90\x0a\x12\xb4\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x89\xda\xb0\x17\x72\x00\x00\x00")

func inputRequest_password_resetGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputRequest_password_resetGql,
		"input/request_password_reset.gql",
	)
}

func inputRequest_password_resetGql() (*asset, error) {
	bytes, err := inputRequest_password_resetGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/request_password_reset.gql", size: 114, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputReset_passwordGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcc\xb1\x0a\x02\x31\x10\x04\xd0\x3e\x5f\x31\x72\xbd\x1f\x60\x6f\x61\x23\xa2\xfe\xc0\xa1\x1b\x6f\x51\x93\xb0\x99\x78\x04\xf1\xdf\x25\xa7\x22\xda\x2d\x33\x6f\xb6\xc3\x2a\xa4\x42\xb0\x26\x81\x8f\x86\xad\x64\xe1\xa6\xcf\x79\x8c\x76\x74\x3a\x95\x3f\xd9\xcb\xdf\x1d\xd0\x61\x79\xed\xf5\x82\xe8\xc1\x41\x50\xb2\xd8\xdc\x01\xd2\xc2\x05\x76\x34\x0d\xa7\x99\x9b\xe0\x5a\x46\xa4\xf7\x83\x66\x3e\xf7\x1f\xdb\xc7\xb3\x04\x30\xe2\x26\xa6\xbe\xa2\x2f\x1c\x24\x50\x0f\xca\xda\x66\x6c\xfd\x77\xf3\x70\xcf\x00\x00\x00\xff\xff\x8c\x58\xaf\xe2\xbf\x00\x00\x00")

func inputReset_passwordGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputReset_passwordGql,
		"input/reset_password.gql",
	)
}

func inputReset_passwordGql() (*asset, error) {
	bytes, err := inputReset_passwordGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/reset_password.gql", size: 191, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputSearch_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xb1\xaa\xc2\x40\x10\x85\xe1\x7e\x9f\xe2\x84\xf4\x79\x80\xd4\x97\xdb\x5a\x28\x58\x27\xbb\x27\xec\x80\xee\x86\xd9\x09\x12\xc4\x77\x97\xac\x68\xac\x2c\x67\xf8\xe7\x63\x5a\x9c\x87\xb5\x40\x12\x6e\x51\x7c\x44\xe1\xa0\x3e\xb2\xc0\x0f\x09\x23\x91\x35\x50\x19\xb0\xcc\x39\x41\x69\x8b\xa6\xce\x49\x9a\x17\xc3\xb1\xa6\x87\x2d\xc0\xdd\x01\x2d\x4e\x91\x08\xa2\xf4\x26\x39\xed\xa6\xe5\x17\x03\x31\x5e\x0b\xc6\x15\x16\x89\x32\xd3\xcb\x24\x0c\x98\x84\x97\xd0\x39\xec\xb7\x3d\x2a\xfb\xf7\x9e\x1b\xf7\xf1\x6b\xfc\xc3\xde\x9c\xda\xf4\xdf\x0f\xfe\x6f\x9b\xc6\x3d\xdc\x33\x00\x00\xff\xff\xf8\xc6\x4e\x6a\xf0\x00\x00\x00")

func inputSearch_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputSearch_orderGql,
		"input/search_order.gql",
	)
}

func inputSearch_orderGql() (*asset, error) {
	bytes, err := inputSearch_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/search_order.gql", size: 240, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputStudy_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\x31\xaa\xc3\x30\x0c\x06\xe0\x5d\xa7\xf8\x43\xf6\x1c\x20\xf3\xe3\xad\x1d\x5a\xe8\x9c\x58\x0a\x16\x14\x39\xd8\x32\x25\x94\xde\xbd\x24\xa5\x49\xa7\x8e\x92\x7e\x7d\x52\x8b\xeb\xb0\x14\xa8\xe1\x1e\x35\x44\x14\xaf\xac\x52\x10\x06\xc3\x28\x48\x99\x25\x0b\xa3\xce\xc9\x90\xc5\x6b\xb6\x8e\xd4\xe6\xea\x38\x7b\xe5\xe5\xb4\xce\xf1\x20\xa0\xc5\x25\x0a\x58\xb3\x04\xd7\x64\x87\xe8\xe9\xad\xec\xf4\xb8\xc0\xa3\xa0\xcc\x12\x74\x52\x61\x4c\x2a\x37\xee\x08\xc7\x76\x8f\x0d\xfe\xfb\xd4\x0d\xed\x17\xb6\xf0\x4f\x7d\x95\xb6\x54\xff\xf5\xe3\xff\xda\x68\xe8\x49\xaf\x00\x00\x00\xff\xff\x23\x7e\x0d\x28\xf1\x00\x00\x00")

func inputStudy_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputStudy_orderGql,
		"input/study_order.gql",
	)
}

func inputStudy_orderGql() (*asset, error) {
	bytes, err := inputStudy_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/study_order.gql", size: 241, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_emailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x2d\x48\x49\x2c\x49\x75\xcd\x4d\xcc\xcc\xd1\xe3\xca\x04\xcb\x21\x09\x41\x14\x57\x73\x29\x28\x28\x2b\x78\xa6\x28\xe4\xa7\x29\x94\x64\xa4\x2a\xa4\x42\x54\x2b\x40\x18\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\x60\x45\x21\x19\xa9\x10\xb3\xd1\x95\x82\x04\xad\x14\xc0\x86\x86\x54\x16\xa4\x72\xd5\x72\x01\x02\x00\x00\xff\xff\xb5\x31\x5a\x4d\x8b\x00\x00\x00")

func inputUpdate_emailGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_emailGql,
		"input/update_email.gql",
	)
}

func inputUpdate_emailGql() (*asset, error) {
	bytes, err := inputUpdate_emailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_email.gql", size: 139, mode: os.FileMode(420), modTime: time.Unix(1529092790, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_lessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x2d\x48\x49\x2c\x49\xf5\x49\x2d\x2e\xce\xcf\xd3\xe3\xca\x04\x4b\x22\x8b\x41\x94\x57\x73\x29\x28\x28\x2b\x84\x64\xa4\x2a\x24\xe5\xa7\x54\x2a\xe4\xa7\x29\x94\x64\xa4\x2a\xe4\x40\x75\x29\x80\x45\xad\x14\x82\x4b\x8a\x32\xf3\xd2\xb9\xc0\x6a\x3d\x5d\x30\x55\x41\x58\x9e\x29\x56\x0a\x9e\x2e\x8a\x5c\x70\x23\x4b\x32\x4b\x72\x52\x31\x55\x83\x85\xe1\x86\xd6\x72\x01\x02\x00\x00\xff\xff\x83\xcd\xcb\x6e\xbb\x00\x00\x00")

func inputUpdate_lessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_lessonGql,
		"input/update_lesson.gql",
	)
}

func inputUpdate_lessonGql() (*asset, error) {
	bytes, err := inputUpdate_lessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_lesson.gql", size: 187, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_lesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcc\x2b\x28\x2d\x51\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x08\x2d\x48\x49\x2c\x49\xf5\x49\x2d\x2e\xce\xcf\x73\xce\xcf\xcd\x4d\xcd\x2b\xd1\xe3\xca\x04\xab\xc1\x22\x05\xd1\x5c\xcd\xa5\xa0\xa0\xac\x10\x92\x91\xaa\x90\x94\x9f\x52\xa9\x90\x9f\xa6\x50\x92\x91\xaa\x90\x03\x56\xa8\x90\x0c\x33\x44\x01\x2c\x6b\xa5\x10\x5c\x52\x94\x99\x97\xce\x05\xd6\xe3\xe9\x82\x5b\x75\x0e\x8a\x45\x29\x56\x0a\x9e\x2e\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\x9d\x66\x17\x04\xb2\x00\x00\x00")

func inputUpdate_lesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_lesson_commentGql,
		"input/update_lesson_comment.gql",
	)
}

func inputUpdate_lesson_commentGql() (*asset, error) {
	bytes, err := inputUpdate_lesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_lesson_comment.gql", size: 178, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_studyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8b\x31\x0e\xc2\x30\x0c\x45\x77\x9f\xe2\xa3\xee\x1c\xa0\x73\x17\xcf\x85\x03\x20\xec\x52\x2f\x89\x95\xba\x43\x84\xb8\x3b\x52\xb2\x44\xea\xf6\xf5\xdf\x7b\x13\x38\xf9\x19\x88\xea\x8a\x2d\x17\x3c\x5d\x5e\xa1\x6b\x9c\x52\xef\x64\x8d\x0d\x57\x97\xbf\x04\x4c\x78\xec\x0a\xd1\xe3\x5d\xcc\xc3\x72\x42\xde\x10\xbb\xe2\xe8\x29\x46\x36\x63\x8d\x62\xe9\x43\x2d\xe4\xe5\xe2\xb6\xc1\x32\x83\x97\x1b\xfd\xe8\x1f\x00\x00\xff\xff\x69\x21\x86\x19\x96\x00\x00\x00")

func inputUpdate_studyGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_studyGql,
		"input/update_study.gql",
	)
}

func inputUpdate_studyGql() (*asset, error) {
	bytes, err := inputUpdate_studyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_study.gql", size: 150, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_topicsGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcc\x31\x0e\xc2\x30\x0c\x85\xe1\xdd\xa7\x78\x55\xf7\x1e\xa0\x5b\xa5\x32\x64\x61\x01\x26\xc4\x10\xe1\x14\x22\xd1\x24\x4a\x9c\x21\x42\xdc\x1d\xc5\x1d\x7f\xfb\xb3\x47\x98\x90\xaa\x40\x5a\x72\xd8\x62\xc6\xc2\x7c\xda\xad\xff\x4c\xe4\x75\x71\x4b\x6c\xc5\x5d\x63\xf2\xcf\x72\xd0\x2f\x01\x23\xcc\x8a\xb8\x41\xde\x0e\x45\x2a\x37\x48\x44\x55\x3a\x11\x8e\x91\xe1\x19\x66\x1d\x48\xf9\x12\x60\x73\xb6\x4d\x8f\xfa\x33\x04\xbb\xbb\xd2\xb1\xe6\xb9\xd7\x8c\xfb\x45\xb2\x0f\xaf\xe1\x31\xd0\x8f\xfe\x01\x00\x00\xff\xff\x9e\x74\x94\x8f\x9c\x00\x00\x00")

func inputUpdate_topicsGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_topicsGql,
		"input/update_topics.gql",
	)
}

func inputUpdate_topicsGql() (*asset, error) {
	bytes, err := inputUpdate_topicsGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_topics.gql", size: 156, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUpdate_userGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x31\xae\xc2\x40\x0c\x44\x7b\x9f\x62\xbe\x52\xfc\x2e\x07\xa0\x86\x22\x35\xe4\x00\x09\x71\x82\xa5\xcd\x7a\xb5\x71\x0a\x84\xb8\x3b\x72\x02\x42\x11\x14\x54\xe3\xf5\xbe\x37\x2e\x50\xc5\x34\x1b\xec\x9a\x18\xbd\x66\xd4\xa9\x6b\x8c\xeb\x89\x73\x49\xb2\x7c\xbd\x37\x2b\x7a\x23\xa0\xc0\xe9\xc2\x98\x27\xce\xff\x13\xd2\xdc\x06\x39\x23\x65\xed\x25\x30\x5a\xd1\x92\xe0\xb1\xc3\xd1\xb2\xc4\x81\x36\x46\x6c\xc6\x65\xe8\x60\x8a\xa0\x83\x44\xc7\x97\xe1\xbb\xf0\x79\xc2\x2b\x5c\xf2\xfc\xd5\xe1\xb1\x91\xe0\xd2\xba\x3f\xf8\x73\xeb\x56\x7b\x68\x0f\x7b\x36\x38\xea\x59\x75\x2f\xea\x8f\xee\xf4\x08\x00\x00\xff\xff\xb1\x73\x86\x92\x30\x01\x00\x00")

func inputUpdate_userGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUpdate_userGql,
		"input/update_user.gql",
	)
}

func inputUpdate_userGql() (*asset, error) {
	bytes, err := inputUpdate_userGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/update_user.gql", size: 304, mode: os.FileMode(420), modTime: time.Unix(1529093355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inputUser_asset_orderGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xb1\x0a\xc2\x30\x10\xc6\xf1\x3d\x4f\xf1\x95\xee\x7d\x80\x6e\x82\xb8\xba\x28\xce\x6d\xf2\x95\x1c\x48\x52\x92\x2b\x52\xc4\x77\x97\x44\x6a\xc1\xc1\x31\xe1\x7f\xbf\xbb\x16\xb7\x61\xcd\x90\x80\x87\x17\xeb\x31\xe4\x4c\xcd\xb0\x43\xc0\x48\xc4\xe4\x98\xe8\xb0\xcc\x31\x20\x51\x97\x14\x3a\x23\x61\x5e\x14\xd7\xcc\x74\x28\xf1\xb9\x34\x78\x1a\xa0\xc5\xc5\x13\x4e\x12\xad\x4a\x0c\x3b\xaa\xf1\x23\x6d\xfa\xb8\x42\x3d\x91\x67\x5a\x99\x84\x0e\x93\xf0\xee\x3a\x83\x7d\xb8\x47\x75\x8f\xdb\xbb\x31\xdf\x05\x35\xfe\x87\x17\xa8\x46\xfd\xcf\x95\xa7\xf2\xd9\x98\x97\x79\x07\x00\x00\xff\xff\xfb\xa7\x7e\x80\xf6\x00\x00\x00")

func inputUser_asset_orderGqlBytes() ([]byte, error) {
	return bindataRead(
		_inputUser_asset_orderGql,
		"input/user_asset_order.gql",
	)
}

func inputUser_asset_orderGql() (*asset, error) {
	bytes, err := inputUser_asset_orderGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "input/user_asset_order.gql", size: 246, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceAppleableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x31\x0e\xc2\x30\x10\x44\xd1\x7e\x4f\xf1\xa3\xf4\x39\x40\x3a\x10\x45\xe8\xb9\xc0\x26\x5e\xf0\x4a\x96\x13\xc5\x16\x14\x88\xbb\x23\x43\xba\xd1\x8c\xde\xf4\xdc\xa2\xe7\x47\xa1\x46\xad\x2c\x9a\x99\x0d\xdd\xb6\x64\x61\x10\xcf\xd5\xf6\xbb\x2e\xc6\xa9\x35\x3a\x27\xe3\x2d\xe0\x61\xe4\x7a\xe9\x44\xa0\x67\xd2\x86\x8d\xa7\xdb\xcb\xf6\xc3\x52\xa3\x97\x7f\x6e\x6a\x10\x8e\x7d\xd2\xf2\xfb\x0a\x23\xe7\x75\x4d\xa6\xb9\x93\x8f\x7c\x03\x00\x00\xff\xff\x7f\x8f\x12\x29\x86\x00\x00\x00")

func interfaceAppleableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceAppleableGql,
		"interface/appleable.gql",
	)
}

func interfaceAppleableGql() (*asset, error) {
	bytes, err := interfaceAppleableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/appleable.gql", size: 134, mode: os.FileMode(420), modTime: time.Unix(1529256047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceAuthorableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xc1\x4e\xf3\x30\x10\x84\xef\x7e\x8a\xa9\x7a\xef\x03\xe4\xd6\xaa\x87\xbf\xd2\xdf\x13\xe1\x01\x36\xf1\x14\x1b\x12\xbb\xb2\x37\xa4\x15\xe2\xdd\x51\x4d\x12\x41\x91\x38\x70\xdb\xcc\xee\x7c\x19\x79\xd6\xd8\x45\x7b\x85\x3a\x51\xb4\x12\xd0\x10\x32\xa8\x8b\x89\x76\x63\x7c\x50\xa6\x93\xb4\xc4\xb6\x68\xd2\x74\xc4\x9b\x01\xd6\xa8\x1d\x31\x64\x26\x8c\x2e\x2e\x0e\xa8\xf3\x19\x4d\xb4\xd7\x0d\x0c\x26\xb9\xc2\x63\x66\x32\x8b\xeb\xb6\x86\x64\x1c\x25\xbd\xd8\x38\x86\x8d\x41\xd1\x2a\x3c\x68\xf2\xe1\x69\x75\x77\x9a\x18\x2c\x0b\x3c\xe2\x5f\x7d\xfc\x3f\xdf\xdf\xe6\xaa\x28\xbf\x39\x94\x17\x9d\x1d\x35\x2f\x7a\xf7\x97\x83\x65\x50\x7f\xf2\xcc\x50\x47\x58\x51\x42\x82\x85\xfa\x9e\x18\x1d\x43\x91\x63\xf3\xcc\x56\x31\x4a\x46\x9b\x28\x7a\x7b\x1b\xcc\xe3\x56\x2b\xd4\xbe\x67\x21\x7a\x5b\xe1\xb0\xff\x09\x5f\x50\x1d\x73\x8e\x01\x6d\xec\x7b\x86\x4f\xe4\x79\x68\x3a\x9f\x1d\x2d\xa4\x44\x5d\xbe\x67\xf2\x1f\xa3\x76\x92\x15\xc3\xd9\xce\x79\xa7\xf1\x5b\xde\x35\xf6\xde\x16\xe3\xab\xe7\xc8\x34\x75\xf6\xa5\x48\x83\x69\xb5\xf7\x76\x3b\x15\xba\x8b\xb1\xa3\x84\x95\x79\x37\x1f\x01\x00\x00\xff\xff\xfe\xd5\x60\x61\x40\x02\x00\x00")

func interfaceAuthorableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceAuthorableGql,
		"interface/authorable.gql",
	)
}

func interfaceAuthorableGql() (*asset, error) {
	bytes, err := interfaceAuthorableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/authorable.gql", size: 576, mode: os.FileMode(420), modTime: time.Unix(1529252895, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceConnectionGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcf\xb1\x8e\x83\x30\x0c\x06\xe0\x3d\x4f\xf1\x23\x76\x1e\x20\x1b\x42\x37\xb0\x9c\x6e\xb8\x0d\xdd\x10\x25\x06\x2c\x81\x7d\x02\x77\xaa\xfa\xee\x55\xd2\x16\xaa\x6e\x7f\xa2\xcf\xc9\xef\x1a\x2d\xa2\x8a\x50\x34\x56\x81\x29\x02\x16\xde\x0d\x3a\x82\x8d\xd6\xbd\x71\x2c\x46\xdb\x18\x22\xa1\x3b\xe1\xd5\x01\x35\x7a\x19\x75\x5b\xc3\x31\xca\x09\x2c\xf8\x0f\x13\x4b\xb9\x6c\x1c\xf2\x89\xb2\xf3\xf8\x79\xa6\xca\x95\xe1\xf6\xf8\x88\xd2\x44\x7b\xb6\x25\x78\x0c\x5f\x69\xa2\xbf\x4f\x25\x9a\x1e\xaa\x04\x8f\xe1\x5b\xd3\x4b\xfd\xce\x04\x53\x0b\x0b\xa2\x5e\xe4\x6c\x9f\xeb\xd8\x4c\x6f\x2b\xe6\x07\x8a\xec\x32\xf4\xe8\xc5\x2a\x77\x73\xf7\x00\x00\x00\xff\xff\x35\x58\xb8\x38\x08\x01\x00\x00")

func interfaceConnectionGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceConnectionGql,
		"interface/connection.gql",
	)
}

func interfaceConnectionGql() (*asset, error) {
	bytes, err := interfaceConnectionGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/connection.gql", size: 264, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceDeletableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x0e\xc2\x30\x10\x04\xfb\x7b\xc5\x46\xe9\xf3\x80\x94\x24\x14\x3c\xe3\x6c\x2f\xf2\x21\xeb\x2c\x25\x27\x28\x10\x7f\x47\x20\xb7\x33\x9a\x99\x71\xf5\xb0\x30\x9e\x88\xaa\x81\xac\x8e\x44\x14\x36\x06\xcb\x22\xe6\xc1\xe3\xae\x99\xd8\x7f\x48\x53\x23\xde\x02\x58\x59\x71\xdb\x27\x11\x60\xc6\xa6\x8e\xa8\xc4\xd3\xf8\xe2\x31\x62\x44\xb5\x13\x3d\x3d\x98\x63\x11\x0c\xb9\xa9\xff\x47\x5c\x71\xe9\xbd\x51\x7d\x92\x8f\x7c\x03\x00\x00\xff\xff\xa1\x6e\x48\xaa\x86\x00\x00\x00")

func interfaceDeletableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceDeletableGql,
		"interface/deletable.gql",
	)
}

func interfaceDeletableGql() (*asset, error) {
	bytes, err := interfaceDeletableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/deletable.gql", size: 134, mode: os.FileMode(420), modTime: time.Unix(1529253039, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceEdgeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x10\x44\xd1\xde\xa7\x18\x94\x9e\x03\xa4\x4b\x41\x4b\x03\x17\xb0\xec\x89\xb3\x05\xb3\xc8\xd9\x54\x88\xbb\xa3\x24\x74\x5f\xfa\x7a\x03\x26\x81\xb5\x11\x26\x64\x14\x97\x58\xc2\x5c\xd7\x64\x0a\xf6\x39\x17\xe2\xb6\xff\x4f\x02\x06\x4c\x28\x5b\x5f\xbd\x63\xf6\x8e\x6d\x3d\xd8\x3b\x37\x53\x3e\x11\xfe\x7f\xc4\x23\xba\xa9\x5d\xd2\xc1\x9e\x0b\x61\xc1\x17\x72\x20\x16\x82\xaa\xf0\xf9\xcc\xda\xb8\x3b\x79\xe5\x88\xbb\x57\xa6\x6f\xfa\x05\x00\x00\xff\xff\xe8\x50\x6e\xbb\x97\x00\x00\x00")

func interfaceEdgeGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceEdgeGql,
		"interface/edge.gql",
	)
}

func interfaceEdgeGql() (*asset, error) {
	bytes, err := interfaceEdgeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/edge.gql", size: 151, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceNodeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x49\x2d\x4a\x4b\x4c\x4e\x55\xf0\xcb\x4f\x49\x55\xa8\xe6\x52\x50\xc8\x4c\xb1\x52\xf0\x74\x51\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\x6f\x40\x52\x35\x1d\x00\x00\x00")

func interfaceNodeGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceNodeGql,
		"interface/node.gql",
	)
}

func interfaceNodeGql() (*asset, error) {
	bytes, err := interfaceNodeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/node.gql", size: 29, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceStudy_nodeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x49\x2d\x4a\x4b\x4c\x4e\x55\x08\x2e\x29\x4d\xa9\xf4\xcb\x4f\x49\x55\xa8\xe6\x52\x50\x50\x56\x08\xc9\x48\x55\x28\x06\x89\x29\x24\x16\x17\xe7\x27\x67\x26\x96\xa4\xa6\x28\x94\x67\x96\x64\x28\x94\x64\x64\x16\x2b\xe4\xe5\xa7\xa4\xea\x71\x29\x40\x94\x58\x41\x74\x2b\x72\xd5\x72\x01\x02\x00\x00\xff\xff\xdd\x43\xe1\x5f\x51\x00\x00\x00")

func interfaceStudy_nodeGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceStudy_nodeGql,
		"interface/study_node.gql",
	)
}

func interfaceStudy_nodeGql() (*asset, error) {
	bytes, err := interfaceStudy_nodeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/study_node.gql", size: 81, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceTokenGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x49\x2d\x4a\x4b\x4c\x4e\x55\x08\xc9\xcf\x4e\xcd\x53\xa8\xe6\x52\x50\x48\xad\x28\xc8\x2c\x4a\x2d\x76\x2c\xb1\x52\x08\xc9\xcc\x4d\x55\xe4\x52\x50\xc8\x2c\x2e\x2e\x4d\x4d\x41\x88\xd4\x72\x01\x02\x00\x00\xff\xff\x78\xbd\xdb\x75\x39\x00\x00\x00")

func interfaceTokenGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceTokenGql,
		"interface/token.gql",
	)
}

func interfaceTokenGql() (*asset, error) {
	bytes, err := interfaceTokenGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/token.gql", size: 57, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceUniform_resource_locatableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\x41\xaa\x83\x30\x14\x85\xe1\x79\x56\x71\x1e\xce\x5d\xc0\x5b\x41\x0b\x0e\x24\x98\x05\x5c\xd3\x23\x09\xd8\x44\x6e\xae\x05\x29\xdd\x7b\x27\x52\x28\x74\xf6\x0f\xfe\xaf\x83\xe7\xa6\x6c\x2c\xd6\x20\xb0\x63\x23\x2c\x89\x21\x4a\xc1\x4c\x28\x4d\x33\x1f\xbc\x61\x3e\x20\x08\x7e\xe8\x5d\x2e\x46\x5d\x24\x12\xa1\xe4\xa5\xea\xdd\xb3\xd5\x5d\x23\x87\x1a\xc5\x64\x5e\x89\xa7\x03\x3a\x4c\x89\xb8\x4c\xd3\x88\x4d\x2c\xc1\x2a\x2c\xe5\x06\x3d\xef\xde\xe1\xd3\xa3\x58\xfa\x47\xf0\xd7\x3f\xf7\x2d\x83\x1f\x7e\xc2\x5d\xd7\xf3\x7f\xb9\x77\x00\x00\x00\xff\xff\xe9\x60\xa2\xe7\xc4\x00\x00\x00")

func interfaceUniform_resource_locatableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceUniform_resource_locatableGql,
		"interface/uniform_resource_locatable.gql",
	)
}

func interfaceUniform_resource_locatableGql() (*asset, error) {
	bytes, err := interfaceUniform_resource_locatableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/uniform_resource_locatable.gql", size: 196, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _interfaceUpdateableGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x0e\xc2\x30\x10\x04\xfb\x7b\xc5\x46\xe9\xf3\x80\x94\x04\x0a\x1e\xc0\x03\xce\xf6\x22\x1f\x8a\xce\x28\x39\xa0\x40\xfc\x1d\x09\xdc\xce\x68\x66\xc4\xc9\xc3\xc2\xb8\x23\xaa\x06\xb2\x3a\x12\xf1\xb8\x17\x0d\x96\x49\xcc\x83\xdb\x55\x33\x71\xf9\x21\x4d\x2b\xf1\x16\xc0\xca\x8c\xf3\x71\x10\x01\x46\x2c\xea\x88\x4a\x3c\x8d\x2f\x6e\xbd\x46\x54\xdb\xd1\xd2\x8d\x39\x26\x41\x97\x8b\xfa\xff\x34\xe3\xd0\xda\x4a\xf5\x41\x3e\xf2\x0d\x00\x00\xff\xff\x8e\x0a\xac\x4b\x87\x00\x00\x00")

func interfaceUpdateableGqlBytes() ([]byte, error) {
	return bindataRead(
		_interfaceUpdateableGql,
		"interface/updateable.gql",
	)
}

func interfaceUpdateableGql() (*asset, error) {
	bytes, err := interfaceUpdateableGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "interface/updateable.gql", size: 135, mode: os.FileMode(420), modTime: time.Unix(1529253050, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalarHtmlGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x54\x28\x2e\x29\xca\xcc\x4b\x57\x48\xce\xcf\x2b\x49\xcc\xcc\x03\x31\x3d\x42\x7c\x7d\x14\x92\xf3\x53\x52\xf5\xb8\x8a\x93\x13\x73\x12\x8b\xc0\x22\x5c\x80\x00\x00\x00\xff\xff\x69\x83\x95\x22\x2d\x00\x00\x00")

func scalarHtmlGqlBytes() ([]byte, error) {
	return bindataRead(
		_scalarHtmlGql,
		"scalar/html.gql",
	)
}

func scalarHtmlGql() (*asset, error) {
	bytes, err := scalarHtmlGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalar/html.gql", size: 45, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalarTimeGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xc9\xcc\x4d\x55\xc8\x2c\x56\x48\xcc\x53\x08\x72\x73\x36\x36\x36\xb6\x54\x28\xc9\xcc\x4d\x2d\x2e\x49\xcc\x2d\xd0\xe3\x2a\x4e\x4e\xcc\x49\x2c\x02\x2b\xe2\x02\x04\x00\x00\xff\xff\x3c\x59\x30\xf9\x2c\x00\x00\x00")

func scalarTimeGqlBytes() ([]byte, error) {
	return bindataRead(
		_scalarTimeGql,
		"scalar/time.gql",
	)
}

func scalarTimeGql() (*asset, error) {
	bytes, err := scalarTimeGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalar/time.gql", size: 44, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalarUriGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xcc\x53\x08\x72\x73\x56\x30\xb6\xb4\x30\xd3\x81\xb1\xcc\x75\x14\x12\xf3\x52\xc0\x3c\x33\x53\x73\x03\x05\x8d\x9c\xd4\xb2\xd4\x1c\x05\x13\x4d\x85\xe4\xfc\xdc\x82\x9c\xcc\xc4\xbc\x12\x85\xd0\x20\x4f\x85\xe2\x92\xa2\xcc\xbc\x74\x3d\xae\xe2\xe4\xc4\x9c\xc4\x22\x90\x10\x17\x20\x00\x00\xff\xff\x12\xa3\x29\x58\x51\x00\x00\x00")

func scalarUriGqlBytes() ([]byte, error) {
	return bindataRead(
		_scalarUriGql,
		"scalar/uri.gql",
	)
}

func scalarUriGql() (*asset, error) {
	bytes, err := scalarUriGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalar/uri.gql", size: 81, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x8c\xd1\x43\x53\x20\xc8\xde\x7d\x4b\xa3\x1c\x0c\x34\xbb\x59\x6f\xdc\x4b\xd1\x03\x2d\x8e\x63\xa2\x12\xa9\x92\x54\x0c\x63\xb1\xff\x7d\x31\x33\xa2\x44\xca\x4e\x17\x7b\xb2\xe7\x71\xe6\xbd\x11\xe7\x43\x0a\xcd\x11\x3b\x05\x7f\x57\x00\x3f\x07\xf4\xe7\x35\xfc\x49\x3f\x15\x40\x37\x44\x15\x8d\xb3\x6b\x78\x1a\xff\x55\xff\x54\xf1\xdc\xa3\x78\x70\xc8\x07\xf8\xe2\xdc\x8f\xa1\x07\x05\xaf\xe6\x0d\x2d\xa8\x10\x30\xc2\xfe\x0c\xf1\x88\xe0\x4e\x16\xfd\x2d\x84\x38\xe8\x33\x58\xd5\xe1\x2d\x28\xab\x47\x1f\xb2\xef\x2a\x10\xeb\xa6\x02\x00\x86\xd6\xf0\x57\xf4\xc6\xbe\xae\x18\x61\x86\x12\x62\xb6\x1c\xfa\xb4\x86\x5d\x40\x7f\x4f\x3c\x55\x9e\x93\x75\x1a\x29\x95\x4d\x4d\x3a\x64\x89\xcc\x07\x78\x39\x22\x6c\x6a\x70\x07\x4e\x93\x4e\xee\xf8\xc4\xe8\x35\x6c\xea\x91\xf4\x77\xa7\xf1\x82\x2f\x10\xa1\x82\xd6\x84\x48\xe1\x9b\x3a\x24\xee\x90\x93\x2f\xce\x89\x39\xac\xe1\xdb\xa6\x5e\x7d\x1f\xd9\xbf\x11\xfd\xf7\x15\x09\x04\x54\xbe\x39\xa6\xf0\x2d\xc6\xc1\xdb\xc0\x99\x61\x8b\x1d\xda\x18\xc0\x58\xb6\x99\x36\x1e\x55\x84\xc6\x75\x08\xea\x10\xd1\xf3\x41\xe8\xb1\x31\x07\x83\x1a\x5e\x5b\xb7\x57\xed\xf8\xcc\x20\x2e\xe9\xb6\xaa\xff\x2f\xb1\xc7\x83\xf3\xf8\x6b\x0d\xf1\xf9\x95\xc8\xc1\xf8\x10\xc1\xce\x62\x07\xe7\xbb\x49\x4e\x58\xd8\x67\x0d\x1b\x1b\xaf\x31\xb4\xea\x3f\x09\xc8\xa5\x88\xff\xc3\x6b\xa4\x8c\xc0\xf5\xd4\xbd\x1c\x04\x26\x62\x17\xc0\x33\x35\x6a\x38\x78\x27\x3c\x8d\xb3\x16\x1b\xf2\x13\x36\x47\xc1\x9f\xa9\xd1\xb8\x3a\xcc\x55\x65\x15\x96\xa2\x41\xe0\x67\x86\xe8\xa0\x75\xee\x07\x29\x48\xf8\x38\x4b\xa9\x4b\xb3\x40\x9a\xa0\x40\xbd\x31\x32\x48\x42\xd1\x25\xfb\x64\xe2\xd1\x8c\x49\x90\x6f\xca\xe0\xe5\xdc\x63\x41\x54\x36\xf0\x3b\x0c\xf2\x9f\xba\x5a\xda\x4e\xb8\xb6\x18\x86\x36\x6e\x22\x76\x0f\xd3\x63\xaf\xaa\x6b\xf3\x2c\xb3\x9b\xcf\x33\x8f\xf0\x3c\xd2\x24\xc3\x56\xde\xfe\x74\x90\x92\xe3\xc3\xbb\x77\xe6\x7b\x9c\x16\xf7\x6a\x2c\x1c\x0c\xb6\x9a\xa2\x14\x0c\x01\xc7\x7b\xbc\x58\x00\xf4\x0c\xc4\xb8\xc8\x96\x22\x28\x4d\xa6\xba\x83\x0a\x18\xb9\xb9\x10\x19\x93\x9a\x05\x18\xbe\xb2\x4e\x84\x9f\x02\x9b\xc1\x7b\xb4\xb1\x3d\x83\x1a\xe2\x11\x6d\x34\x8d\x8a\xa8\x27\x8e\x37\x83\x27\xca\x91\xa2\x56\x69\x45\xa6\x95\x39\x6e\xc9\x7b\xad\x03\x28\x0b\xd8\x29\xd3\x52\xa9\x28\x09\x09\xfc\x18\x40\x35\x8d\x1b\x2c\xb7\xb1\xd2\xfa\x91\x7c\x6e\x8c\xed\x87\xb8\xa6\x40\xb6\x37\x64\xae\x3e\xcd\xc0\xb3\x3a\xb7\x4e\xe9\x8c\x9d\x06\x96\x86\x83\xe8\x15\xb4\x18\x82\xf4\xb2\xd2\xfa\x0b\x1b\x0f\x72\x9e\x51\x17\x78\x2e\x51\x1c\x5c\x4a\x59\x50\x7d\xdf\x72\xcf\x29\x0b\xf7\xf4\x5f\xed\x5b\x1c\xd5\xd8\xce\x54\xd8\x9e\xd9\x93\xf7\xd8\x70\x0f\x1e\x55\x44\xca\xdf\xe2\x29\x4b\xbb\x61\x5c\x12\x49\x64\x0f\x19\x36\x11\x8a\x79\x85\x6b\xea\x3c\xa1\xe2\xb6\x29\x99\x18\x9a\x88\xa4\xaf\x2e\x79\x52\xa1\x85\x86\xca\x5c\xb2\x10\x32\x91\xcc\xbd\x53\x63\x8b\x4c\x92\xca\x3e\xed\x9a\x6b\x85\xd7\xec\x5d\xd4\xbe\x9e\xa1\x89\x3e\xc3\xf2\xb2\x4c\x5a\xe3\x05\x8a\x96\x9a\xaf\x40\xe8\xcb\xdb\xac\x33\x6c\x21\x20\xe0\x75\x85\xd4\x66\xa3\xc4\x5c\xb1\x5c\x63\xd1\x6b\xf5\xe5\xd1\x55\xc5\x2b\x1d\x37\x0b\x2f\x1e\xa6\xa8\x67\x3d\x43\x0b\x62\xc6\xae\x13\xa6\xc2\x0a\x5f\x5e\xd8\x7a\x42\x26\xb6\x4d\x2d\x65\x7d\x72\x6f\xf9\x45\xf3\xb0\x51\x97\xd8\xa1\xdb\xa3\x47\x0d\xbd\x0b\x86\x47\x5f\x76\x6f\x9e\x78\xe7\xde\x16\x35\x78\x9a\x90\x45\x3f\x3f\xea\xd7\x34\x21\x5b\xec\x44\x33\x8d\x9d\xdc\xfc\x62\xf0\x3c\x7b\x15\xb3\xb7\x9d\xa1\x77\xc7\x6f\x8b\x3f\x07\x0c\x31\x6b\xd3\x37\xf4\xe6\x40\x3b\x8e\x9e\x21\xed\xab\x3d\xbd\xf1\xa4\x53\xbd\x44\x70\x0f\x7e\xcd\x7c\x67\xd5\xeb\xe7\x53\x0a\x8f\x5f\x5f\x56\x0b\x6d\xe8\x55\x08\x27\xe7\x35\x78\xa4\x8f\xc3\xf7\x65\x9f\x47\xc7\x2d\xf9\x2d\x24\x8b\xb3\x49\xee\x79\x3b\xc9\x05\x8c\xa9\xee\x1f\xc3\xa4\x29\xec\x01\xa7\xf8\x99\x36\x03\x27\xbe\xcf\xce\xb5\xa8\xd2\xfb\x72\xd7\x6b\x95\x4f\xf9\xc7\xc0\x6f\x6d\x7a\x4b\xfe\xe6\x3c\x9c\x8e\x18\x8f\x48\x9f\x1d\x24\x38\xec\x5b\xd3\x80\xf3\x60\x1d\x3f\xd3\xc0\xc1\xc5\xd0\xef\x66\x68\xbe\x30\xb2\x56\x85\x1c\xad\x91\xbd\xd3\xe7\xa4\x13\x4d\x6c\x51\x5e\x9e\xf3\x40\x0a\x7d\xd9\x70\xbb\x0c\x5b\xb4\xdc\x3b\x0a\x19\x69\x9a\xfd\x25\xf9\x62\xda\x77\x97\x47\x0b\xa9\x11\xbd\x54\xd4\x18\x1a\x6f\xf8\x7b\x4d\x84\xa7\xd9\x11\xbd\x62\xe8\x77\x33\x54\x2e\xf1\x54\xef\xbe\x55\xcd\x48\xcc\x3c\x54\x1c\xd7\x9b\x26\xf0\x6c\x32\x2e\x9f\x39\x82\xce\x32\x2f\x6c\x97\x3a\x82\xcd\x8b\x3e\x03\xf3\xf5\x52\xdc\x9f\x71\xb7\xf2\x85\x71\x9b\x0a\x95\x3e\x8d\xe6\xed\x23\x8a\xf9\xf6\xd9\x4d\x48\xf1\x5a\xa1\x8f\x8b\x7f\x03\x00\x00\xff\xff\x7a\x01\xaf\x72\xaf\x0d\x00\x00")

func schemaGqlBytes() ([]byte, error) {
	return bindataRead(
		_schemaGql,
		"schema.gql",
	)
}

func schemaGql() (*asset, error) {
	bytes, err := schemaGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.gql", size: 3503, mode: os.FileMode(420), modTime: time.Unix(1529252172, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeAdd_email_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8e\x31\x6e\x85\x30\x10\x44\x7b\x9f\x62\x10\x45\x3a\x0e\x40\x97\xc2\x7d\x14\x91\xf4\x96\x77\xc0\x56\xc0\x8e\x6c\x13\x84\xa2\x7f\xf7\x2f\xfb\x0b\xd1\xed\x8e\xde\x9b\xdd\x1e\x9f\x2c\x7b\x0a\x28\xe7\x2f\x31\xc7\x84\x77\x11\xbd\x19\xbf\x0e\xaa\x45\xd7\xfa\x61\xce\x35\x1a\xc1\xbf\x02\x7a\x4c\x8e\xa0\x2c\xc4\x9c\xe2\x86\xe2\x88\x3d\x33\xbd\x65\xb0\xb2\xb0\x31\x04\xda\xe2\x63\x18\x14\x5e\x99\x96\x85\x23\xf4\x35\x76\xea\xee\x69\xca\x1f\x93\x9f\xbd\x35\x55\x42\x89\x3f\x0c\xed\x9b\x72\x01\xb5\xa8\xc5\x23\xf4\xf7\x74\xdb\xf5\x6e\x23\x0f\xe7\xad\xbb\x79\x1c\x26\xc3\x88\x50\xaa\x59\xa9\x11\x5f\x99\xa9\x53\x0f\xf5\x0c\x00\x00\xff\xff\x1d\x0b\xc5\x94\xf5\x00\x00\x00")

func typeAdd_email_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeAdd_email_payloadGql,
		"type/add_email_payload.gql",
	)
}

func typeAdd_email_payloadGql() (*asset, error) {
	bytes, err := typeAdd_email_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/add_email_payload.gql", size: 245, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeAdd_lesson_comment_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x31\xaa\xc2\x40\x14\x45\xfb\xb7\x8a\x1b\x52\xfc\x2e\x0b\xf8\x9d\x88\x9d\x85\x88\x1b\x08\x79\x37\x89\x90\x79\x4f\x66\xc6\x22\x88\x7b\x17\x33\x8c\xa0\xed\xb9\xe7\x9e\x16\x67\xe6\x7b\x34\xe4\xf5\x46\x8c\x1e\xb1\x53\x3d\x32\x25\xb7\xbd\x87\x40\xcb\x9d\x6c\xd3\x2f\x3e\xf5\xeb\xe2\xbd\xe2\x21\x40\x8b\xcb\x4c\x50\x27\x62\x8c\x1e\x90\x67\x62\xd9\xe4\xbf\x84\xa1\xf8\x18\xdc\x8c\x43\xbe\xba\x75\x82\x4a\x0f\x3a\xf1\x1f\x5f\xe1\x37\x6a\xe4\x53\x2d\x9d\xea\x53\x51\xfe\x05\xd7\x6b\x23\x4f\x79\x05\x00\x00\xff\xff\x29\x1d\xb3\xf5\xca\x00\x00\x00")

func typeAdd_lesson_comment_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeAdd_lesson_comment_payloadGql,
		"type/add_lesson_comment_payload.gql",
	)
}

func typeAdd_lesson_comment_payloadGql() (*asset, error) {
	bytes, err := typeAdd_lesson_comment_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/add_lesson_comment_payload.gql", size: 202, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_email_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x41\x0a\xc2\x30\x10\x45\xf7\x73\x8a\x5f\xba\xef\x01\xba\x8e\x8b\xec\x44\xf4\x00\x81\xf9\x6a\x21\x5a\x99\x4c\x91\x22\xde\x5d\x12\x50\x84\x6e\xdf\x9b\x37\xfc\x1e\x07\xfa\x62\x77\xf8\xfa\x20\xce\xb3\x21\x30\xd3\xb9\xbb\xa5\x29\x0f\xd2\xe8\x1f\xd9\xa7\x35\xcf\x49\xf1\x12\xa0\xc7\xf1\x4a\x68\x93\x0a\x56\x8d\x18\x06\xc1\x97\xb5\x22\xea\x88\x18\x3a\xf9\x05\x4b\xa1\xc1\x37\xe5\x33\x15\x18\x2f\x53\x71\x1a\xb5\x2e\xa9\x9f\xea\xf1\x88\x53\xa1\x75\xf2\x96\x4f\x00\x00\x00\xff\xff\x4a\xdc\x34\x33\xad\x00\x00\x00")

func typeDelete_email_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_email_payloadGql,
		"type/delete_email_payload.gql",
	)
}

func typeDelete_email_payloadGql() (*asset, error) {
	bytes, err := typeDelete_email_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_email_payload.gql", size: 173, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_lesson_commentpayloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\x4a\x2d\x29\x2d\xca\x53\x28\xa9\x2c\x48\x55\x48\xcb\x2f\x52\x70\x49\xcd\x49\x2d\x49\xf5\x49\x2d\x2e\xce\xcf\x73\xce\xcf\xcd\x4d\xcd\x2b\xd1\xe3\x02\xcb\x62\x91\x09\x48\xac\xcc\xc9\x4f\x4c\x51\xa8\xe6\x52\x50\x50\x56\x08\xc9\x48\x55\x48\x01\x2b\x4a\x51\xc8\x01\x2b\x53\xc8\x4c\xd1\xe3\x52\x80\x09\xa2\x68\xf5\x4c\xb1\x52\xf0\x74\x51\xe4\x82\xeb\x84\xea\x28\xc1\x34\x24\x19\xa2\x43\xa1\x3c\xb1\x18\xe4\x44\x90\x89\x10\x19\x2b\x05\x88\x91\x8a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xf3\x21\x03\x41\xca\x00\x00\x00")

func typeDelete_lesson_commentpayloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_lesson_commentpayloadGql,
		"type/delete_lesson_commentpayload.gql",
	)
}

func typeDelete_lesson_commentpayloadGql() (*asset, error) {
	bytes, err := typeDelete_lesson_commentpayloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_lesson_commentpayload.gql", size: 202, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_lesson_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\xc2\x30\x10\x45\xf7\x73\x8a\x5f\xba\xef\x01\xba\xee\xa6\xe0\x42\xd4\x0b\x04\x66\xc4\x42\x48\x24\x33\x41\x82\x78\x77\xc9\x88\x22\x74\x35\xf0\xde\xbc\x3f\xe2\x24\x56\x4b\x82\xb5\xbb\xe0\x9a\x0b\x16\x89\x62\x72\x10\xd5\x9c\x26\x72\xfc\x8f\x8e\xa1\xc5\x1c\x18\x4f\x02\x46\x5c\x6e\x02\x76\xcb\x88\xee\xb1\xf1\x44\xf8\xc2\x4f\xb3\xf2\x8c\x75\x19\xe8\x97\xa8\x55\x6e\xb0\x7d\xfc\x08\x8a\x2d\xf5\x01\x7f\x99\x71\xee\x67\xa0\x17\xbd\x03\x00\x00\xff\xff\x10\xa8\xa3\xf1\xa9\x00\x00\x00")

func typeDelete_lesson_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_lesson_payloadGql,
		"type/delete_lesson_payload.gql",
	)
}

func typeDelete_lesson_payloadGql() (*asset, error) {
	bytes, err := typeDelete_lesson_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_lesson_payload.gql", size: 169, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeDelete_study_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcb\x3d\x0a\xc2\x40\x10\x40\xe1\x7e\x4e\xf1\x42\xfa\x1c\x20\x75\x9a\x74\xe2\xcf\x01\x02\x33\x41\x21\x64\x65\x33\x41\x16\xf1\xee\xb2\x03\x8a\xd8\xbe\xc7\xd7\x72\x34\xdf\xf3\x8a\x97\xbb\x31\xa7\xcc\x60\x8b\xb9\x9d\x7c\xd7\xd2\x49\xd4\x9f\x72\x98\xca\x92\x26\xe5\x29\xd0\x72\xbe\x1a\x1a\x53\xd9\xea\xe6\xa6\x9d\xf0\x69\x21\x46\xed\x19\x87\x46\xbe\x20\x3d\x56\xcb\xa4\x19\xff\xd7\x95\xc6\xed\xb9\x6c\x96\x1b\x79\xc9\x3b\x00\x00\xff\xff\x2f\x22\x95\x71\x9f\x00\x00\x00")

func typeDelete_study_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeDelete_study_payloadGql,
		"type/delete_study_payload.gql",
	)
}

func typeDelete_study_payloadGql() (*asset, error) {
	bytes, err := typeDelete_study_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/delete_study_payload.gql", size: 159, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeEmailGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x41\x6e\xdc\x30\x0c\xbc\xeb\x15\x13\xec\x3d\x0f\xd0\xa5\xd8\xa6\x39\xec\xa5\x28\xda\xb4\x97\x22\x07\xc5\xe2\xda\x2c\x6c\xca\x90\xe8\x2c\x82\x22\x7f\x2f\x28\xdb\x6b\x37\x2d\x72\xa3\xa8\x19\x6a\x66\xa8\x03\xbe\xd2\x98\xa9\x90\x68\x41\x00\x0d\x81\xfb\x5b\xa7\x2f\x23\xe1\xde\x6a\xf0\x30\xf6\x34\xd4\xeb\xcf\x29\x12\x7e\x3b\xe0\x80\x53\x24\x51\x3e\x33\x15\x68\x47\x88\x41\x09\x41\x22\x94\x07\xc2\xa5\x23\xa9\xed\xf4\xf4\x8b\x1a\xc5\x25\x14\x34\x99\x82\x52\xbc\x75\x58\xcb\xa3\x7a\x3c\xf0\x40\x37\xce\x01\x1c\x3d\x4e\x9f\x6a\x79\xc0\x69\x1e\x5a\xb5\xe0\x99\xb2\xbd\x13\x3f\x18\xaa\xfc\x58\x4e\x1e\x1f\x53\xea\x29\xc8\x4a\xd9\xf4\x5c\x3a\xd2\x8e\xf2\x6e\x04\x17\x8c\xd3\x53\xcf\x0d\x52\x86\x24\x35\x11\x73\xe3\x9d\x31\x46\xaf\x31\xa4\xf3\x9a\x0a\x6a\xc3\xcf\xc1\x3c\xbc\x8c\xb4\xb0\x1e\x3a\xc2\x54\x28\x23\x94\x92\x1a\x36\x73\xb8\xb0\x76\x9b\x04\xe3\x1a\xc2\xe3\x7b\xa1\xbc\xa3\x3d\x87\x7e\xaa\x4f\xfc\x05\xad\x5d\x8f\x6f\x9a\x59\xda\xff\x3a\x94\x9d\x3d\x8b\x77\x4d\xa9\xb2\x97\x7a\x0d\xd8\xbd\x3a\x77\xc0\x51\x40\xb1\x5d\x3c\x9d\x53\x9e\x5d\xec\x57\x7d\x6f\xd7\xbb\x75\xd7\xf3\xbc\xee\x23\x9a\x29\x97\x94\x2b\x71\x2a\x04\x16\x8c\xa1\x65\x09\xca\x49\xea\x52\xeb\xfd\x1b\xcd\xe6\x90\x95\x06\x04\x9d\xf5\x4a\xbc\x7a\x8d\x2d\x19\x4f\x52\x5c\x13\x5d\x74\xa2\x49\x22\xd4\xd8\xe0\x77\xc4\xde\x6d\xa0\x9d\xe4\x5d\x77\xf9\xa7\x72\x4e\x79\x08\xf3\xb0\x84\xc0\xf1\x5f\xe9\x63\x68\xc9\x70\x1e\x5f\x96\x6a\x91\x7f\x44\xcf\x45\xeb\x07\x88\x2d\x15\xc3\xd6\xc2\xe3\xe7\x35\xb0\xc7\xb7\x50\x33\x54\x56\x67\x57\xe8\xe3\x16\x88\x26\x0d\x3d\x9a\x34\x49\xc5\x5b\x3e\xc5\x44\x59\x2a\x9b\xf5\xfa\xdb\x0c\x79\x67\x40\x8f\x93\xe8\x8d\x7b\x75\x7f\x02\x00\x00\xff\xff\xe0\xe3\x38\x85\xaf\x03\x00\x00")

func typeEmailGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeEmailGql,
		"type/email.gql",
	)
}

func typeEmailGql() (*asset, error) {
	bytes, err := typeEmailGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/email.gql", size: 943, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeEmail_verification_tokenGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcc\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x24\x7d\x0e\x60\x67\x61\x61\x2b\xc1\x7e\x71\x5f\xc8\x60\x76\xb2\x64\x46\xa3\x88\x77\x97\x2c\x01\x6b\xbb\x9f\x19\xde\xd7\xe0\xcc\x32\xd3\xa8\x6e\x88\x0a\xe6\x28\x23\x1e\x9c\xa5\x97\x6b\x74\x99\x14\x3e\xdd\xa8\x6d\xf0\x57\x21\x8e\x97\x0e\x92\xcb\xc8\x5c\x07\xdd\xfa\xc2\x3b\x00\x0d\x4e\x89\xea\xd2\x0b\x0d\x3e\x10\x29\x3a\x11\x35\xc1\x25\x13\xcb\x40\xad\xe7\x8a\x61\x89\x06\x31\xbb\x33\xb5\x01\x5b\x1d\x7c\x8f\x4e\x32\x77\xe1\x6f\x8e\xcf\x22\x33\x6d\xb5\xb6\xfc\x61\x9f\xf0\x0d\x00\x00\xff\xff\x56\x47\xaa\x78\xe3\x00\x00\x00")

func typeEmail_verification_tokenGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeEmail_verification_tokenGql,
		"type/email_verification_token.gql",
	)
}

func typeEmail_verification_tokenGql() (*asset, error) {
	bytes, err := typeEmail_verification_tokenGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/email_verification_token.gql", size: 227, mode: os.FileMode(420), modTime: time.Unix(1529253076, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeLessonGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xc1\x8e\xe3\x36\x0c\xbd\xfb\x2b\x5e\x31\x97\x16\x58\xcc\x07\xf8\x96\xcd\x14\xd8\x00\xd9\x76\x90\x26\xa7\x62\x0f\x8a\x45\xc7\x6a\x6d\xc9\x90\xe8\x66\x83\x62\xfe\xbd\x20\x65\x3b\x9e\x4c\x90\xa2\xbd\xc9\xf2\xe3\x23\x29\x3e\xbe\x27\xec\xa8\x8f\x94\xc8\x73\x82\x41\x4b\x29\x05\xff\x5c\xf0\xa5\x27\x6c\xf5\x03\xae\xeb\x5b\xea\x14\xb0\x1a\xb8\x09\xd1\x1c\x5b\xfa\x84\x5f\x82\xa5\x4f\x38\x78\x57\x87\xd8\xed\x28\x85\x21\x56\xb4\x0d\x95\xe1\xfc\xff\xd0\x5b\xc3\x24\x67\xfc\x5d\x00\x4f\xd8\x37\x84\x21\x51\xc4\xb9\x09\x30\xca\x44\x16\xdc\xb8\x84\x63\xb0\x97\x67\x14\x18\xaf\x4b\x1c\x12\xc5\x62\x8e\x92\xdf\x30\x09\x5f\x4d\xfc\xd3\x86\xb3\x7f\x2e\xa0\x77\x25\x7e\xe3\xe8\xfc\xe9\x87\x1b\x68\x24\x6f\x49\xc9\x03\xbe\xec\xbf\x6e\x27\xbc\x9c\x4b\xbd\x79\x14\xc1\xf4\x9d\xa7\x88\x3d\x7d\xe7\x9b\x2c\x1b\x4b\x9e\x5d\xed\x28\x81\x1b\x82\x34\x09\xe3\x2d\xd8\x75\x84\x73\x43\x5e\xaf\xc3\xf1\x0f\xaa\x18\x67\x93\x50\x45\x32\x4c\x56\x28\xc7\xe3\x8a\x4b\xec\x5d\x47\x23\xe3\x8e\x78\x88\x5e\x9f\xdf\x25\x46\xa8\x51\x85\x2e\x3f\x78\x1d\xa2\xd2\x55\x43\x8c\xe4\x79\x9e\x0f\x66\xc8\x8f\x05\xb0\x24\x11\x34\x4d\xf3\x72\xb9\x18\xa5\xe5\xc6\xb0\x44\x11\x4c\xcd\x94\x69\x53\x4f\x95\xb4\x62\x71\x6a\xc3\xd1\xb4\xd8\xbc\x3c\x2b\x9f\x42\xa6\xc6\x8b\xff\x9e\xe2\x48\x75\x88\xf4\x38\x47\xc6\x3c\x4a\x52\xbb\x98\x18\xfe\x9a\x4c\xa4\x36\xa7\xcb\x2c\x8a\x29\xb1\xf1\x7c\x8f\xa1\x35\xff\x4a\x20\x90\x77\xf1\xbf\x46\x4b\x52\x11\x42\xcf\x2e\xf8\x3c\x84\x79\x22\x51\xd9\xc9\xa2\x8e\x21\x53\x55\xc1\x7b\xaa\x04\x9a\x09\x83\xc4\x7f\xbe\x94\xe3\xfe\xac\x73\xa4\xb2\x16\xc0\x4f\x37\xf7\xeb\x39\x5a\xd5\xe0\x6c\x89\xcd\xcb\x7d\xa9\xe5\xe1\xc3\x0f\xdd\x91\xa2\xe4\xca\x27\x2d\xfe\x63\xc4\x2c\xc5\x31\x4c\xa4\xd8\x0f\xc7\xd6\xa5\x86\x2c\x8c\x76\x3f\x7f\xdf\x28\x52\xf6\x22\xf1\xa0\x5b\x97\x42\xe5\x44\xb4\x38\x3b\x6e\xf2\xba\x5e\x55\xa8\x20\x19\xe1\x60\x2f\x8b\x58\x76\xdc\x92\x08\xf9\x9a\x5f\xd0\x7a\x7d\x67\x69\xbf\xec\xf7\xaf\xe8\x0d\x37\xa3\xde\xdf\xa5\x88\xa3\xb5\xbc\x1a\x6e\x4a\x1c\x76\x9b\xff\xbb\x87\xaa\x85\x41\x5d\x49\x97\x71\x3c\xde\x69\x5d\xeb\x39\xec\xb6\xf7\xca\x19\x62\xbb\xac\x62\x6d\x72\x9e\xbf\x1c\x9d\x29\x8e\x9c\xb7\x31\xf9\xe7\xda\xf8\xec\x89\x25\x3e\x87\xd0\x92\xf1\x23\xc7\x8b\xb3\x4b\x8e\xec\x81\xf7\x39\x5e\x9c\x5d\x8d\x16\x39\x73\xbc\x15\xc5\x13\x56\x1e\x64\x4f\x04\x35\x6e\x29\x7b\xfb\xd1\xc9\x7f\x16\xc0\xc2\xcd\xf5\x3b\x7b\xf3\x4a\x1c\x26\x85\xa8\xa1\x43\x22\x59\xeb\xde\x9c\x9c\x37\x93\xae\xf3\xff\x3b\xc3\x73\x4c\x1d\x0c\x67\x57\xf0\x76\x9a\xba\x54\xa3\x1a\x0d\x96\x26\xc9\x8f\xa5\x2e\x36\xe6\x61\xbd\xd7\xd5\x58\x56\xbd\xb8\xcd\xb5\x6f\xbc\x6c\xb5\xc9\x74\x01\xc6\xd9\x8f\xd5\xf7\xe6\x44\x82\x2b\xf1\x3a\x9e\xc6\x0e\x56\xb3\xe7\x4a\xc1\x49\xb0\x7a\x28\xf1\xfb\xf5\xd1\xbe\xdd\x62\xa5\xa9\x34\x75\x77\xc5\x7e\x5b\x6c\x40\x60\xd3\xa2\x0a\x83\xd7\x00\x79\xa4\xd9\x2b\xdf\x1b\x86\x22\xd7\x02\x1c\x17\xf9\xad\xf8\x27\x00\x00\xff\xff\x62\xe4\x5a\x59\x95\x07\x00\x00")

func typeLessonGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeLessonGql,
		"type/lesson.gql",
	)
}

func typeLessonGql() (*asset, error) {
	bytes, err := typeLessonGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/lesson.gql", size: 1941, mode: os.FileMode(420), modTime: time.Unix(1529253182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeLesson_commentGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xc1\x8e\xda\x30\x10\xbd\xf3\x15\xaf\xda\xeb\xaa\x1f\x90\x1b\x85\x4a\x8b\xc4\x56\x2b\x0a\xa7\x6a\x0f\x43\x3c\x10\xb7\x89\x1d\xd9\x93\xb2\xa8\xea\xbf\x57\x63\x07\x08\x81\xae\xd4\xde\x26\xe3\x37\x2f\xef\x8d\x3d\xf3\x80\x15\xb7\x81\x23\x3b\x89\x20\xd4\x1c\xa3\x77\x28\x7d\xd3\xb0\x93\x8f\x13\x39\xb6\x8c\x65\x4a\xce\x72\x0e\xb6\x69\x6b\x6e\x12\x7e\xda\x49\xe5\x03\x6d\x6b\x7e\xc4\x9c\x6b\x96\x1c\x7e\xf1\x86\x1f\xb1\x71\x76\xe7\x43\xb3\xe2\xe8\xbb\x50\xf2\xd2\x97\xd4\x9f\x6f\x5a\x43\xc2\x1a\xe3\xd7\x04\x78\xc0\xba\x62\x50\xe2\x82\xdf\x41\x2a\xbe\x08\x40\x7f\x50\x60\x13\x39\x4c\xce\xf0\xad\x37\x47\x50\xc4\x33\x85\x1f\xc6\x1f\x9c\x22\x35\x57\xe0\xab\x04\xeb\xf6\x1f\x46\xd0\xc0\xce\x70\x60\x03\xf1\x78\x5a\x3f\x2f\x4f\x78\x8d\x8b\x94\x79\xaf\x42\xf8\x4d\x4e\x15\x6b\x7e\x93\xd1\x5f\x16\x86\x9d\xd8\x9d\xe5\x98\xc4\xab\x3b\x90\x33\x10\xdb\x30\x0e\x15\xbb\x94\xf6\xdb\xef\x5c\x0a\x0e\x14\x51\x06\x26\x61\xa3\x94\x7d\x38\x95\x02\x6b\xdb\x70\x62\xb4\xa6\xc0\x62\x3e\x10\xd4\x5f\x0b\xc5\xe8\x4b\xab\x70\x1c\xac\x54\x90\xca\xc6\x61\xab\x32\xac\xe8\x2f\xec\x56\xdc\x59\xca\xf5\x35\x27\x49\x6d\xb7\xad\x6d\xac\xd8\x80\x12\xd7\xf9\xfb\xa4\xec\xa2\xe6\x69\xbd\x7e\x41\x4b\x52\x61\xe7\x43\x16\x31\x7e\x37\x40\xe8\xef\xfd\x85\xa4\x2a\xb0\x59\x2d\x06\x76\xa2\x74\xe9\xf6\xee\xb8\xb9\x25\x4a\x60\x6d\x78\x67\x8e\xff\xdb\xef\x9a\xa2\xa0\x4b\xcf\x2e\x35\xbd\x0f\xaf\x9a\x3e\xf0\xb6\x59\x2d\xdf\xb3\xd6\x85\x7a\xe8\x68\x46\xf9\x7f\x3f\x2d\x1f\x38\xc0\xe8\x20\x70\xae\xcd\x12\xb4\x26\x1f\xce\xc8\xa5\x39\xe1\x02\x9f\xbc\xaf\x99\xdc\x7d\x8e\xac\xef\xaf\x1c\x79\x80\xc6\x1c\x73\x6b\x86\x1c\xfd\x40\x8d\xdf\x48\x3e\x9d\x5b\x33\xed\xe7\xea\x4c\xf2\x7b\x32\x79\xc0\xd4\x81\xcd\x9e\x91\x06\x5f\x7b\x70\x35\xfc\xf7\x16\xc2\x67\x85\x0f\x96\x42\xfa\xce\x73\x3d\x45\xd9\x85\xe8\x43\x22\xea\x22\xc3\x3a\xb4\xb4\xb7\x8e\xc4\xfa\x34\xb2\xf9\xfc\xce\xd0\x5a\xe1\x06\x24\xc9\x10\x3b\x73\xda\x0b\xaa\x4d\xeb\x9c\x37\x5c\x5c\xeb\xe8\xf5\xa3\xf4\xce\x71\xa9\x3f\xf8\x07\x13\xb3\x4b\xd1\xc0\xca\x20\x9b\x0d\x2d\x9c\xae\x34\xca\xe4\x1e\x64\xcd\xad\xa5\x96\xf6\xac\xb8\x02\x2f\x7d\xd4\xdb\x9a\xa2\xb6\x51\xd4\x89\xba\x88\x8a\x4d\x41\x81\x6f\x37\x0d\x7d\x1d\x97\xa8\xe1\x78\x72\x7e\x53\xf2\x7a\x69\x9c\x78\xa1\x1a\xa5\xef\x5c\xaa\xd3\x3e\x46\x15\x99\xb7\xea\xc9\x8f\x32\x25\xe4\x4c\x81\x05\x16\x4e\xf4\x01\xfc\x09\x00\x00\xff\xff\xf7\x71\xe8\xd3\x0e\x06\x00\x00")

func typeLesson_commentGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeLesson_commentGql,
		"type/lesson_comment.gql",
	)
}

func typeLesson_commentGql() (*asset, error) {
	bytes, err := typeLesson_commentGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/lesson_comment.gql", size: 1550, mode: os.FileMode(420), modTime: time.Unix(1529252925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typePage_infoGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xcd\x4a\xc5\x40\x0c\x05\xe0\xfd\x3c\xc5\x91\x6e\xa5\x0f\xd0\x8d\xa0\x2b\x37\x52\x70\xe1\x3a\x9d\xa6\xd3\x41\x9b\x94\x4c\xc6\x1f\xc4\x77\x97\x51\x70\x21\xf7\x52\xee\x32\x09\xe7\x23\xa7\xc3\xbd\x2c\x6a\x1b\x79\x56\x01\x4d\x5a\x1d\x3b\xa5\x2c\xbf\x8b\x2c\x20\x44\x15\xe1\xd8\xe6\x3e\xf8\xc7\xce\x18\x29\x71\x8b\xe1\x33\x00\x1d\x9e\x56\x96\xbf\x90\x24\x2c\x6a\x6f\x64\x73\xb9\x86\xaf\x8c\x58\xad\xa8\xc1\xb5\x39\x9e\xa5\x72\x1f\x00\x96\xf9\xee\xe7\x30\xe0\xd1\x2d\x4b\x0a\x07\x14\x19\x37\xce\x18\x9b\x1a\x23\x3b\x6f\xe5\x26\x00\x2b\x95\x07\x7e\xf7\xf6\xd2\x80\x5b\xd5\x17\x26\xb9\x3a\x8d\x4d\x14\x9f\x8f\xb5\xd1\xf8\x35\x6b\x2d\x17\x8a\xe7\xab\x16\x27\xf3\x7f\x65\xbf\xc2\x77\x00\x00\x00\xff\xff\xc0\xbd\xde\x84\x79\x01\x00\x00")

func typePage_infoGqlBytes() ([]byte, error) {
	return bindataRead(
		_typePage_infoGql,
		"type/page_info.gql",
	)
}

func typePage_infoGql() (*asset, error) {
	bytes, err := typePage_infoGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/page_info.gql", size: 377, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typePassword_reset_tokenGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcc\x31\x0a\x02\x31\x10\x85\xe1\x3e\xa7\x78\xb2\xfd\x1e\xc0\xce\xd2\x4e\x96\x5c\x20\x90\x27\x3b\x68\xb2\x21\x33\x12\x45\xbc\xbb\x24\x2c\x58\xdb\x3d\xfe\x19\xbe\x09\x0b\x4b\xa5\x32\x9b\x22\xa0\x04\xd5\xb6\xd5\x88\x9e\x0c\xb6\xdd\x98\x67\x67\xaf\x42\x5c\x16\x0f\x49\xe5\xce\x34\x7e\x7d\x3f\xe1\xed\x80\x09\xe7\xc8\x6c\x72\x15\x2a\x6c\x25\x62\x30\x22\xe4\x08\x93\x44\xb4\x95\x79\xe4\x81\xa1\x05\x85\xa8\x3e\x18\x67\x87\x7d\x9d\xec\x08\x2f\x89\x07\xf7\x37\xc7\x67\x91\x4a\xed\xd6\x3e\x7f\xd8\xc7\x7d\x03\x00\x00\xff\xff\x3a\x69\x68\xc8\xde\x00\x00\x00")

func typePassword_reset_tokenGqlBytes() ([]byte, error) {
	return bindataRead(
		_typePassword_reset_tokenGql,
		"type/password_reset_token.gql",
	)
}

func typePassword_reset_tokenGql() (*asset, error) {
	bytes, err := typePassword_reset_tokenGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/password_reset_token.gql", size: 222, mode: os.FileMode(420), modTime: time.Unix(1529253082, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeSearch_result_itemGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x41\x8b\xdb\x30\x10\x85\xef\xfa\x15\x6f\xc9\x7d\x7f\x80\xa1\x87\xb0\xf4\x10\x68\xa1\x34\xdb\xd3\xb2\x07\xd5\x1a\xdb\x82\x78\x94\x6a\x46\xb0\xa6\xc9\x7f\x2f\x52\xe4\xa4\xa9\x53\xf0\xc9\x32\x9a\xf7\xe6\xcd\x37\x68\x83\xd7\x81\x10\x49\xd2\x41\x11\x3a\x58\x08\xd9\xd8\x0e\xcf\x26\xb1\x0f\x8c\x7d\xf9\xfb\x5e\xee\x77\x4a\x23\x3e\xe1\x0b\x89\x04\xc6\x09\x7b\x4d\x6e\xc2\x09\x3f\x84\x62\xfd\x6c\x45\x48\x8d\xd9\x60\xcb\x20\xd7\x13\x3c\x5f\x2d\xe7\x2e\x3e\xdb\xb4\x81\x99\x5a\xf5\x81\x9f\x8d\x4e\x47\x5a\x34\xfa\x9c\xd5\xbf\x0d\xb0\xc1\x16\x6d\x8a\x12\x22\xba\x10\x91\xa4\x98\x1e\x6d\xef\xd9\x5e\xf4\xa8\xf7\x0d\xf6\x1a\x3d\xf7\x4f\xa6\xc8\xf2\x60\xa5\x97\x55\xe8\x40\x20\x76\x79\xc2\x72\x74\x3d\x65\x1d\x07\x47\xcd\xa2\x75\x95\xd3\x87\x62\xb4\xda\x0e\x24\x08\x5c\x74\x75\x82\x2e\x24\x76\x59\xaf\xf4\xa1\x5f\x2f\x25\x0d\xde\x5e\xe7\xbf\x77\x73\x2e\x0c\x70\xf0\x52\xa8\x5e\x74\x02\x1d\xec\xec\xe9\x60\x7b\xeb\x59\xf4\xc6\xe7\x57\xa2\x38\xfd\x07\xc7\xcb\x95\xd7\x15\xca\x6c\x9e\x87\x91\x9c\xa6\x1c\x1a\xbc\x3d\x42\xf9\x7e\x63\xc2\x69\xfc\x49\x31\x2b\x0f\x65\x93\xff\xc4\xca\x73\xde\x07\x42\x2d\x7c\x09\x89\xb5\xc1\x8e\xb5\x12\xbe\x65\xc8\x20\x65\x26\xfa\x28\x43\xed\xbf\xe3\x2e\xc4\xb1\xec\x0d\x1a\x60\xbd\x5b\x2e\xf3\x68\x7b\xca\x75\x0d\xbe\xd5\xd3\xd3\xa3\xf0\xa2\xc9\x79\x5a\x11\x3e\x17\x4e\x8b\xec\xf7\x66\x49\x28\xae\xb0\xca\x65\x2b\x9c\x60\xf3\x33\x58\xe9\x57\x9e\xcc\xdf\xa6\x67\xf3\x27\x00\x00\xff\xff\x8e\x77\xad\x9c\x95\x03\x00\x00")

func typeSearch_result_itemGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeSearch_result_itemGql,
		"type/search_result_item.gql",
	)
}

func typeSearch_result_itemGql() (*asset, error) {
	bytes, err := typeSearch_result_itemGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/search_result_item.gql", size: 917, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeStudyGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xcd\x8e\xe3\x36\x0c\xbe\xfb\x29\x38\x98\x43\x5b\x60\x31\x0f\xe0\x5b\x76\xb7\x68\x02\x4c\xbb\x83\x4c\x06\x3d\x14\x7b\x50\x2c\x26\x56\x61\x4b\x86\x44\x27\x08\x8a\x7d\xf7\x82\xa4\xff\xf2\xbb\x58\x60\xda\x53\x6e\xb2\xf8\x89\xa4\xf4\x7d\xa4\xac\x47\x58\x62\x13\x31\xa1\xa7\x04\x06\x12\xb5\xf6\xf0\x94\xd1\xa1\x41\x78\xe5\x31\xb8\xba\xa9\xb0\x16\xf3\xac\x69\x2a\x34\xeb\x0a\x3f\xc0\x1f\xc1\xe2\x07\x78\xf3\x6e\x13\x62\xbd\xc4\x14\xda\x58\xe0\x73\x28\x0c\xb1\x1d\xfe\xc9\x00\x1e\x61\x61\xd1\x93\xdb\x38\x4c\xb0\x2f\xd1\x03\x95\xa8\x01\x60\x6f\x12\x18\xbb\x33\xbe\x40\x0b\x86\x9e\x32\x18\x3e\x67\x94\xc3\xca\xd5\x98\x89\x8b\x25\x52\x1b\x3d\x67\x56\xb9\x44\xd0\x26\x8c\xec\x2c\x40\x69\x76\x08\x86\x13\xb2\x40\xa5\x4b\x3a\xe6\xe0\xe2\x8c\x3f\x7e\x73\x3b\x8c\xe9\xe7\x0c\x60\xea\x89\x93\xc0\x7e\x47\x4e\x93\x12\xdf\x54\x1a\x82\x22\xd4\x08\x66\x43\x18\x35\xdb\x06\x0b\xde\x80\x85\x6d\x15\xd6\xa6\x82\xc5\xe7\x27\xf1\x27\x90\x1c\x5e\x29\x3a\xbf\xcd\x7e\x3c\xc4\x1a\x37\x21\xe2\xed\x18\x8a\xb9\x15\x64\xe3\x62\x22\xf0\x63\x30\x66\x63\x08\xa7\x5e\x04\x93\xc3\xc2\xd3\x25\x0f\x95\xf9\xae\x03\x86\x1c\xad\xff\x12\x2d\x46\x46\x42\x11\xbc\xc7\x82\x5c\xf0\x0a\x0d\x6c\xf9\x78\xc8\x55\x29\x82\xcb\x00\x7e\xc9\xe1\x2d\x61\xfc\x34\x80\x1f\x4e\xb9\x4d\xce\x6f\x2b\x04\x93\x12\x12\x6c\x62\xd0\x14\x8a\x36\x46\xf4\xd4\x49\x66\x7d\x00\x6f\x6a\x65\x97\x71\xca\x2b\x4f\xf5\x27\xf4\x30\xc6\x9a\x31\xe2\xa2\x82\xc2\x46\x97\x27\x25\x63\x94\x64\xd8\xfb\x34\x38\xbf\xab\xe6\xbf\x51\x8d\xf3\x5b\x08\x0d\x6b\x40\x16\xf5\x54\x44\xf1\x8d\x76\xc2\xfd\x35\x65\x0d\xec\x9e\xa8\x4b\xe6\xce\x24\x36\xe9\x40\xec\xd5\x1a\x42\x30\xde\x02\xb9\x1a\xc7\x9e\x14\xd6\x7f\x63\x41\xd2\x94\x8a\x88\x86\xd0\x72\xd0\x6e\xd8\xf7\xa3\xce\xe3\x8a\xdd\x60\x2a\xa2\x93\x6d\xb0\x9e\x06\x0d\xf1\xaa\x89\x6d\xd4\xe5\x77\x57\x42\x44\x6f\x31\x72\x2f\x0b\x30\x5f\xfd\xfe\x7c\xe2\x8a\xa7\x72\x31\x88\x33\x67\x73\x58\x7c\xbe\x56\x46\x15\xa6\x14\xfc\xad\x3a\x6a\xeb\x35\x46\x0e\xa1\xd0\x5e\xec\x9c\xa1\xda\x84\x1c\x21\x54\x7d\x51\x80\x35\x0e\x34\x29\x25\x8a\x14\x8e\x1f\x00\x94\x89\x67\x81\x5f\x2b\x3c\x75\x96\xae\x64\x36\xe6\x73\xaf\xbe\xff\xa7\xfa\x7a\x3e\x7e\xa0\xfc\x94\xe0\x49\xed\xe9\xc4\x49\xe1\x55\xdd\x64\x2d\x09\xde\xd9\x7c\x37\x36\x8f\x8e\x5c\x4e\xf7\xac\xe5\xcd\xc3\x1e\x6a\xe3\x0f\x03\xbb\x54\x62\x44\x30\x11\xf5\x20\x5c\x3a\x2d\xb7\x4f\xa1\xf5\xea\x7f\xd2\xa9\xf8\x62\x3d\x6b\x6e\xc7\xb7\xed\x80\x15\xfb\x4f\x49\xd7\xec\x1d\x95\x7c\x99\x6a\x83\xe1\xa9\x3f\x1d\x95\x5f\x78\xe2\xc2\x52\x01\x9e\xc5\x09\x8a\xe6\xbe\x3e\xc1\xce\x57\xab\x17\x68\x0c\x95\x5d\x77\x9a\xee\x24\x76\xbf\xa0\x2f\x86\xca\x1c\xde\x96\x8b\xb3\xe6\xd8\x37\x21\x0a\x8d\x2b\x6e\xf5\x20\x05\xdc\x45\xfb\xbe\xa2\x5d\xf1\xa9\xde\xba\x9f\x2f\xbc\x10\x24\x4a\xdb\xd8\xfe\x46\xee\x86\x17\x6e\x64\x91\xc6\xdb\xf2\xf9\x82\x32\xda\x58\x4d\x05\x31\x37\xba\x83\x9d\xc3\x3d\xc6\xeb\x2f\x08\xb5\xcf\x4d\x92\x5f\x59\x9b\xc3\xc7\x10\x2a\x34\xfe\x21\xfb\x96\x65\x8f\x30\xf3\x80\x76\x8b\x20\x0f\x25\x0e\xfa\x7a\xfa\x70\xfa\x95\xcd\x93\xc7\x93\x7c\xeb\xbb\x68\xc6\xa2\x4b\x41\x6f\xd9\x36\x49\x61\x36\x66\xeb\xbc\xe9\x3b\xae\xda\x2f\xd4\x8b\x23\xac\xa1\xfb\x6f\x45\x6f\xfb\xca\xe1\x5c\xa4\xdc\x82\x15\xe6\x5b\x7b\xe8\xf2\x9c\xb4\xf2\x1b\xc9\x8e\xc4\x4c\x53\x9e\xcc\x76\x0f\x3a\xcf\x44\x1b\x75\x16\xc0\x38\x7b\x9e\x7a\x63\xb6\xc8\xb8\x1c\x5e\xba\x51\x97\xfe\x6c\x28\x41\xce\x56\xfe\xb5\x65\x90\xc3\x5f\xc3\x81\x7d\x3d\x85\xf2\x86\x52\xbf\xb3\x01\xfa\x75\x3c\x10\x0a\x64\x2a\x28\xb8\x85\x31\x9e\xcf\x67\x28\x9e\xe3\x5b\x4c\x90\xd3\x5e\xf7\x2d\xfb\x37\x00\x00\xff\xff\xba\x18\x29\x53\xfd\x0e\x00\x00")

func typeStudyGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeStudyGql,
		"type/study.gql",
	)
}

func typeStudyGql() (*asset, error) {
	bytes, err := typeStudyGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/study.gql", size: 3837, mode: os.FileMode(420), modTime: time.Unix(1529355080, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeText_matchGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\xb1\x8e\x83\x30\x10\x04\xd0\xde\x5f\x31\x88\x9e\x0f\xa0\xbb\xee\x9a\xab\x8e\xee\x74\x85\xe5\x2c\xde\x95\xc0\x58\xf6\x46\x01\x45\xf9\xf7\x28\x10\x3b\x69\xd2\xae\x66\xde\x4e\x8b\x2f\x28\xad\x8a\xd9\xaa\x63\x5c\x44\x59\x02\x2c\x32\xd9\xe4\x18\x89\xf2\x79\xd2\xce\xe8\x16\x09\x03\xad\xfa\xb3\xc7\xae\x06\x68\x31\x30\x21\x47\x72\x32\x8a\x3b\x90\x31\x59\x3f\x53\xd0\xe2\x28\x13\x62\x5a\x22\x25\xdd\x8e\x0f\x74\xc2\x12\x3a\x83\x1a\xed\xf1\xab\x49\x82\x6f\xcc\x6e\x7e\x8b\xe7\x49\x3c\x6b\x7e\x37\x4a\xb5\x94\x1e\x00\xd7\x64\x8f\xbf\x3a\xad\xf6\x9b\xff\xa7\x38\x7c\xde\x50\xce\xaf\x0d\x37\x73\x0f\x00\x00\xff\xff\x85\x02\x5a\x83\x11\x01\x00\x00")

func typeText_matchGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeText_matchGql,
		"type/text_match.gql",
	)
}

func typeText_matchGql() (*asset, error) {
	bytes, err := typeText_matchGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/text_match.gql", size: 273, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeText_match_highlightGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8c\x41\x4a\xc0\x30\x10\x45\xf7\x39\xc5\x2f\xdd\xf7\x00\x3d\x81\x5d\xb8\xd1\x5e\x20\x36\xdf\xcc\x40\x3b\x94\x64\xc4\x8a\x78\x77\x49\x94\x82\x5b\x57\x33\xff\xf3\xdf\x1b\xf1\xc4\xb3\xb0\xd2\xbc\x22\xa2\xaa\xe5\x9d\x10\xcd\xb2\x6b\x16\x87\x5a\x6b\x19\xcb\x26\x28\xac\x6f\xbb\xe3\x88\xbe\xc9\x14\xfc\xe3\x24\x56\x5e\xfe\xd8\xf2\xc3\x4d\x7c\x06\x60\xc4\x2a\x84\x5a\xd2\xad\x1d\xb8\x10\xaf\x25\xe6\x83\xe6\x78\x17\x16\xf6\xaa\x9b\x98\xe0\xbc\x1c\x2f\xcc\x6a\x75\x0a\xf8\xf9\x96\x0e\xcf\x58\xcc\x87\x00\xfc\x53\x4a\x4b\x5d\x49\x4b\x7f\x84\xb7\xae\xaf\x7e\x91\x36\x6c\x79\xc6\xb3\x17\xb5\x3c\x84\xaf\xf0\x1d\x00\x00\xff\xff\x19\xba\x60\xb4\x20\x01\x00\x00")

func typeText_match_highlightGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeText_match_highlightGql,
		"type/text_match_highlight.gql",
	)
}

func typeText_match_highlightGql() (*asset, error) {
	bytes, err := typeText_match_highlightGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/text_match_highlight.gql", size: 288, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeTopicGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x41\x8b\x1b\x3d\x0c\xbd\xcf\xaf\x78\x1f\xb9\x7e\xec\x0f\x98\x5b\xd8\x16\x36\x90\x96\x90\x4e\x4e\x65\x0f\x5e\x5b\xc9\xb8\xcc\xc8\x83\xad\x61\x29\xa5\xff\xbd\x48\x71\x92\x21\x9b\x42\x6f\xb2\xf5\xf4\xf4\xf4\xa4\x15\xf6\x34\x65\x2a\xc4\x52\xe0\x20\x69\x8a\xfe\xa9\x91\x9f\x13\xa1\xd3\x18\x71\x9c\x06\x1a\x2d\xfd\x35\x05\xfa\x1f\x07\x8e\xc7\x94\xc7\x3d\x95\x34\x67\x4f\xdb\xe4\x9d\xb8\xb7\x81\xf0\xab\x01\x56\xd8\x04\x62\x89\xc7\x48\x05\xd2\x13\x82\x13\x82\xe3\x00\x89\x23\xe1\xbd\x27\xb6\xef\xf4\xf6\x83\xbc\xe0\xdd\x15\xf8\x4c\x4e\x28\x3c\x35\xb8\x84\x6b\x69\xd1\xc5\x91\xfe\x6b\x8c\xb1\x53\x1a\x2a\x3e\xc7\x49\x62\x62\xa4\xa3\x51\x54\xa9\x58\xe6\x5a\x7c\x93\x1c\xf9\xf4\x0f\x95\xc8\xc4\x81\x32\x05\x48\xc2\x4b\xf7\x65\x7b\x47\xa5\x5f\xad\x25\x8c\x2c\x86\x16\x9b\x4f\x0b\x5e\x76\x23\x7d\x90\xa2\x9f\x0f\x34\xbc\x74\xdd\x0e\x93\x93\x1e\xc7\x94\x21\x7d\x2c\xb7\x92\x5c\x7d\xdc\x39\xe9\x5b\x1c\xf6\x9b\x5a\xb7\xf0\xf1\xea\xda\x59\xb8\x9a\x36\xb8\x22\x98\xa7\x70\x71\xae\x86\x0f\x9c\xb3\xde\x87\xfd\xf6\x41\xeb\x39\x0f\xb5\xe3\xef\xa6\x59\x61\xcd\xa0\x70\x22\xd8\xf2\x15\xdd\xdd\x1f\xc3\x67\x4d\x2f\x0e\xc2\xde\xe7\xb5\xaf\xe1\xe7\x5c\x52\xb6\xc2\xb9\x10\x22\x63\x72\xa7\xc8\x4e\xcd\xb4\xe5\x5a\xfe\x81\x3b\x51\x68\x84\x13\x9b\x90\x38\x5c\x4c\x55\x2d\xe6\x69\x0a\xd4\x9e\xfb\x57\x9d\xf0\x89\x99\xbc\xad\xf4\xef\x62\x9f\x6f\xa0\x85\xe4\xc5\x6f\xbd\x57\xd6\x6b\x76\x67\xb2\x04\x17\xc3\x47\xe9\x93\x3b\x91\xe2\x5a\xec\x6a\x54\xe5\xaf\x31\xc4\x22\xaa\x58\xd5\x16\xc5\x5a\xd0\xe2\xfb\xd5\xb0\xd7\x7b\xa8\x0e\x54\x2e\x93\x5d\xa1\xaf\x37\x43\x24\x89\x1b\xe0\xd3\xcc\x86\x57\x7f\x8a\x8a\x52\x57\x6e\xa3\x2b\x83\x21\x9f\x15\xd8\x62\xc3\xa2\x8b\xfc\x13\x00\x00\xff\xff\x8c\x90\xbd\xb1\xd1\x03\x00\x00")

func typeTopicGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeTopicGql,
		"type/topic.gql",
	)
}

func typeTopicGql() (*asset, error) {
	bytes, err := typeTopicGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/topic.gql", size: 977, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeUpdate_topics_payloadGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6a\x03\x30\x0c\x44\x77\x7f\xc5\x85\xec\xf9\x80\xec\x5d\x4b\x69\xd3\xa9\x74\x10\x91\x12\x1b\x12\xcb\xc8\x72\x8a\x29\xfd\xf7\x62\x25\x85\x6e\xc7\xf1\xee\x49\x5b\xbc\x8a\x0f\xab\xf0\xd9\x04\x27\x35\xbc\x37\x26\x97\x83\xb6\x72\xec\xbb\x14\xf5\xff\xea\x85\xe6\x45\x89\xf1\x9d\x80\x2d\x9e\xe9\x2a\x1d\x7a\x82\x67\x41\x33\xbd\x15\x16\x86\x07\x09\xcf\xe4\x20\x13\x54\x75\xdc\xe8\x52\x78\x97\x80\x52\x23\x86\x2d\xe6\x7b\x7c\xbc\xb9\x95\x7a\xde\x7c\xa6\x90\x3e\x99\xa9\xe1\x2a\xbd\xd3\x59\x40\xbd\xeb\xb1\x90\x0b\xe3\xab\x78\xfe\xdb\xdf\x8f\xa0\x2e\xc3\xd2\x3e\xf0\x3d\x1e\xae\xbb\xea\x90\x05\x23\xbe\x67\x74\x1f\x3c\x17\x1a\x61\x81\x83\xe7\x26\xfd\xa4\xdf\x00\x00\x00\xff\xff\x1f\xb4\xd6\x91\x04\x01\x00\x00")

func typeUpdate_topics_payloadGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeUpdate_topics_payloadGql,
		"type/update_topics_payload.gql",
	)
}

func typeUpdate_topics_payloadGql() (*asset, error) {
	bytes, err := typeUpdate_topics_payloadGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/update_topics_payload.gql", size: 260, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeUserGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\xcd\x6e\x23\x37\x0c\xbe\xcf\x53\x70\xb1\x87\xb6\x40\x91\x07\x98\x9b\xf7\xa7\x58\x03\xe9\x36\x48\xec\xf6\x50\xec\x41\x1e\x71\x6c\x16\x33\xe2\x40\xe2\xd4\x08\x16\x7d\xf7\x82\x94\xc6\x19\xc7\xce\x6e\x0c\x2c\x72\xca\xc9\xb4\xc4\xef\x23\x45\x7e\xe2\xe8\x2d\xdc\xe2\x10\x31\x61\x90\x04\x0e\xc6\x84\xf1\xaa\x92\xfb\x01\x61\x9d\x30\x02\xf5\x43\x87\xbd\x6d\x7e\x66\x8f\xbf\xc2\x3a\x50\xcb\xb1\xbf\xc5\xc4\x63\x6c\xf0\x9a\x1b\x27\x6e\xd3\x21\x7c\xad\x00\x94\x4c\xc6\x18\x94\xa9\xa3\x24\xc0\x2d\xb8\x94\x50\x12\xc8\xce\x09\xc8\x0e\x2d\x02\xf0\x3e\xa4\xab\x0a\xca\xe6\xcf\x15\xc0\x1c\xac\x6e\x38\x85\xa5\x60\xff\x8d\xce\x48\x1a\xee\x11\x5c\x2b\x18\x6d\x23\x0d\xd8\x50\x4b\xe8\x61\xdb\xf1\xc6\x75\xb0\xfc\x70\x65\x7c\xe6\x52\xc3\x9d\x44\x0a\xdb\xea\xf2\x10\x1b\x6c\x39\xe2\xb7\x63\x64\x9f\x6f\x05\x69\x29\x26\x81\xf0\x10\x4c\xab\x77\x08\x97\x59\xcc\xa7\x86\x65\x90\x73\x0c\x9d\xfb\x2e\x81\xba\x1c\xe1\xff\x88\x1e\x35\x23\xe0\x41\x88\x83\x81\xa6\x4e\x44\xe3\x46\x0f\x6d\xe4\x4c\xd4\x70\x08\xd8\xa8\x63\xa6\x63\x45\xbf\xbb\xaf\x4d\x02\x0b\x45\x19\x5f\x05\xf0\xcb\x6c\xed\xfd\x01\xf5\xa6\xb2\xde\xaf\x4a\x77\x7f\x4a\x30\x8c\x9b\x8e\x1a\x18\x22\xb7\xd4\x21\x6c\x88\x95\x79\x43\x3c\x95\xea\x39\x10\x70\x09\x3e\xad\x7e\xbf\x2e\x50\x35\x6b\x5b\x28\xe0\xa5\xc7\x20\xda\x96\x5c\x27\xef\x04\xc1\x05\x0f\x42\x3d\xc2\x7e\x87\xb9\xab\xbc\xf9\x07\x1b\x81\xbd\x4b\xd0\x44\x74\x82\x5e\xf9\x8a\xb9\x90\x1a\x56\xd4\xe3\x77\xd3\xc1\xde\x51\xa7\x40\x33\x1e\x9d\xe2\x54\xf4\xf2\x40\x64\x80\x74\x80\xbe\x8a\xfd\xc7\x89\xdd\xf4\xf8\x51\xab\xfa\x48\x8b\xe4\x6b\x58\x7e\x28\xdd\xf9\x6b\x87\xb2\xd3\x99\x13\x21\xb0\x9e\x99\x52\x1e\x42\xa4\x1d\x4b\xa4\xaa\xf1\x3d\x05\x4a\x12\x9d\x70\xd4\x28\x94\xee\x48\x70\xa1\xcb\x35\xbc\x63\xee\xd0\x85\x67\xd0\x69\xa2\xff\x12\xee\xf5\xe6\xe5\x49\xaa\x54\x7f\x12\xee\xb5\x39\xc7\x3c\xa7\xa2\xe9\x30\x25\x0e\x4f\x8d\xca\xb2\xfb\x2a\x9f\x17\x99\x95\x53\x2f\x2e\x18\x96\xd7\x06\x99\x4d\xca\xbc\xf0\xe4\x98\x0c\xae\x37\xc3\x83\x30\x74\xbc\x25\x23\x34\xe3\xd9\x53\x52\x39\x14\xa5\xbf\x67\x40\x9f\x56\xab\x1b\x18\x9c\xec\xec\x4c\x07\xa9\x2a\x22\x96\x0f\xf8\x8d\x93\x5d\x0d\xeb\xdb\x65\x81\xfd\x46\xc1\x43\x92\xd1\xdf\xc3\xe6\x1e\x48\xd2\x21\x86\x2d\x4e\xf2\xfb\xac\xc9\x73\x5b\x3c\x85\xa1\xa5\xe0\x73\x41\x8e\x73\xb1\x4a\xdc\xa9\x57\xe6\x5f\x1c\xe4\xae\xd0\x3c\xbb\xcf\xc9\xbd\xec\xbe\xca\xfd\x45\xe4\x3e\xf5\xe2\x02\xb9\x5b\x4f\x67\x6a\xb7\xff\x27\x62\xbf\xf8\x1b\x6d\x47\x1a\x07\x3f\x7d\xa8\x8b\x79\xe6\x43\x6d\xe2\x5e\xdf\x5e\x9f\x6a\x7b\x8c\x5d\x91\xf4\x7f\x55\xf5\x16\x16\x01\xd0\x6f\x11\xec\x55\xab\xce\xeb\xe3\x47\xee\x47\xdd\x9c\x3d\x74\xed\xff\xd7\xa2\xd6\x66\x8c\x89\xa3\xc1\xc6\x84\xaa\x87\xc1\x6d\x29\xb8\xa9\x22\x79\xff\xcc\xdd\x23\xc1\x1e\x8a\xb2\x31\xf8\xe9\x55\xa0\x99\xd8\x8d\x65\x8f\xf9\x31\x55\x92\x9c\x55\xfa\xc9\x4c\x1f\xca\x3b\xcf\x77\xb6\x9a\xb3\x5e\x06\x15\x82\xcb\x54\x0c\x8e\xfc\x69\xde\x83\xdb\xa2\xfa\xd5\x70\x53\xac\x37\x8f\x2f\xa8\xa6\x9a\x1f\x2e\x6a\xd4\xf0\xf7\x54\xac\x2f\x8f\x3d\xf5\x30\x69\x3a\xd5\xe4\xf9\xe5\xa1\x16\xc2\xe2\x3a\x68\x78\x0c\xe6\xae\xa5\x39\x5c\xad\x63\x81\x99\xe7\x7b\x75\x34\xd1\x6a\x07\xff\x0f\x00\x00\xff\xff\xfc\x6c\x4c\xa5\xa2\x0c\x00\x00")

func typeUserGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeUserGql,
		"type/user.gql",
	)
}

func typeUserGql() (*asset, error) {
	bytes, err := typeUserGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/user.gql", size: 3234, mode: os.FileMode(420), modTime: time.Unix(1529353373, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typeUser_assetGql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xc1\x6e\xdb\x3e\x0c\xc6\xef\x7e\x8a\xef\x8f\x5e\xff\xe8\x03\xf8\x16\x74\x03\x16\xa0\x28\x8a\x34\x39\x0d\x3d\x28\x16\x13\x6b\x93\x25\x43\xa2\x10\x64\x43\xdf\x7d\xa0\x2c\xc7\x4e\xe2\x01\xeb\x4d\xa6\x3f\xd2\x1f\x7f\x22\xfd\x80\x0d\xf5\x81\x22\x39\x8e\x50\x48\x91\xc2\x63\xc5\xe7\x9e\xb0\x8b\x14\x56\x31\x12\xc3\x74\xbd\xa5\x2e\x2b\x5e\xbc\xa6\xff\xb1\x73\xe6\xe0\x43\xb7\xa1\xe8\x53\x68\xe8\xd9\x37\x8a\xd5\xde\x12\x7e\x57\xc0\x03\xd6\x9a\x1c\x9b\x83\xa1\x08\x6e\x09\x5a\x31\x41\x39\x0d\x36\x1d\xe1\xd4\x92\xcb\x61\xbf\xff\x41\x0d\xe3\xa4\x22\x9a\x40\x8a\x49\x3f\x56\x18\x8f\x2b\xae\xb1\x35\x1d\xfd\x57\xe5\x8a\x6f\xf9\x3b\x48\xc1\xe2\xe0\x83\xb8\xc4\xc9\x70\x8b\xf6\xdc\x53\xb0\xc6\xfd\x8c\x92\xdb\x06\x3a\xd4\xd8\x6d\xd6\x39\xcb\xe8\x1a\xeb\x2f\xa5\xc0\xb6\x25\x38\xd5\x11\xfc\x01\xdc\x9a\x08\x25\x9d\x49\x92\x44\x6b\xbc\x71\x30\xee\x38\x13\xfb\x60\x8e\xc6\x29\xbb\x90\x35\xb4\x90\x7a\xeb\x95\x1e\x4c\x8f\xe2\x97\xbf\xd4\x3a\x39\x0a\xf7\x5f\xce\xe1\x3a\x73\x2e\xe2\x4f\x83\xeb\xd3\xde\x9a\xd8\x0e\x2e\x2e\x0f\x23\xbc\xc9\xc1\xb7\xed\xf6\x15\xbd\xe2\x36\xe3\xbb\xb6\x11\xca\x2d\xbe\x2a\x6e\x27\x7a\x43\xde\xfe\xcc\x84\x68\x7e\x15\x02\x34\x65\x49\xb0\xc6\xda\xf1\x4c\x1d\x39\xe9\xb3\x48\x7c\x63\xe4\x12\x87\x3b\xba\xfe\x5a\xd6\x08\xa3\xa4\xcf\xf3\xd4\xb4\xcf\x43\x77\x07\xa9\xbc\x58\xa0\xba\xac\x5f\x10\x7f\x9a\xaa\x55\x91\x91\x7a\x3d\xce\x64\x39\xde\xcc\xe4\x85\xeb\x6e\xf3\xbc\x80\x35\x05\x5b\x68\x7e\x54\xd5\x03\x56\x0e\xa4\x8f\xc5\xb5\xa8\x2f\xeb\x75\xbb\x6e\x5f\x45\x36\x5b\xb9\xfc\x3c\x2c\xd6\x0a\x4d\x0a\xd1\x87\xcb\x12\x18\x87\x5e\xc9\xe8\xb1\xf1\x2e\xaf\x4f\x7e\xbf\x40\xcb\x30\x75\x50\x9c\x5b\x25\xa7\xc7\xfb\x14\x4f\x79\x0b\xbc\xa6\x7a\xf2\x50\x3c\xa3\xf1\xce\x51\x23\xc5\xff\xc1\xf8\xd3\x24\x9e\xd9\x9f\x45\xcb\xdf\xc1\xc9\xbf\x43\x0d\x45\x3d\x94\xd1\xf7\x6d\xf4\xea\x48\xa2\xab\xf1\x5a\x4e\xa5\x95\x15\xac\x89\x2c\xee\xc5\x79\xde\xfa\x7c\xa8\xf1\xfd\x0a\xe0\xfb\xad\x5c\x1a\x8c\x63\xa7\x57\xf2\xf7\xd9\x48\x79\x56\x16\x8d\x4f\x2e\xe7\x08\xb3\x28\xe6\x84\xd4\x84\x22\x8f\x99\x28\x9f\x44\x58\x96\xe0\xa3\xfa\x13\x00\x00\xff\xff\x06\x19\xac\x5e\x4a\x05\x00\x00")

func typeUser_assetGqlBytes() ([]byte, error) {
	return bindataRead(
		_typeUser_assetGql,
		"type/user_asset.gql",
	)
}

func typeUser_assetGql() (*asset, error) {
	bytes, err := typeUser_assetGqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "type/user_asset.gql", size: 1354, mode: os.FileMode(420), modTime: time.Unix(1529074640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"enum/apple_order_field.gql": enumApple_order_fieldGql,
	"enum/email_type.gql": enumEmail_typeGql,
	"enum/lesson_comment_order_field.gql": enumLesson_comment_order_fieldGql,
	"enum/lesson_order_field.gql": enumLesson_order_fieldGql,
	"enum/order_direction.gql": enumOrder_directionGql,
	"enum/search_order_field.gql": enumSearch_order_fieldGql,
	"enum/search_type.gql": enumSearch_typeGql,
	"enum/study_order_field.gql": enumStudy_order_fieldGql,
	"enum/user_asset_order_field.gql": enumUser_asset_order_fieldGql,
	"input/add_apple.gql": inputAdd_appleGql,
	"input/add_email.gql": inputAdd_emailGql,
	"input/add_lesson_comment.gql": inputAdd_lesson_commentGql,
	"input/apple_order.gql": inputApple_orderGql,
	"input/create_lesson.gql": inputCreate_lessonGql,
	"input/create_study.gql": inputCreate_studyGql,
	"input/create_user.gql": inputCreate_userGql,
	"input/delete_email.gql": inputDelete_emailGql,
	"input/delete_lesson.gql": inputDelete_lessonGql,
	"input/delete_lesson_comment.gql": inputDelete_lesson_commentGql,
	"input/delete_study.gql": inputDelete_studyGql,
	"input/delete_user.gql": inputDelete_userGql,
	"input/lesson_comment_order.gql": inputLesson_comment_orderGql,
	"input/lesson_order.gql": inputLesson_orderGql,
	"input/move_lesson.gql": inputMove_lessonGql,
	"input/remove_apple.gql": inputRemove_appleGql,
	"input/request_email_verification.gql": inputRequest_email_verificationGql,
	"input/request_password_reset.gql": inputRequest_password_resetGql,
	"input/reset_password.gql": inputReset_passwordGql,
	"input/search_order.gql": inputSearch_orderGql,
	"input/study_order.gql": inputStudy_orderGql,
	"input/update_email.gql": inputUpdate_emailGql,
	"input/update_lesson.gql": inputUpdate_lessonGql,
	"input/update_lesson_comment.gql": inputUpdate_lesson_commentGql,
	"input/update_study.gql": inputUpdate_studyGql,
	"input/update_topics.gql": inputUpdate_topicsGql,
	"input/update_user.gql": inputUpdate_userGql,
	"input/user_asset_order.gql": inputUser_asset_orderGql,
	"interface/appleable.gql": interfaceAppleableGql,
	"interface/authorable.gql": interfaceAuthorableGql,
	"interface/connection.gql": interfaceConnectionGql,
	"interface/deletable.gql": interfaceDeletableGql,
	"interface/edge.gql": interfaceEdgeGql,
	"interface/node.gql": interfaceNodeGql,
	"interface/study_node.gql": interfaceStudy_nodeGql,
	"interface/token.gql": interfaceTokenGql,
	"interface/uniform_resource_locatable.gql": interfaceUniform_resource_locatableGql,
	"interface/updateable.gql": interfaceUpdateableGql,
	"scalar/html.gql": scalarHtmlGql,
	"scalar/time.gql": scalarTimeGql,
	"scalar/uri.gql": scalarUriGql,
	"schema.gql": schemaGql,
	"type/add_email_payload.gql": typeAdd_email_payloadGql,
	"type/add_lesson_comment_payload.gql": typeAdd_lesson_comment_payloadGql,
	"type/delete_email_payload.gql": typeDelete_email_payloadGql,
	"type/delete_lesson_commentpayload.gql": typeDelete_lesson_commentpayloadGql,
	"type/delete_lesson_payload.gql": typeDelete_lesson_payloadGql,
	"type/delete_study_payload.gql": typeDelete_study_payloadGql,
	"type/email.gql": typeEmailGql,
	"type/email_verification_token.gql": typeEmail_verification_tokenGql,
	"type/lesson.gql": typeLessonGql,
	"type/lesson_comment.gql": typeLesson_commentGql,
	"type/page_info.gql": typePage_infoGql,
	"type/password_reset_token.gql": typePassword_reset_tokenGql,
	"type/search_result_item.gql": typeSearch_result_itemGql,
	"type/study.gql": typeStudyGql,
	"type/text_match.gql": typeText_matchGql,
	"type/text_match_highlight.gql": typeText_match_highlightGql,
	"type/topic.gql": typeTopicGql,
	"type/update_topics_payload.gql": typeUpdate_topics_payloadGql,
	"type/user.gql": typeUserGql,
	"type/user_asset.gql": typeUser_assetGql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"enum": &bintree{nil, map[string]*bintree{
		"apple_order_field.gql": &bintree{enumApple_order_fieldGql, map[string]*bintree{}},
		"email_type.gql": &bintree{enumEmail_typeGql, map[string]*bintree{}},
		"lesson_comment_order_field.gql": &bintree{enumLesson_comment_order_fieldGql, map[string]*bintree{}},
		"lesson_order_field.gql": &bintree{enumLesson_order_fieldGql, map[string]*bintree{}},
		"order_direction.gql": &bintree{enumOrder_directionGql, map[string]*bintree{}},
		"search_order_field.gql": &bintree{enumSearch_order_fieldGql, map[string]*bintree{}},
		"search_type.gql": &bintree{enumSearch_typeGql, map[string]*bintree{}},
		"study_order_field.gql": &bintree{enumStudy_order_fieldGql, map[string]*bintree{}},
		"user_asset_order_field.gql": &bintree{enumUser_asset_order_fieldGql, map[string]*bintree{}},
	}},
	"input": &bintree{nil, map[string]*bintree{
		"add_apple.gql": &bintree{inputAdd_appleGql, map[string]*bintree{}},
		"add_email.gql": &bintree{inputAdd_emailGql, map[string]*bintree{}},
		"add_lesson_comment.gql": &bintree{inputAdd_lesson_commentGql, map[string]*bintree{}},
		"apple_order.gql": &bintree{inputApple_orderGql, map[string]*bintree{}},
		"create_lesson.gql": &bintree{inputCreate_lessonGql, map[string]*bintree{}},
		"create_study.gql": &bintree{inputCreate_studyGql, map[string]*bintree{}},
		"create_user.gql": &bintree{inputCreate_userGql, map[string]*bintree{}},
		"delete_email.gql": &bintree{inputDelete_emailGql, map[string]*bintree{}},
		"delete_lesson.gql": &bintree{inputDelete_lessonGql, map[string]*bintree{}},
		"delete_lesson_comment.gql": &bintree{inputDelete_lesson_commentGql, map[string]*bintree{}},
		"delete_study.gql": &bintree{inputDelete_studyGql, map[string]*bintree{}},
		"delete_user.gql": &bintree{inputDelete_userGql, map[string]*bintree{}},
		"lesson_comment_order.gql": &bintree{inputLesson_comment_orderGql, map[string]*bintree{}},
		"lesson_order.gql": &bintree{inputLesson_orderGql, map[string]*bintree{}},
		"move_lesson.gql": &bintree{inputMove_lessonGql, map[string]*bintree{}},
		"remove_apple.gql": &bintree{inputRemove_appleGql, map[string]*bintree{}},
		"request_email_verification.gql": &bintree{inputRequest_email_verificationGql, map[string]*bintree{}},
		"request_password_reset.gql": &bintree{inputRequest_password_resetGql, map[string]*bintree{}},
		"reset_password.gql": &bintree{inputReset_passwordGql, map[string]*bintree{}},
		"search_order.gql": &bintree{inputSearch_orderGql, map[string]*bintree{}},
		"study_order.gql": &bintree{inputStudy_orderGql, map[string]*bintree{}},
		"update_email.gql": &bintree{inputUpdate_emailGql, map[string]*bintree{}},
		"update_lesson.gql": &bintree{inputUpdate_lessonGql, map[string]*bintree{}},
		"update_lesson_comment.gql": &bintree{inputUpdate_lesson_commentGql, map[string]*bintree{}},
		"update_study.gql": &bintree{inputUpdate_studyGql, map[string]*bintree{}},
		"update_topics.gql": &bintree{inputUpdate_topicsGql, map[string]*bintree{}},
		"update_user.gql": &bintree{inputUpdate_userGql, map[string]*bintree{}},
		"user_asset_order.gql": &bintree{inputUser_asset_orderGql, map[string]*bintree{}},
	}},
	"interface": &bintree{nil, map[string]*bintree{
		"appleable.gql": &bintree{interfaceAppleableGql, map[string]*bintree{}},
		"authorable.gql": &bintree{interfaceAuthorableGql, map[string]*bintree{}},
		"connection.gql": &bintree{interfaceConnectionGql, map[string]*bintree{}},
		"deletable.gql": &bintree{interfaceDeletableGql, map[string]*bintree{}},
		"edge.gql": &bintree{interfaceEdgeGql, map[string]*bintree{}},
		"node.gql": &bintree{interfaceNodeGql, map[string]*bintree{}},
		"study_node.gql": &bintree{interfaceStudy_nodeGql, map[string]*bintree{}},
		"token.gql": &bintree{interfaceTokenGql, map[string]*bintree{}},
		"uniform_resource_locatable.gql": &bintree{interfaceUniform_resource_locatableGql, map[string]*bintree{}},
		"updateable.gql": &bintree{interfaceUpdateableGql, map[string]*bintree{}},
	}},
	"scalar": &bintree{nil, map[string]*bintree{
		"html.gql": &bintree{scalarHtmlGql, map[string]*bintree{}},
		"time.gql": &bintree{scalarTimeGql, map[string]*bintree{}},
		"uri.gql": &bintree{scalarUriGql, map[string]*bintree{}},
	}},
	"schema.gql": &bintree{schemaGql, map[string]*bintree{}},
	"type": &bintree{nil, map[string]*bintree{
		"add_email_payload.gql": &bintree{typeAdd_email_payloadGql, map[string]*bintree{}},
		"add_lesson_comment_payload.gql": &bintree{typeAdd_lesson_comment_payloadGql, map[string]*bintree{}},
		"delete_email_payload.gql": &bintree{typeDelete_email_payloadGql, map[string]*bintree{}},
		"delete_lesson_commentpayload.gql": &bintree{typeDelete_lesson_commentpayloadGql, map[string]*bintree{}},
		"delete_lesson_payload.gql": &bintree{typeDelete_lesson_payloadGql, map[string]*bintree{}},
		"delete_study_payload.gql": &bintree{typeDelete_study_payloadGql, map[string]*bintree{}},
		"email.gql": &bintree{typeEmailGql, map[string]*bintree{}},
		"email_verification_token.gql": &bintree{typeEmail_verification_tokenGql, map[string]*bintree{}},
		"lesson.gql": &bintree{typeLessonGql, map[string]*bintree{}},
		"lesson_comment.gql": &bintree{typeLesson_commentGql, map[string]*bintree{}},
		"page_info.gql": &bintree{typePage_infoGql, map[string]*bintree{}},
		"password_reset_token.gql": &bintree{typePassword_reset_tokenGql, map[string]*bintree{}},
		"search_result_item.gql": &bintree{typeSearch_result_itemGql, map[string]*bintree{}},
		"study.gql": &bintree{typeStudyGql, map[string]*bintree{}},
		"text_match.gql": &bintree{typeText_matchGql, map[string]*bintree{}},
		"text_match_highlight.gql": &bintree{typeText_match_highlightGql, map[string]*bintree{}},
		"topic.gql": &bintree{typeTopicGql, map[string]*bintree{}},
		"update_topics_payload.gql": &bintree{typeUpdate_topics_payloadGql, map[string]*bintree{}},
		"user.gql": &bintree{typeUserGql, map[string]*bintree{}},
		"user_asset.gql": &bintree{typeUser_assetGql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

